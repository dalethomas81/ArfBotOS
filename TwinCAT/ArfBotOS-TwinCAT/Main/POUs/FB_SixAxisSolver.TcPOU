<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_SixAxisSolver" Id="{08dac8fa-d5e4-4e88-a260-52ba0589b8a2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SixAxisSolver
VAR_OUTPUT
	ip : ITcNcTrafo;
END_VAR
VAR
	{attribute 'TcInitSymbol'}
	{attribute 'displaymode':='hex'}
	nObjId : OTCID;
	iid : IID := TC_GLOBAL_IID_LIST.IID_ITcNcTrafo;
	hrInit : HRESULT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="FB_Exit" Id="{8c73e2a5-4bff-4be4-989a-253a3ef82c5d}">
      <Declaration><![CDATA[//FB_Exit must be implemented explicitly. If there is an implementation, then the
//method is called before the controller removes the code of the function block instance
//(implicit call). The return value is not evaluated.
METHOD FB_Exit: BOOL
VAR_INPUT
    bInCopyCode: BOOL;  // TRUE: the exit method is called in order to leave the instance which will be copied afterwards (online change).  
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bInCopyCode THEN // if not online change
	FW_SafeRelease(ADR(ip));
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_Init" Id="{48959f41-9c7c-484e-91bb-a35c0653c901}">
      <Declaration><![CDATA[//FB_Init is always available implicitly and it is used primarily for initialization.
//The return value is not evaluated. For a specific influence, you can also declare the
//methods explicitly and provide additional code there with the standard initialization
//code. You can evaluate the return value.
METHOD FB_Init: BOOL
VAR_INPUT
    bInitRetains: BOOL; // TRUE: the retain variables are initialized (reset warm / reset cold)
    bInCopyCode: BOOL;  // TRUE: the instance will be copied to the copy code afterward (online change)   
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bInCopyCode THEN // if not online change
	IF nObjID <> 0 THEN
		hrInit := FW_ObjMgr_GetObjectInstance(oid:=nObjID, iid:=iid, pipUnk:=ADR(ip));
	ELSE
		hrInit := E_HRESULTAdsErr.INVALIDOBJID;
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
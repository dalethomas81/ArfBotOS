<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="" productName="CODESYS" productVersion="CODESYS V3.5 SP20" creationDateTime="2024-06-30T00:16:29.9694555" />
  <contentHeader name="ArfBot.project" modificationDateTime="2024-06-30T00:11:20.0420145">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation>
          <property name="Project" type="string">ArfBot</property>
        </ProjectInformation>
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations>
      <configuration name="Device">
        <resource name="Application">
          <task name="MainTask" interval="PT0.001S" priority="2">
            <pouInstance name="_00_Main" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="_10_Drives" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="_20_Io" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="_40_Vision" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="1" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>eafe4677-fa00-4970-b015-251c89fffd79</ObjectId>
              </data>
            </addData>
          </task>
          <task name="SoftMotion_PlanningTask" interval="PT0.00005S" priority="3">
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="50" IntervalUnit="µs" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" Time="10" TimeUnit="ms" Sensitivity="1" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>5a42e1b4-5f13-4f3e-9a38-abed03da7807</ObjectId>
              </data>
            </addData>
          </task>
          <task name="VISU_TASK" interval="PT0.1S" priority="31">
            <pouInstance name="VisuElems.Visu_Prg" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <pouInstance name="_30_Visu" typeName="">
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml" />
              </documentation>
            </pouInstance>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="100" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>7d686a67-c501-4ade-ac77-336899e42115</ObjectId>
              </data>
            </addData>
          </task>
          <task name="EtherCAT_Task" interval="PT0.004S" priority="1">
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
                <TaskSettings KindOfTask="Cyclic" Interval="t#4ms" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                  <Watchdog Enabled="false" TimeUnit="ms" />
                </TaskSettings>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>7ed10bf7-6aec-4271-9633-681eae31fe92</ObjectId>
              </data>
            </addData>
          </task>
          <globalVars name="GVL" constant="true">
            <variable name="dwMainInterval">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="3000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
              </documentation>
            </variable>
            <variable name="dwMotionInterval">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
              </documentation>
            </variable>
            <variable name="dwVisionInterval">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="20000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
              </documentation>
            </variable>
            <variable name="dwVisuInterval">
              <type>
                <DWORD />
              </type>
              <initialValue>
                <simpleValue value="100000" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
              </documentation>
            </variable>
            <variable name="DIG_IN_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> array sizes</xhtml>
              </documentation>
            </variable>
            <variable name="DIG_IN_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="11" />
              </initialValue>
            </variable>
            <variable name="DIG_OUT_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="DIG_OUT_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="11" />
              </initialValue>
            </variable>
            <variable name="PWM_OUT_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="PWM_OUT_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="11" />
              </initialValue>
            </variable>
            <variable name="PROG_CMDS_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="PROG_CMDS_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="49" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of commands in a program</xhtml>
              </documentation>
            </variable>
            <variable name="PROG_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="PROG_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="19" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of programs </xhtml>
              </documentation>
            </variable>
            <variable name="POS_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="POS_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="49" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of stored positions</xhtml>
              </documentation>
            </variable>
            <variable name="VIS_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="VIS_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="49" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of vision registers</xhtml>
              </documentation>
            </variable>
            <variable name="FLG_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="FLG_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="49" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of flags</xhtml>
              </documentation>
            </variable>
            <variable name="REG_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="REG_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="49" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of registers</xhtml>
              </documentation>
            </variable>
            <variable name="POSCONT_ARR_BEG">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="POSCONT_ARR_END">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="5" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of axes</xhtml>
              </documentation>
            </variable>
            <variable name="COMMAND_LEN">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> length of command strings for command processor.
 if this is reduced then commands may stop working.</xhtml>
              </documentation>
            </variable>
            <variable name="POSE_1_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="34" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 1</xhtml>
              </documentation>
            </variable>
            <variable name="POSE_2_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="35" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 2</xhtml>
              </documentation>
            </variable>
            <variable name="POSE_3_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="36" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 3</xhtml>
              </documentation>
            </variable>
            <variable name="POSE_4_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="37" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 4</xhtml>
              </documentation>
            </variable>
            <variable name="POSE_5_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="38" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 5</xhtml>
              </documentation>
            </variable>
            <variable name="SPEEDS_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="43" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> max vel, max accel/decel, max jerk, vel factor, accel/decel factor, jerk factor</xhtml>
              </documentation>
            </variable>
            <variable name="HOM_POS_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="44" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> homing offsets</xhtml>
              </documentation>
            </variable>
            <variable name="DEC_START_POS">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="45" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> start position for the nc decoder</xhtml>
              </documentation>
            </variable>
            <variable name="TCP_POS_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="46" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> tool center point offset</xhtml>
              </documentation>
            </variable>
            <variable name="PC2_POS_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="47" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> part 2 coordinate system offset</xhtml>
              </documentation>
            </variable>
            <variable name="PC1_POS_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="48" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> part 1 coordinate system offset</xhtml>
              </documentation>
            </variable>
            <variable name="MCS_POS_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="49" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> machine (robot) coordinate system offset</xhtml>
              </documentation>
            </variable>
            <variable name="HOM_TO_POSE_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="44" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> vision registers
RESERVED: INT:=VIS_ARR_END-4; // RESERVED
RESERVED: INT:=VIS_ARR_END-3; // RESERVED
RESERVED: INT:=VIS_ARR_END-2; // RESERVED
RESERVED: INT:=VIS_ARR_END-1; // RESERVED
RESERVED: INT:=VIS_ARR_END; // RESERVED
 flags</xhtml>
              </documentation>
            </variable>
            <variable name="INIT_DRV_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="47" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">RESERVED: INT:=45;
RESERVED: INT:=46;</xhtml>
              </documentation>
            </variable>
            <variable name="HOME_COMPLETE">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="48" />
              </initialValue>
            </variable>
            <variable name="INIT_POS_IDX">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="49" />
              </initialValue>
            </variable>
            <variable name="PowerOn">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="Reset">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="ResetRtrig">
              <type>
                <derived name="R_TRIG" />
              </type>
            </variable>
            <variable name="StorePersist">
              <type>
                <BOOL />
              </type>
            </variable>
            <variable name="CmdIO">
              <type>
                <derived name="ST_LogicCmdIO" />
              </type>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> command IO
DigitalInput: ARRAY [DIG_IN_ARR_BEG..DIG_IN_ARR_END] OF BOOL;
DigitalOutput: ARRAY [DIG_OUT_ARR_BEG..DIG_OUT_ARR_END] OF BOOL;</xhtml>
              </documentation>
            </variable>
            <variable name="g_x">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> feed rate</xhtml>
              </documentation>
            </variable>
            <variable name="g_y">
              <type>
                <REAL />
              </type>
              <initialValue>
                <simpleValue value="50" />
              </initialValue>
            </variable>
            <variable name="g_gripper">
              <type>
                <INT />
              </type>
              <initialValue>
                <simpleValue value="0" />
              </initialValue>
            </variable>
            <variable name="Servo0Position">
              <type>
                <BYTE />
              </type>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>1430d1bd-aa92-442c-bf72-190d0e907494</ObjectId>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/mixedattrsvarlist" handleUnknown="implementation">
                <MixedAttrsVarList>
                  <globalVars name="GVL" constant="true">
                    <variable name="dwMainInterval">
                      <type>
                        <DWORD />
                      </type>
                      <initialValue>
                        <simpleValue value="3000" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
                      </documentation>
                    </variable>
                    <variable name="dwMotionInterval">
                      <type>
                        <DWORD />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
                      </documentation>
                    </variable>
                    <variable name="dwVisionInterval">
                      <type>
                        <DWORD />
                      </type>
                      <initialValue>
                        <simpleValue value="20000" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
                      </documentation>
                    </variable>
                    <variable name="dwVisuInterval">
                      <type>
                        <DWORD />
                      </type>
                      <initialValue>
                        <simpleValue value="100000" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> us TODO reference this in task settings</xhtml>
                      </documentation>
                    </variable>
                    <variable name="DIG_IN_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> array sizes</xhtml>
                      </documentation>
                    </variable>
                    <variable name="DIG_IN_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="11" />
                      </initialValue>
                    </variable>
                    <variable name="DIG_OUT_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="DIG_OUT_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="11" />
                      </initialValue>
                    </variable>
                    <variable name="PWM_OUT_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="PWM_OUT_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="11" />
                      </initialValue>
                    </variable>
                    <variable name="PROG_CMDS_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="PROG_CMDS_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="49" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of commands in a program</xhtml>
                      </documentation>
                    </variable>
                    <variable name="PROG_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="PROG_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="19" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of programs </xhtml>
                      </documentation>
                    </variable>
                    <variable name="POS_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="POS_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="49" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of stored positions</xhtml>
                      </documentation>
                    </variable>
                    <variable name="VIS_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="VIS_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="49" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of vision registers</xhtml>
                      </documentation>
                    </variable>
                    <variable name="FLG_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="FLG_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="49" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of flags</xhtml>
                      </documentation>
                    </variable>
                    <variable name="REG_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="REG_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="49" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of registers</xhtml>
                      </documentation>
                    </variable>
                    <variable name="POSCONT_ARR_BEG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="POSCONT_ARR_END">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="5" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> total number of axes</xhtml>
                      </documentation>
                    </variable>
                    <variable name="COMMAND_LEN">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="255" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> length of command strings for command processor.
 if this is reduced then commands may stop working.</xhtml>
                      </documentation>
                    </variable>
                    <variable name="POSE_1_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="34" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 1</xhtml>
                      </documentation>
                    </variable>
                    <variable name="POSE_2_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="35" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 2</xhtml>
                      </documentation>
                    </variable>
                    <variable name="POSE_3_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="36" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 3</xhtml>
                      </documentation>
                    </variable>
                    <variable name="POSE_4_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="37" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 4</xhtml>
                      </documentation>
                    </variable>
                    <variable name="POSE_5_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="38" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinates of pose 5</xhtml>
                      </documentation>
                    </variable>
                    <variable name="SPEEDS_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="43" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> max vel, max accel/decel, max jerk, vel factor, accel/decel factor, jerk factor</xhtml>
                      </documentation>
                    </variable>
                    <variable name="HOM_POS_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="44" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> homing offsets</xhtml>
                      </documentation>
                    </variable>
                    <variable name="DEC_START_POS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="45" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> start position for the nc decoder</xhtml>
                      </documentation>
                    </variable>
                    <variable name="TCP_POS_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="46" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> tool center point offset</xhtml>
                      </documentation>
                    </variable>
                    <variable name="PC2_POS_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="47" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> part 2 coordinate system offset</xhtml>
                      </documentation>
                    </variable>
                    <variable name="PC1_POS_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="48" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> part 1 coordinate system offset</xhtml>
                      </documentation>
                    </variable>
                    <variable name="MCS_POS_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="49" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> machine (robot) coordinate system offset</xhtml>
                      </documentation>
                    </variable>
                    <variable name="HOM_TO_POSE_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="44" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> vision registers
RESERVED: INT:=VIS_ARR_END-4; // RESERVED
RESERVED: INT:=VIS_ARR_END-3; // RESERVED
RESERVED: INT:=VIS_ARR_END-2; // RESERVED
RESERVED: INT:=VIS_ARR_END-1; // RESERVED
RESERVED: INT:=VIS_ARR_END; // RESERVED
 flags</xhtml>
                      </documentation>
                    </variable>
                    <variable name="INIT_DRV_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="47" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">RESERVED: INT:=45;
RESERVED: INT:=46;</xhtml>
                      </documentation>
                    </variable>
                    <variable name="HOME_COMPLETE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="48" />
                      </initialValue>
                    </variable>
                    <variable name="INIT_POS_IDX">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="49" />
                      </initialValue>
                    </variable>
                  </globalVars>
                  <globalVars name="GVL">
                    <variable name="PowerOn">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ResetRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="StorePersist">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="CmdIO">
                      <type>
                        <derived name="ST_LogicCmdIO" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> command IO
DigitalInput: ARRAY [DIG_IN_ARR_BEG..DIG_IN_ARR_END] OF BOOL;
DigitalOutput: ARRAY [DIG_OUT_ARR_BEG..DIG_OUT_ARR_END] OF BOOL;</xhtml>
                      </documentation>
                    </variable>
                    <variable name="g_x">
                      <type>
                        <REAL />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> feed rate</xhtml>
                      </documentation>
                    </variable>
                    <variable name="g_y">
                      <type>
                        <REAL />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                    </variable>
                    <variable name="g_gripper">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="Servo0Position">
                      <type>
                        <BYTE />
                      </type>
                    </variable>
                  </globalVars>
                </MixedAttrsVarList>
              </data>
            </addData>
          </globalVars>
          <globalVars name="PersistentVars" retain="true" persistent="true">
            <variable name="Programs">
              <type>
                <array>
                  <dimension lower="GVL.PROG_ARR_BEG" upper="GVL.PROG_ARR_END" />
                  <baseType>
                    <derived name="DUT_Program" />
                  </baseType>
                </array>
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="order_in_persistent_editor" Value="0" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="StoredPositions">
              <type>
                <array>
                  <dimension lower="GVL.POS_ARR_BEG" upper="GVL.POS_ARR_END" />
                  <baseType>
                    <derived name="DUT_StoredPosition" />
                  </baseType>
                </array>
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="order_in_persistent_editor" Value="1" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="VisionRegisters">
              <type>
                <array>
                  <dimension lower="GVL.VIS_ARR_BEG" upper="GVL.VIS_ARR_END" />
                  <baseType>
                    <derived name="DUT_VisionRegister" />
                  </baseType>
                </array>
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="order_in_persistent_editor" Value="2" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="Flags">
              <type>
                <array>
                  <dimension lower="GVL.FLG_ARR_BEG" upper="GVL.FLG_ARR_END" />
                  <baseType>
                    <derived name="DUT_Flags" />
                  </baseType>
                </array>
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="order_in_persistent_editor" Value="3" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="PositionControllers">
              <type>
                <array>
                  <dimension lower="GVL.POSCONT_ARR_BEG" upper="GVL.POSCONT_ARR_END" />
                  <baseType>
                    <derived name="DUT_PositionController" />
                  </baseType>
                </array>
              </type>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="order_in_persistent_editor" Value="4" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <variable name="VisionSystemIpAddress">
              <type>
                <string length="19" />
              </type>
              <initialValue>
                <simpleValue value="'127.0.0.1'" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="order_in_persistent_editor" Value="5" />
                  </Attributes>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> vision</xhtml>
              </documentation>
            </variable>
            <variable name="VisionSystemPort">
              <type>
                <UINT />
              </type>
              <initialValue>
                <simpleValue value="50011" />
              </initialValue>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="order_in_persistent_editor" Value="6" />
                  </Attributes>
                </data>
              </addData>
            </variable>
            <addData>
              <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                <Attributes>
                  <Attribute Name="qualified_only" Value="" />
                  <Attribute Name="checksumnoinit_override" Value="4109224359" />
                  <Attribute Name="init_related_code" Value="bac351e4-1440-4031-887f-c3d65d99e6dc" />
                </Attributes>
              </data>
              <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                <ObjectId>3ec4e751-fd63-4486-9e96-20e1d2f269ab</ObjectId>
              </data>
            </addData>
          </globalVars>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_CncCmd">
                <baseType>
                  <struct>
                    <variable name="StartPos">
                      <type>
                        <derived name="SMC_PosInfo" />
                      </type>
                    </variable>
                    <variable name="OriConvention">
                      <type>
                        <derived name="SMC_ORI_CONVENTION" />
                      </type>
                      <initialValue>
                        <simpleValue value="SMC_ORI_CONVENTION.ZYX" />
                      </initialValue>
                    </variable>
                    <variable name="Filename">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'CNC_FromFile.cnc'" />
                      </initialValue>
                    </variable>
                    <variable name="CoordinateType">
                      <type>
                        <derived name="DUT_Command_CoordinateType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_CoordinateType.Variable" />
                      </initialValue>
                    </variable>
                    <variable name="ArrayIndex">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="GVL.DEC_START_POS" />
                      </initialValue>
                    </variable>
                    <variable name="ArrayType">
                      <type>
                        <derived name="DUT_Command_ArrayType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_ArrayType.StoredPosition" />
                      </initialValue>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>bfbed99a-036f-4373-a7be-6feb43a2d296</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="DUT_Command">
                <baseType>
                  <struct>
                    <variable name="CommandType">
                      <type>
                        <derived name="DUT_CommandType" />
                      </type>
                    </variable>
                    <variable name="CommandString">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                    <variable name="CommandComment">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>bc90f47c-5d1d-4a76-b85b-4fab785a8038</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="DUT_Program">
                <baseType>
                  <struct>
                    <variable name="ProgramName">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="Commands">
                      <type>
                        <array>
                          <dimension lower="GVL.PROG_CMDS_ARR_BEG" upper="GVL.PROG_CMDS_ARR_END" />
                          <baseType>
                            <derived name="DUT_Command" />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6dbc7d5e-b88c-421e-a648-117a087040e6</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="DUT_StoredPosition">
                <baseType>
                  <struct>
                    <variable name="Comment">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="Position">
                      <type>
                        <derived name="MC_COORD_REF" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>66e85fd8-6344-4340-a216-0e3ccb4605b3</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_VisionLocate">
                <baseType>
                  <struct>
                    <variable name="MaxParts">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="1" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> max number of parts to locate</xhtml>
                      </documentation>
                    </variable>
                    <variable name="MaxOverlap">
                      <type>
                        <REAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0.0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> max overlap of parts. only needed if MaxParts is greater than zero.</xhtml>
                      </documentation>
                    </variable>
                    <variable name="Score">
                      <type>
                        <REAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0.6" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> min score</xhtml>
                      </documentation>
                    </variable>
                    <variable name="ToleranceAngle">
                      <type>
                        <REAL />
                      </type>
                      <initialValue>
                        <simpleValue value="90.0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> max angle +/- to search</xhtml>
                      </documentation>
                    </variable>
                    <variable name="ResultPosition">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> location to store the results in the vision register array</xhtml>
                      </documentation>
                    </variable>
                    <variable name="TemplateName">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'Template.jpg'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> name of the template to search</xhtml>
                      </documentation>
                    </variable>
                    <variable name="ScriptFilename">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'FastTemplateMatching.py'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> name of the script that runs the vision program</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>979edabc-249c-4294-9a6b-583c609d1013</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_VisionCalibrate">
                <baseType>
                  <struct>
                    <variable name="CheckerSize">
                      <type>
                        <REAL />
                      </type>
                      <initialValue>
                        <simpleValue value="25.0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> this value is in user units ex mm</xhtml>
                      </documentation>
                    </variable>
                    <variable name="CheckerXCount">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="6" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> count of checker blocks in x coordinate</xhtml>
                      </documentation>
                    </variable>
                    <variable name="CheckerYCount">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="9" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> count of checker blocks in y coordinate</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>182d3d19-8ffc-4b3a-943b-f60486efdc5a</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_VisionCmd">
                <baseType>
                  <struct>
                    <variable name="CommandType">
                      <type>
                        <derived name="DUT_Command_VisionType" />
                      </type>
                    </variable>
                    <variable name="ImageWidth">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="640" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> pixel count in x direction (must be supported by camera)</xhtml>
                      </documentation>
                    </variable>
                    <variable name="ImageHeight">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="400" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> pixel coutn in y direction (must be supported by camera)</xhtml>
                      </documentation>
                    </variable>
                    <variable name="Calibrate">
                      <type>
                        <derived name="ST_VisionCalibrate" />
                      </type>
                    </variable>
                    <variable name="Locate">
                      <type>
                        <derived name="ST_VisionLocate" />
                      </type>
                    </variable>
                    <variable name="Timeout">
                      <type>
                        <UDINT />
                      </type>
                      <initialValue>
                        <simpleValue value="60" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> timeout in seconds</xhtml>
                      </documentation>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>bbefe0b0-9a20-4826-9638-01ab457504e9</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="DUT_VisionRegister">
                <baseType>
                  <struct>
                    <variable name="Scaling">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/datatypeinheritance" handleUnknown="implementation">
                    <Inheritance>
                      <Extends>DUT_StoredPosition</Extends>
                    </Inheritance>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>183abbbc-75ca-4f97-a156-9832c2bf8b79</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="DUT_Flags">
                <baseType>
                  <struct>
                    <variable name="Comment">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                    <variable name="Value">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>22f963af-e04a-45ab-913c-8ad1ec5e38d9</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_MoveCmd">
                <baseType>
                  <struct>
                    <variable name="MoveType">
                      <type>
                        <derived name="DUT_Command_MoveType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_MoveType.DirectMove" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> common</xhtml>
                      </documentation>
                    </variable>
                    <variable name="Speed">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0.0" />
                      </initialValue>
                    </variable>
                    <variable name="CoordSystem">
                      <type>
                        <derived name="SMC_COORD_SYSTEM" />
                      </type>
                      <initialValue>
                        <simpleValue value="SMC_COORD_SYSTEM.ACS" />
                      </initialValue>
                    </variable>
                    <variable name="PositionType">
                      <type>
                        <derived name="DUT_Command_PositionType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_PositionType.AbsolutePosition" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> direct/linear moves</xhtml>
                      </documentation>
                    </variable>
                    <variable name="CoordinateType">
                      <type>
                        <derived name="DUT_Command_CoordinateType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_CoordinateType.Literal" />
                      </initialValue>
                    </variable>
                    <variable name="ArrayIndex">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="ArrayType">
                      <type>
                        <derived name="DUT_Command_ArrayType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_ArrayType.StoredPosition" />
                      </initialValue>
                    </variable>
                    <variable name="CoordRef">
                      <type>
                        <derived name="MC_COORD_REF" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="X">
                            <simpleValue value="0" />
                          </value>
                          <value member="Y">
                            <simpleValue value="0" />
                          </value>
                          <value member="Z">
                            <simpleValue value="0" />
                          </value>
                          <value member="A">
                            <simpleValue value="0" />
                          </value>
                          <value member="B">
                            <simpleValue value="0" />
                          </value>
                          <value member="C">
                            <simpleValue value="0" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="CircularCoordinateType">
                      <type>
                        <derived name="DUT_Command_CoordinateType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_CoordinateType.Literal" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> circular moves</xhtml>
                      </documentation>
                    </variable>
                    <variable name="CircularArrayIndex">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="CircularArrayType">
                      <type>
                        <derived name="DUT_Command_ArrayType" />
                      </type>
                      <initialValue>
                        <simpleValue value="DUT_Command_ArrayType.StoredPosition" />
                      </initialValue>
                    </variable>
                    <variable name="CircleMode">
                      <type>
                        <derived name="SMC_CIRC_MODE" />
                      </type>
                      <initialValue>
                        <simpleValue value="SMC_CIRC_MODE.CENTER" />
                      </initialValue>
                    </variable>
                    <variable name="PathChoice">
                      <type>
                        <derived name="MC_CIRC_PATHCHOICE" />
                      </type>
                      <initialValue>
                        <simpleValue value="MC_CIRC_PATHCHOICE.CLOCKWISE" />
                      </initialValue>
                    </variable>
                    <variable name="CoordRef2">
                      <type>
                        <derived name="MC_COORD_REF" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="X">
                            <simpleValue value="0" />
                          </value>
                          <value member="Y">
                            <simpleValue value="0" />
                          </value>
                          <value member="Z">
                            <simpleValue value="0" />
                          </value>
                          <value member="A">
                            <simpleValue value="0" />
                          </value>
                          <value member="B">
                            <simpleValue value="0" />
                          </value>
                          <value member="C">
                            <simpleValue value="0" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f71cc9b7-cb4b-485a-9aed-2944bbd084ca</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_OutputCmd">
                <baseType>
                  <struct>
                    <variable name="OutputType">
                      <type>
                        <derived name="DUT_OutputType" />
                      </type>
                    </variable>
                    <variable name="OutputTarget">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="OutputValue1">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8d0742ed-4361-441a-8bce-40feb4d004c2</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_PauseCmd">
                <baseType>
                  <struct>
                    <variable name="PauseTime">
                      <type>
                        <TIME />
                      </type>
                      <initialValue>
                        <simpleValue value="TIME#1s0ms" />
                      </initialValue>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>be976acf-5a13-4a9d-8d9f-61e2df7de507</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_VarSetCmd">
                <baseType>
                  <struct>
                    <variable name="ArrayType">
                      <type>
                        <derived name="DUT_Command_ArrayType" />
                      </type>
                    </variable>
                    <variable name="ArrayIndex">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="Coordinates">
                      <type>
                        <derived name="MC_COORD_REF" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0b1a37a4-4123-4a33-84fb-db1ab5afd1a7</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_LogicCmdIO">
                <baseType>
                  <struct>
                    <variable name="Input">
                      <type>
                        <array>
                          <dimension lower="GVL.DIG_IN_ARR_BEG" upper="GVL.DIG_IN_ARR_END" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="Output">
                      <type>
                        <array>
                          <dimension lower="GVL.DIG_OUT_ARR_BEG" upper="GVL.DIG_OUT_ARR_END" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="Pwm">
                      <type>
                        <array>
                          <dimension lower="GVL.PWM_OUT_ARR_BEG" upper="GVL.PWM_OUT_ARR_END" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="Register">
                      <type>
                        <array>
                          <dimension lower="GVL.REG_ARR_BEG" upper="GVL.REG_ARR_END" />
                          <baseType>
                            <UDINT />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="Counter">
                      <type>
                        <array>
                          <dimension lower="GVL.REG_ARR_BEG" upper="GVL.REG_ARR_END" />
                          <baseType>
                            <UDINT />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d9e4da03-9627-4669-97eb-9d4d80e11f49</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_LogicCmd">
                <baseType>
                  <struct>
                    <variable name="IF_Condition">
                      <type>
                        <derived name="E_LogicIfCondition" />
                      </type>
                    </variable>
                    <variable name="IF_Condition_Idx">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="IF_Condition_Operator">
                      <type>
                        <derived name="E_LogicIfConditionOperator" />
                      </type>
                    </variable>
                    <variable name="IF_Condition_Operator_Value">
                      <type>
                        <UDINT />
                      </type>
                    </variable>
                    <variable name="THEN_Function">
                      <type>
                        <derived name="E_LogicFunction" />
                      </type>
                    </variable>
                    <variable name="THEN_Function_Value">
                      <type>
                        <UDINT />
                      </type>
                    </variable>
                    <variable name="THEN_Function_Idx">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="ELSE_Function">
                      <type>
                        <derived name="E_LogicFunction" />
                      </type>
                    </variable>
                    <variable name="ELSE_Function_Idx">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="ELSE_Function_Value">
                      <type>
                        <UDINT />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c4e12c65-0b92-43d3-a6f5-ab4569642ec6</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Buttons">
                <baseType>
                  <struct>
                    <variable name="Square">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Triangle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Circle">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Cross">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Share">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Options">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="PS">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Touch">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Mic">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>95f2037f-8fc8-4d22-85e5-1ff2dd41a9ab</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Controller">
                <baseType>
                  <struct>
                    <variable name="Connected">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Joysticks">
                      <type>
                        <derived name="ST_Joysticks" />
                      </type>
                    </variable>
                    <variable name="Buttons">
                      <type>
                        <derived name="ST_Buttons" />
                      </type>
                    </variable>
                    <variable name="Dpad">
                      <type>
                        <derived name="ST_Dpad" />
                      </type>
                    </variable>
                    <variable name="Triggers">
                      <type>
                        <derived name="ST_Triggers" />
                      </type>
                    </variable>
                    <variable name="Trackpads">
                      <type>
                        <derived name="ST_Trackpads" />
                      </type>
                    </variable>
                    <variable name="Gyroscope">
                      <type>
                        <derived name="ST_Gyroscope" />
                      </type>
                    </variable>
                    <variable name="Accelerometer">
                      <type>
                        <derived name="ST_Accelerometer" />
                      </type>
                    </variable>
                    <variable name="Battery">
                      <type>
                        <derived name="ST_Battery" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>cae9356f-d6ac-4e7d-8011-d5a6d5d74766</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Joystick">
                <baseType>
                  <struct>
                    <variable name="X">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="Y">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="ThreeButton">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>599c74c1-daba-4b5d-bf77-f7cae8b16f11</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Dpad">
                <baseType>
                  <struct>
                    <variable name="Up">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Down">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Left">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Right">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c497e547-1dfd-4da7-a86e-8ae4d44a7765</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Trigger">
                <baseType>
                  <struct>
                    <variable name="One">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Two">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="TwoButton">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>90a8586d-e3b4-42f9-8d1f-b5349239d03c</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Trackpad">
                <baseType>
                  <struct>
                    <variable name="ID">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="Active">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="X">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="Y">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d80eab9f-545b-4809-8bfc-c7c96718771a</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Triggers">
                <baseType>
                  <struct>
                    <variable name="Left">
                      <type>
                        <derived name="ST_Trigger" />
                      </type>
                    </variable>
                    <variable name="Right">
                      <type>
                        <derived name="ST_Trigger" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>23fe38f5-1749-4c16-9421-9a5256c84443</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Trackpads">
                <baseType>
                  <struct>
                    <variable name="One">
                      <type>
                        <derived name="ST_Trackpad" />
                      </type>
                    </variable>
                    <variable name="Two">
                      <type>
                        <derived name="ST_Trackpad" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e4026d17-babf-4f21-9b81-8b66dca5d5cd</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Joysticks">
                <baseType>
                  <struct>
                    <variable name="Left">
                      <type>
                        <derived name="ST_Joystick" />
                      </type>
                    </variable>
                    <variable name="Right">
                      <type>
                        <derived name="ST_Joystick" />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>185991db-bd55-406a-a1ea-3602fc50608b</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Gyroscope">
                <baseType>
                  <struct>
                    <variable name="Pitch">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="Yaw">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="Roll">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>18138b89-cf57-409e-a883-6a58c1af160a</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Accelerometer">
                <baseType>
                  <struct>
                    <variable name="X">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="Y">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="Z">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>609788be-6cef-4bab-b82d-0de671123a2d</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="ST_Battery">
                <baseType>
                  <struct>
                    <variable name="State">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="Level">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d7224d0e-a20c-4ec1-9d9d-a32f25c607e6</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="DUT_PositionController">
                <baseType>
                  <struct>
                    <variable name="fKp">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="fPartVelPilotControl">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="fDeadTime">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="fMaxPositionDiff">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="fSWMaxVelocity">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="fSWMaxAcceleration">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="fSWMaxDeceleration">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="fSWMaxJerk">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>862da66f-a0ac-4f98-8a1c-2d6c546e43d9</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="DUT_GroupStatus">
                <baseType>
                  <struct>
                    <variable name="Valid">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Busy">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorID">
                      <type>
                        <derived name="SMC_ERROR" />
                      </type>
                    </variable>
                    <variable name="GroupMoving">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="GroupHoming">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="GroupErrorStop">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="GroupStandby">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="GroupStopping">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="GroupDisabled">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="TrackingDynamicCS">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="InSync">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ActiveMovementId">
                      <type>
                        <derived name="SMC_Movement_Id" />
                      </type>
                    </variable>
                    <variable name="FirstReferencedMovementId">
                      <type>
                        <derived name="SMC_Movement_Id" />
                      </type>
                    </variable>
                    <variable name="LastAcceptedMovementId">
                      <type>
                        <derived name="SMC_Movement_Id" />
                      </type>
                    </variable>
                    <variable name="PositionLag">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="OrientationLag">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </struct>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8da24330-28fc-457b-af4f-78411d1da7e7</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_ControllerPlayerID">
                <baseType>
                  <enum>
                    <values>
                      <value name="Player1" value="4" />
                      <value name="Player2" value="10" />
                      <value name="Player3" value="21" />
                      <value name="Player4" value="27" />
                      <value name="PlayerAll" value="31" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>d98d4d74-0af2-4200-b2d2-a2e62489282e</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_ControllerBrightness">
                <baseType>
                  <enum>
                    <values>
                      <value name="High" value="0" />
                      <value name="Med" value="1" />
                      <value name="Low" value="2" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>604af7c6-46fd-4031-b39f-42d0051195f9</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_ControllerMotor">
                <baseType>
                  <enum>
                    <values>
                      <value name="Left" value="0" />
                      <value name="Right" value="1" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>a6c1ccec-7589-44ea-8664-b26e13e4589c</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_ControllerTriggerMode">
                <baseType>
                  <enum>
                    <values>
                      <value name="Off" value="0" />
                      <value name="Rigid" value="1" />
                      <value name="Pulse" value="2" />
                      <value name="Rigid_A" value="3" />
                      <value name="Rigid_B" value="4" />
                      <value name="Rigid_AB" value="5" />
                      <value name="Pulse_A" value="6" />
                      <value name="Pulse_AB" value="7" />
                      <value name="Calibration" value="8" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/enumvaluedocumentation" handleUnknown="implementation">
                    <EnumValueDocumentation>
                      <EnumValue>
                        <Name>Off</Name>
                        <Documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml"> no resistance</xhtml>
                        </Documentation>
                      </EnumValue>
                      <EnumValue>
                        <Name>Rigid</Name>
                        <Documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml"> continous resistance</xhtml>
                        </Documentation>
                      </EnumValue>
                      <EnumValue>
                        <Name>Pulse</Name>
                        <Documentation>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml"> section resistance</xhtml>
                        </Documentation>
                      </EnumValue>
                    </EnumValueDocumentation>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7cfb17e9-0adb-430c-99c4-e3a0b9b689dc</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_ControllerTrigger">
                <baseType>
                  <enum>
                    <values>
                      <value name="Left" value="0" />
                      <value name="Right" value="1" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>cf02ac9e-9fa8-4292-8ddb-6ba2ae2076e9</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_ControllerTriggerForceParameter">
                <baseType>
                  <enum>
                    <values>
                      <value name="One" value="0" />
                      <value name="Two" value="1" />
                      <value name="Three" value="2" />
                      <value name="Four" value="3" />
                      <value name="Five" value="4" />
                      <value name="Six" value="5" />
                      <value name="Seven" value="6" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>54b4a266-7c75-4f63-967a-c2dc24d3f5bb</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
              <dataType name="E_Pose">
                <baseType>
                  <enum>
                    <values>
                      <value name="One" value="0" />
                      <value name="Two" value="1" />
                      <value name="Three" value="2" />
                      <value name="Four" value="3" />
                      <value name="Five" value="4" />
                    </values>
                  </enum>
                </baseType>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                    <Attributes>
                      <Attribute Name="qualified_only" Value="" />
                      <Attribute Name="strict" Value="" />
                    </Attributes>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b79aef52-6212-478e-b00a-eac3efda95a0</ObjectId>
                  </data>
                </addData>
              </dataType>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/interface" handleUnknown="implementation">
              <Interface name="ITFModule" ObjectId="83e2f220-b628-4cc1-8425-5ccb3ca1431d">
                <Methods>
                  <Method name="M_Start" ObjectId="ede511b9-4a8a-4fd7-9a81-92329944db01">
                    <interface />
                    <addData />
                  </Method>
                  <Method name="M_Stop" ObjectId="b5172065-9e2b-4628-992b-67cbdd66121e">
                    <interface />
                    <addData />
                  </Method>
                  <Method name="M_Home" ObjectId="fa5ae12d-e278-43b8-b9fb-522a2f8363df">
                    <interface />
                    <addData />
                  </Method>
                  <Method name="M_Abort" ObjectId="d4b36388-2c40-4a2a-840c-a7558cccf32c">
                    <interface />
                    <addData />
                  </Method>
                  <Method name="M_Hold" ObjectId="74dca715-0832-4e57-bd11-fa5482a40ca4">
                    <interface />
                    <addData />
                  </Method>
                </Methods>
                <Properties>
                  <Property name="PropCurrentState" ObjectId="4900066d-af26-4295-98da-8b49be553787">
                    <interface>
                      <returnType>
                        <derived name="PACK_ML.State" />
                      </returnType>
                      <Attributes>
                        <Attribute Name="monitoring" Value="variable" />
                      </Attributes>
                    </interface>
                    <GetAccessor />
                    <addData />
                  </Property>
                  <Property name="PropBusy" ObjectId="826777bf-f2fe-40ca-a5f3-f2f24fef4c48">
                    <interface>
                      <returnType>
                        <BOOL />
                      </returnType>
                      <Attributes>
                        <Attribute Name="monitoring" Value="variable" />
                      </Attributes>
                    </interface>
                    <GetAccessor />
                    <addData />
                  </Property>
                  <Property name="PropError" ObjectId="8b3b149d-5bc9-492d-bf03-7c656df23d5f">
                    <interface>
                      <returnType>
                        <BOOL />
                      </returnType>
                      <Attributes>
                        <Attribute Name="monitoring" Value="variable" />
                      </Attributes>
                    </interface>
                    <GetAccessor />
                    <addData />
                  </Property>
                  <Property name="PropErrDescription" ObjectId="c91c07e4-f8e0-4585-a6d3-d7b49542a264">
                    <interface>
                      <returnType>
                        <string />
                      </returnType>
                      <Attributes>
                        <Attribute Name="monitoring" Value="variable" />
                      </Attributes>
                    </interface>
                    <GetAccessor />
                    <addData />
                  </Property>
                </Properties>
                <addData />
              </Interface>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="_00_Main" pouType="program">
                <interface>
                  <localVars>
                    <variable name="GroupHandler">
                      <type>
                        <derived name="FB_GroupHandler" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> group handler for all motion fbs</xhtml>
                      </documentation>
                    </variable>
                    <variable name="MoveDistance">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="5.0" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> tuning</xhtml>
                      </documentation>
                    </variable>
                    <variable name="MoveRelative">
                      <type>
                        <array>
                          <dimension lower="0" upper="5" />
                          <baseType>
                            <derived name="MC_MoveRelative" />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="TuneStart">
                      <type>
                        <array>
                          <dimension lower="0" upper="5" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="TraceStart">
                      <type>
                        <array>
                          <dimension lower="0" upper="5" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="TraceStop">
                      <type>
                        <array>
                          <dimension lower="0" upper="5" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="SetTuningMoveValues">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="ProcessHome">
                      <type>
                        <derived name="FB_HomingProcessor" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> homing</xhtml>
                      </documentation>
                    </variable>
                    <variable name="HomingStatusText">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="ProcessJog">
                      <type>
                        <derived name="FB_JogProcessor" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> jogging</xhtml>
                      </documentation>
                    </variable>
                    <variable name="JogStatusText">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="ButtonTextIndex">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="VisuStruct3DControl_J">
                      <type>
                        <derived name="VisuStruct3DControl" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> cnc</xhtml>
                      </documentation>
                    </variable>
                    <variable name="TrackPosition">
                      <type>
                        <derived name="PositionTracker" />
                      </type>
                    </variable>
                    <variable name="ProcessPrograms">
                      <type>
                        <derived name="FB_ProgramProcessor" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> program processor</xhtml>
                      </documentation>
                    </variable>
                    <variable name="ProcessCommand_ActiveProgram">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="ActiveCommandDetails">
                      <type>
                        <string length="255" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                    <variable name="Controller">
                      <type>
                        <derived name="FB_Controller" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> controller</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="BuildTests">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="FirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">{region "utility"}
	GVL.ResetRtrig(CLK:=GVL.Reset);
	IF GVL.ResetRtrig.Q THEN
		GVL.Reset := FALSE;
	END_IF
	
	IF FirstScan THEN
		M_Init();	
	END_IF
	
	IF BuildTests THEN
		BuildTests := FALSE;
		M_BuildTests();
	END_IF
{endregion}
     
{region "methods"}
	_M_GroupHandler();
    _M_Jogging();
    _M_Homing();
    _M_Cnc();
    _M_Processor();
	_M_Controller();
	_M_Tuning();
{endregion}

// do not put anything below this
FirstScan:=FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Init" ObjectId="229ed790-05b4-4c75-a8a2-65170cb5046e">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// check if arfbot has been initialized
IF NOT PersistentVars.Flags[GVL.INIT_POS_IDX].Value THEN
	// poses
	PersistentVars.Flags[GVL.HOM_TO_POSE_IDX].Value := FALSE;
	PersistentVars.StoredPositions[GVL.POSE_1_IDX].Position.X := 0.0;
	PersistentVars.StoredPositions[GVL.POSE_1_IDX].Position.Y := 0.0;
	PersistentVars.StoredPositions[GVL.POSE_1_IDX].Position.Z := -30.0;
	PersistentVars.StoredPositions[GVL.POSE_1_IDX].Position.A := 0.0;
	PersistentVars.StoredPositions[GVL.POSE_1_IDX].Position.B := -30.0;
	PersistentVars.StoredPositions[GVL.POSE_1_IDX].Position.C := 0.0;
	
	PersistentVars.StoredPositions[GVL.POSE_2_IDX].Position.X := 0.0;
	PersistentVars.StoredPositions[GVL.POSE_2_IDX].Position.Y := 30.0;
	PersistentVars.StoredPositions[GVL.POSE_2_IDX].Position.Z := -30.0;
	PersistentVars.StoredPositions[GVL.POSE_2_IDX].Position.A := 0.0;
	PersistentVars.StoredPositions[GVL.POSE_2_IDX].Position.B := 30.0;
	PersistentVars.StoredPositions[GVL.POSE_2_IDX].Position.C := 0.0;
		 
	// decoder
	PersistentVars.StoredPositions[GVL.DEC_START_POS].Position.X := 300.0; // TODO need to verify all 6 of these
	PersistentVars.StoredPositions[GVL.DEC_START_POS].Position.Y := 0.0;
	PersistentVars.StoredPositions[GVL.DEC_START_POS].Position.Z := -400.0;
	PersistentVars.StoredPositions[GVL.DEC_START_POS].Position.A := 0.0;
	PersistentVars.StoredPositions[GVL.DEC_START_POS].Position.B := 0.0;
	PersistentVars.StoredPositions[GVL.DEC_START_POS].Position.C := 0.0;
	
	// set homing offsets
	PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.X := 179.29; // J1 initial home offset
	PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.Y := 36.74; // J2 initial home offset
	PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.Z := -59.25; // J3 initial home offset
	PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.A := -194.38; // J4 initial home offset
	PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.B := -102.41; // J5 initial home offset
	PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.C := 166.611; // J6 initial home offset
	
	// set speeds
	PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.X := 100.0; // max velocity
	PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.Y := 1000.0; // max accel/decel
	PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.Z := 1000.0; // max jerk
	PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.A := 1.0; // velocity factor
	PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.B := 0.05; // accel/decel factor
	PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.C := 1.0; // jerk factor
	
	//
	M_BuildTests();
		 
	// indicate initialized
	PersistentVars.Flags[GVL.INIT_POS_IDX].Value := TRUE;
END_IF

//
PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Comment := 'vel, acc, jerk, vel fact, acc fact, jerk fact';
PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Comment := 'Home Offsets J1, J2, J3, J4, J5, J6';
PersistentVars.StoredPositions[GVL.DEC_START_POS].Comment := 'NC Decoder Start Position';
PersistentVars.StoredPositions[GVL.TCP_POS_IDX].Comment := 'TCP Offset';
PersistentVars.StoredPositions[GVL.PC2_POS_IDX].Comment := 'PCS 2 Offset';
PersistentVars.StoredPositions[GVL.PC1_POS_IDX].Comment := 'PCS 1 Offset';
PersistentVars.StoredPositions[GVL.MCS_POS_IDX].Comment := 'MCS Offset';

//	 
PersistentVars.StoredPositions[GVL.POSE_1_IDX].Comment := 'Pose 1 coordinates';
PersistentVars.StoredPositions[GVL.POSE_2_IDX].Comment := 'Pose 2 coordinates';
PersistentVars.StoredPositions[GVL.POSE_3_IDX].Comment := 'Pose 3 coordinates';
PersistentVars.StoredPositions[GVL.POSE_4_IDX].Comment := 'Pose 4 coordinates';
PersistentVars.StoredPositions[GVL.POSE_5_IDX].Comment := 'Pose 5 coordinates';

//
PersistentVars.Flags[GVL.HOM_TO_POSE_IDX].Comment := 'Finish home at Pose';

//
PersistentVars.Flags[GVL.HOME_COMPLETE].Comment := 'Axes are homed';
PersistentVars.Flags[GVL.HOME_COMPLETE].Value := FALSE;

//
PersistentVars.Flags[GVL.INIT_POS_IDX].Comment := 'Variables are Intitialized';</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Homing" ObjectId="bf4b7640-1df3-46ff-b6ca-dc416adad7e8">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
ProcessHome(
	J1:= SM_Drive_PosControl_J1, 
	J2:= SM_Drive_PosControl_J2, 
	J3:= SM_Drive_PosControl_J3, 
	J4:= SM_Drive_PosControl_J4, 
	J5:= SM_Drive_PosControl_J5, 
	J6:= SM_Drive_PosControl_J6, 
	AxisGroup:= ArfBotAxisGroup,
	GroupHandler:= GroupHandler, 
	Controller:= Controller, 
	J1_Limit:= _10_Drives.rx_j1_limit, 
	J2_Limit:= _10_Drives.rx_j2_limit, 
	J3_Limit:= _10_Drives.rx_j3_limit, 
	J4_Limit:= _10_Drives.rx_j4_limit, 
	J5_Limit:= _10_Drives.rx_j5_limit, 
	J6_Limit:= _10_Drives.rx_j6_limit, 
	Enable:= GVL.PowerOn, 
	Reset:= GVL.ResetRtrig.Q, 
	StoredPositions:= PersistentVars.StoredPositions,
	VisionRegisters:= PersistentVars.VisionRegisters,
	Flags:= PersistentVars.Flags,
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );

IF ProcessHome.Reset THEN
	HomingStatusText := '';
END_IF
IF ProcessHome.Error THEN
	JogStatusText := CONCAT('Homing Processor Error: ',
						CONCAT(TO_STRING(ProcessHome.ErrorID),
						CONCAT(' ', SMC_ErrorString(ProcessHome.ErrorID,
									SMC_Language_Type.english)))) ;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Processor" ObjectId="d0cb92ac-a65b-4a94-99d2-d1aa2daea05c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF GVL.ResetRtrig.Q THEN
	ProcessPrograms.M_Home();
END_IF

ProcessPrograms(
	Programs:=PersistentVars.Programs,
	StoredPositions:=PersistentVars.StoredPositions,
	VisionRegisters:=PersistentVars.VisionRegisters,
	Flags:=PersistentVars.Flags,
	AxisGroup:= ArfBotAxisGroup,
	GroupHandler:= GroupHandler,
	CmdIO:=GVL.CmdIO,
	Enable:= GVL.PowerOn AND PersistentVars.Flags[GVL.HOME_COMPLETE].Value,
	Error=&gt; ,
	StatusText=&gt;);

// for displaying on the HMI
// PGM: &lt;number&gt; CMD: &lt;number&gt; Type: &lt;type&gt; Command: &lt;command&gt; Comment: &lt;comment&gt;
ActiveCommandDetails := CONCAT('PGM: ', UINT_TO_STRING(ProcessPrograms.P_CurrentProgram));
ActiveCommandDetails := CONCAT(ActiveCommandDetails, ' CMD: ');
ActiveCommandDetails := CONCAT(ActiveCommandDetails, UINT_TO_STRING(ProcessPrograms.P_CurrentCommandIndex));
ActiveCommandDetails := CONCAT(ActiveCommandDetails, ' ');
ActiveCommandDetails := CONCAT(ActiveCommandDetails, TO_STRING(ProcessPrograms.P_CurrentCommand.CommandType));
ActiveCommandDetails := CONCAT(ActiveCommandDetails, ': ');
ActiveCommandDetails := CONCAT(ActiveCommandDetails, ProcessPrograms.P_CurrentCommand.CommandString);
ActiveCommandDetails := CONCAT(ActiveCommandDetails, ' Comment: ');
ActiveCommandDetails := CONCAT(ActiveCommandDetails, ProcessPrograms.P_CurrentCommand.CommandComment);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Cnc" ObjectId="c97e4850-18dd-453d-978c-2cd37627fe3a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// track position of robot end effector to display on hmi
TrackPosition(
	AxisGroup:=ArfBotAxisGroup,
	SM3_Drive_PosControl_J1:=SM_Drive_PosControl_J1,
	SM3_Drive_PosControl_J2:=SM_Drive_PosControl_J2,
	SM3_Drive_PosControl_J3:=SM_Drive_PosControl_J3,
	SM3_Drive_PosControl_J4:=SM_Drive_PosControl_J4,
	SM3_Drive_PosControl_J5:=SM_Drive_PosControl_J5,
	SM3_Drive_PosControl_J6:=SM_Drive_PosControl_J6,
	VisuStruct3DTrack=&gt;,
	Arm=&gt;,
	Elbow=&gt;,
	Hand=&gt;);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Jogging" ObjectId="0244d8b9-9bfb-4b7e-b2e7-dffe5ddef546">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <globalVars>
                          <variable name="EnableRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="CoordSystemLast">
                            <type>
                              <derived name="SMC_COORD_SYSTEM" />
                            </type>
                          </variable>
                          <variable name="ABC_AS_ACSLast">
                            <type>
                              <BOOL />
                            </type>
                          </variable>
                        </globalVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// dont get sleepy
ProcessJog(
	AxisGroup:= ArfBotAxisGroup,
	GroupHandler:= GroupHandler,
	Controller:= Controller,
	Enable:= GVL.PowerOn,
	Reset:= GVL.ResetRtrig.Q,
	StoredPositions:= PersistentVars.StoredPositions,
	VisionRegisters:= PersistentVars.VisionRegisters,
	Flags:= PersistentVars.Flags,
	ABC_as_ACS=&gt;,
	CoordSystem=&gt;, 
	Enabled=&gt;,
	Position=&gt;, 
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
	
// change the button texts on enable or a change of the coordinate system
EnableRtrig(CLK:=ProcessJog.CoordSystem &lt;&gt; CoordSystemLast
				OR ProcessJog.ABC_as_ACS &lt;&gt; ABC_AS_ACSLast);
IF EnableRtrig.Q THEN
	CoordSystemLast := ProcessJog.CoordSystem;
	ABC_AS_ACSLast := ProcessJog.ABC_as_ACS;
	ButtonTextIndex := F_SetJogButtons(ProcessJog.CoordSystem, ProcessJog.ABC_as_ACS);
END_IF
	
//
IF ProcessJog.Reset THEN
	JogStatusText := '';
END_IF
IF ProcessJog.Error THEN
	JogStatusText := CONCAT('Jog Processor Error: ',
						CONCAT(TO_STRING(ProcessJog.ErrorID),
						CONCAT(' ', SMC_ErrorString(ProcessJog.ErrorID,
									SMC_Language_Type.english)))) ;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_BuildTests" ObjectId="9a5607a2-ed23-4572-beb3-b80fd95846d5">
                      <interface>
                        <localVars>
                          <variable name="_i">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_j">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_k">
                            <type>
                              <INT />
                            </type>
                          </variable>
                        </localVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[1].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[1].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[1].ProgramName := 'Vision Pick and Place';
PersistentVars.Programs[1].Commands[0].CommandType := DUT_CommandType.VarSetCommand;
PersistentVars.Programs[1].Commands[0].CommandString := 'STO 0046 +0000.00 +0000.00 +0000.00 +0090.00 +0000.00 +0000.00';
PersistentVars.Programs[1].Commands[1].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[1].Commands[1].CommandString := 'DIR ABS 020 ACS LIT 00000.00 00030.00 -0030.00 00000.00 00030.00 00000.00';
PersistentVars.Programs[1].Commands[2].CommandType := DUT_CommandType.OutputCommand;
PersistentVars.Programs[1].Commands[2].CommandString := 'DIG 1 1';
PersistentVars.Programs[1].Commands[3].CommandType := DUT_CommandType.VisionCommand;
PersistentVars.Programs[1].Commands[3].CommandString := 'LOC 640 400 0060 001 000.0 0.8 030.0 000 Template.jpg FastTemplateMatching.py';
PersistentVars.Programs[1].Commands[4].CommandType := DUT_CommandType.OutputCommand;
PersistentVars.Programs[1].Commands[4].CommandString := 'DIG 1 0';
PersistentVars.Programs[1].Commands[5].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[1].Commands[5].CommandString := 'DIR ABS 050 PC1 LIT 00000.00 00000.00 -0010.00 00000.00 00000.00 00000.00';
PersistentVars.Programs[1].Commands[6].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[1].Commands[6].CommandString := 'DIR ABS 050 PC1 VAR VIS 000';
PersistentVars.Programs[1].Commands[7].CommandType := DUT_CommandType.OutputCommand;
PersistentVars.Programs[1].Commands[7].CommandString := 'SRV 1 30.0 360.0';
PersistentVars.Programs[1].Commands[8].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[1].Commands[8].CommandString := 'LIN REL 050 TCS LIT 00000.00 00000.00 00010.00 00000.00 00000.00 00000.00';
PersistentVars.Programs[1].Commands[9].CommandType := DUT_CommandType.OutputCommand;
PersistentVars.Programs[1].Commands[9].CommandString := 'SRV 1 0.0 360.0';
PersistentVars.Programs[1].Commands[10].CommandType := DUT_CommandType.PauseCommand;
PersistentVars.Programs[1].Commands[10].CommandString := 'T#1s';
PersistentVars.Programs[1].Commands[11].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[1].Commands[11].CommandString := 'LIN REL 050 TCS LIT 00000.00 00000.00 -0010.00 00000.00 00000.00 00000.00';
PersistentVars.Programs[1].Commands[12].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[1].Commands[12].CommandString := 'DIR ABS 050 PC1 LIT 00000.00 00000.00 -0050.00 00000.00 00000.00 00000.00';
PersistentVars.Programs[1].Commands[13].CommandType := DUT_CommandType.OutputCommand;
PersistentVars.Programs[1].Commands[13].CommandString := 'SRV 1 30.0 360.0';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[2].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[2].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[2].ProgramName := 'PCS1 Corners';
PersistentVars.Programs[2].Commands[0].CommandType := DUT_CommandType.VarSetCommand;
PersistentVars.Programs[2].Commands[0].CommandString := 'STO 0046 +0000.00 +0000.00 +0000.00 +0090.00 +0000.00 +0000.00';
PersistentVars.Programs[2].Commands[1].CommandType := DUT_CommandType.VarSetCommand;
PersistentVars.Programs[2].Commands[1].CommandString := 'STO 0048 +0283.23 -0066.77 +0195.00 -0127.52 +0179.00 +0102.00';
PersistentVars.Programs[2].Commands[2].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[2].Commands[2].CommandString := 'DIR ABS 050 PC1 LIT 0 0 0 0 0 0';
PersistentVars.Programs[2].Commands[3].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[2].Commands[3].CommandString := 'LIN REL 100 TCS LIT 0.0 200.0 0.0 0.0 0.0 0.0';
PersistentVars.Programs[2].Commands[4].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[2].Commands[4].CommandString := 'LIN REL 100 TCS LIT 00125.00 00000.00 00000.00 00000.00 00000.00 00000.00';
PersistentVars.Programs[2].Commands[5].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[2].Commands[5].CommandString := 'LIN REL 100 TCS LIT 00000.00 -0200.00 00000.00 00000.00 00000.00 00000.00';
PersistentVars.Programs[2].Commands[6].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[2].Commands[6].CommandString := 'LIN REL 100 TCS LIT -0125.00 00000.00 00000.00 00000.00 00000.00 00000.00';
PersistentVars.Programs[2].Commands[7].CommandType := DUT_CommandType.MoveCommand;
PersistentVars.Programs[2].Commands[7].CommandString := 'DIR ABS 050 ACS LIT +00 +30 -30 +00 +30 +00';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[3].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[3].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[3].ProgramName := 'Cnc Validation';
PersistentVars.Programs[3].Commands[0].CommandType := DUT_CommandType.CncCommand;
PersistentVars.Programs[3].Commands[0].CommandString := 'CNC_FromFile.cnc XYZ VAR STO 45';
PersistentVars.Programs[3].Commands[1].CommandType := DUT_CommandType.CncCommand;
PersistentVars.Programs[3].Commands[1].CommandString := 'CNC_FromFile.cnc XYZ LIT +0300.00 +0000.00 -0300.00 +0000.00 +0000.00 +0000.00';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[4].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[4].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[4].ProgramName := 'Vision Validation';
PersistentVars.Programs[4].Commands[0].CommandType := DUT_CommandType.VisionCommand;
PersistentVars.Programs[4].Commands[0].CommandString := 'LOC 640 400 60 1 0.0 0.8 30.0 10 Template.jpg FastTemplateMatching.py';
PersistentVars.Programs[4].Commands[1].CommandType := DUT_CommandType.VisionCommand;
PersistentVars.Programs[4].Commands[1].CommandString := 'LOC 640 400 60 1 0.0 0.8 30.0 4 strippers2.jpg FastTemplateMatching.py';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[5].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[5].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[5].ProgramName := 'VarSet Validation';
PersistentVars.Programs[5].Commands[0].CommandType := DUT_CommandType.VarSetCommand;
PersistentVars.Programs[5].Commands[0].CommandString := 'STO 1 6.0 5.0 4.0 3.0 2.0 1.0 ';
PersistentVars.Programs[5].Commands[1].CommandType := DUT_CommandType.VarSetCommand;
PersistentVars.Programs[5].Commands[1].CommandString := 'VIS 2 1 2 3 4 5 6';
PersistentVars.Programs[5].Commands[2].CommandType := DUT_CommandType.VarSetCommand;
PersistentVars.Programs[5].Commands[2].CommandString := 'FLG 3 1';


//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[6].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[6].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[6].ProgramName := 'Logic Validation';
PersistentVars.Programs[6].Commands[0].CommandType := DUT_CommandType.LogicCommand;
PersistentVars.Programs[6].Commands[0].CommandString := 'IF INPUT 1 EQU 1 THEN OUTPUT 1 1 ELSE OUTPUT 1 0';
PersistentVars.Programs[6].Commands[1].CommandType := DUT_CommandType.LogicCommand;
PersistentVars.Programs[6].Commands[1].CommandString := 'IF INPUT 1 EQU 1 THEN CNTUP 1 ELSE CNTUP 2';
PersistentVars.Programs[6].Commands[2].CommandType := DUT_CommandType.LogicCommand;
PersistentVars.Programs[6].Commands[2].CommandString := 'IF COUNTER 2 GRE 10 THEN NOP ELSE JUMP 0';

(*
//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[11].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[11].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[11].ProgramName := 'Make Me an Egg, Please';
PersistentVars.Programs[11].Commands[0].CommandType := DUT_CommandType.Disabled;
PersistentVars.Programs[11].Commands[0].CommandString := '';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[12].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[12].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[12].ProgramName := 'Egg Pick Routine';
PersistentVars.Programs[12].Commands[0].CommandType := DUT_CommandType.Disabled;
PersistentVars.Programs[12].Commands[0].CommandString := '';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[13].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[13].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[13].ProgramName := 'Egg Crack Routine';
PersistentVars.Programs[13].Commands[0].CommandType := DUT_CommandType.Disabled;
PersistentVars.Programs[13].Commands[0].CommandString := '';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[14].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[14].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[14].ProgramName := 'Egg Flip Routine';
PersistentVars.Programs[14].Commands[0].CommandType := DUT_CommandType.Disabled;
PersistentVars.Programs[14].Commands[0].CommandString := '';

//
FOR _i := GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	PersistentVars.Programs[15].Commands[_i].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[15].Commands[_i].CommandString := '';
END_FOR
PersistentVars.Programs[15].ProgramName := 'Egg Place Routine';
PersistentVars.Programs[15].Commands[0].CommandType := DUT_CommandType.Disabled;
PersistentVars.Programs[15].Commands[0].CommandString := '';
*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Controller" ObjectId="111d7557-61e1-48d4-ad0f-48b4ac517334">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <globalVars>
                          <variable name="_PowerRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="_PowerFtrig">
                            <type>
                              <derived name="F_TRIG" />
                            </type>
                          </variable>
                          <variable name="_PowerTimerRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="_PowerTimer">
                            <type>
                              <derived name="TON" />
                            </type>
                            <initialValue>
                              <structValue>
                                <value member="PT">
                                  <simpleValue value="TIME#1s0ms" />
                                </value>
                              </structValue>
                            </initialValue>
                          </variable>
                          <variable name="_PsButtonRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="_PsButtonFtrig">
                            <type>
                              <derived name="F_TRIG" />
                            </type>
                          </variable>
                          <variable name="_PsButtonTimer">
                            <type>
                              <derived name="TON" />
                            </type>
                            <initialValue>
                              <structValue>
                                <value member="PT">
                                  <simpleValue value="TIME#2s0ms" />
                                </value>
                              </structValue>
                            </initialValue>
                          </variable>
                          <variable name="_PsButtonTimerRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="_Reseting">
                            <type>
                              <BOOL />
                            </type>
                          </variable>
                        </globalVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// dont get sleepy
Controller(sIpAddress:= '127.0.0.1', uPort:= 50013);

// put two fingers on the trackpad for 3 seconds to toggle power
_PowerTimer(IN:=Controller.P_State.Connected
				AND Controller.P_State.Buttons.Touch
				AND Controller.P_State.Trackpads.One.Active 
				AND Controller.P_State.Trackpads.Two.Active);
_PowerTimerRtrig(CLK:=_PowerTimer.Q);
IF _PowerTimerRtrig.Q THEN
	GVL.PowerOn := NOT GVL.PowerOn;
END_IF
_PowerRtrig(CLK:=GVL.PowerOn);
_PowerFtrig(CLK:=GVL.PowerOn);
IF _PowerRtrig.Q OR _PowerFtrig.Q THEN
	IF GVL.PowerOn THEN
		Controller.M_SetColor(255,0,0);
		Controller.M_SetBrightness(E_ControllerBrightness.High);
		Controller.M_SetMotorIntensity(E_ControllerMotor.Left, 100, 0.100);
	ELSE
		Controller.M_SetColor(0,255,0);
		Controller.M_SetBrightness(E_ControllerBrightness.Low);
		Controller.M_SetMotorIntensity(E_ControllerMotor.Right, 100, 0.100);
	END_IF
END_IF

// press PS button once to reset
_PsButtonRtrig(CLK:=Controller.P_State.Buttons.PS);
_PsButtonFtrig(CLK:=Controller.P_State.Buttons.PS);
IF _PsButtonRtrig.Q THEN
	_Reseting := TRUE;
END_IF
IF _PsButtonFtrig.Q THEN
	IF _Reseting THEN //  reset was not overridden by holding it down too long
		_Reseting := FALSE;
		GVL.Reset := TRUE;
	END_IF
END_IF

// hold down the PS button to home
_PsButtonTimer(IN:=Controller.P_State.Buttons.PS);
_PsButtonTimerRtrig(CLK:=_PsButtonTimer.Q);
IF _PsButtonTimerRtrig.Q THEN
	_Reseting := FALSE; // ps button was held down too long so we dont reset
	ProcessHome.M_StartHoming();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Tuning" ObjectId="7bc5b496-9c33-4d9b-b0d8-4ee9652747d2">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <globalVars>
                          <variable name="_MoveDelayTimer">
                            <type>
                              <array>
                                <dimension lower="0" upper="5" />
                                <baseType>
                                  <derived name="TON" />
                                </baseType>
                              </array>
                            </type>
                          </variable>
                          <variable name="_TraceStartFtrig">
                            <type>
                              <array>
                                <dimension lower="0" upper="5" />
                                <baseType>
                                  <derived name="F_TRIG" />
                                </baseType>
                              </array>
                            </type>
                          </variable>
                          <variable name="_MoveBusyFtrig">
                            <type>
                              <array>
                                <dimension lower="0" upper="5" />
                                <baseType>
                                  <derived name="F_TRIG" />
                                </baseType>
                              </array>
                            </type>
                          </variable>
                          <variable name="_MoveDelayTime">
                            <type>
                              <INT />
                            </type>
                            <initialValue>
                              <simpleValue value="10" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> ms</xhtml>
                            </documentation>
                          </variable>
                          <variable name="_i">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_j">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_k">
                            <type>
                              <INT />
                            </type>
                          </variable>
                        </globalVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// initial values
IF SetTuningMoveValues AND_THEN PersistentVars.Flags[GVL.INIT_DRV_IDX].Value THEN
	SetTuningMoveValues := FALSE;
	
	MoveRelative[0].Velocity := SM_Drive_PosControl_J1.fSWMaxVelocity;
	MoveRelative[0].Acceleration := SM_Drive_PosControl_J1.fSWMaxAcceleration;
	MoveRelative[0].Deceleration := SM_Drive_PosControl_J1.fSWMaxDeceleration;
	MoveRelative[0].Jerk := SM_Drive_PosControl_J1.fSWMaxJerk;
	MoveRelative[0].Distance := MoveDistance;
	
	MoveRelative[1].Velocity := SM_Drive_PosControl_J2.fSWMaxVelocity;
	MoveRelative[1].Acceleration := SM_Drive_PosControl_J2.fSWMaxAcceleration;
	MoveRelative[1].Deceleration := SM_Drive_PosControl_J2.fSWMaxDeceleration;
	MoveRelative[1].Jerk := SM_Drive_PosControl_J2.fSWMaxJerk;
	MoveRelative[1].Distance := MoveDistance;
	
	MoveRelative[2].Velocity := SM_Drive_PosControl_J3.fSWMaxVelocity;
	MoveRelative[2].Acceleration := SM_Drive_PosControl_J3.fSWMaxAcceleration;
	MoveRelative[2].Deceleration := SM_Drive_PosControl_J3.fSWMaxDeceleration;
	MoveRelative[2].Jerk := SM_Drive_PosControl_J3.fSWMaxJerk;
	MoveRelative[2].Distance := MoveDistance;
	
	MoveRelative[3].Velocity := SM_Drive_PosControl_J4.fSWMaxVelocity;
	MoveRelative[3].Acceleration := SM_Drive_PosControl_J4.fSWMaxAcceleration;
	MoveRelative[3].Deceleration := SM_Drive_PosControl_J4.fSWMaxDeceleration;
	MoveRelative[3].Jerk := SM_Drive_PosControl_J4.fSWMaxJerk;
	MoveRelative[3].Distance := MoveDistance;
	
	MoveRelative[4].Velocity := SM_Drive_PosControl_J5.fSWMaxVelocity;
	MoveRelative[4].Acceleration := SM_Drive_PosControl_J5.fSWMaxAcceleration;
	MoveRelative[4].Deceleration := SM_Drive_PosControl_J5.fSWMaxDeceleration;
	MoveRelative[4].Jerk := SM_Drive_PosControl_J5.fSWMaxJerk;
	MoveRelative[4].Distance := MoveDistance;
	
	MoveRelative[5].Velocity := SM_Drive_PosControl_J6.fSWMaxVelocity;
	MoveRelative[5].Acceleration := SM_Drive_PosControl_J6.fSWMaxAcceleration;
	MoveRelative[5].Deceleration := SM_Drive_PosControl_J6.fSWMaxDeceleration;
	MoveRelative[5].Jerk := SM_Drive_PosControl_J6.fSWMaxJerk;
	MoveRelative[5].Distance := MoveDistance;
END_IF

// trace activation
FOR _i:=0 TO 5 BY 1 DO
	
	//
	IF TuneStart[_i] THEN
		TuneStart[_i] := FALSE;
		TraceStart[_i] := TRUE; // trace will handshake this bit low
		GroupHandler.M_EnableGroup();
	END_IF
	
	// TraceStart will clear after handshake. this means the trace has started collecting samples
	// start the move delay timer to capture samples before the move
	_TraceStartFtrig[_i](CLK:=TraceStart[_i]);
	IF _TraceStartFtrig[_i].Q THEN
		_MoveDelayTimer[_i].IN:=TRUE;
	END_IF
	
	// once the move delay expires, start the move
	_MoveDelayTimer[_i](PT:=INT_TO_TIME(_MoveDelayTime));
	IF _MoveDelayTimer[_i].Q THEN
		_MoveDelayTimer[_i].IN:=FALSE;
		MoveRelative[_i].Execute := TRUE;
	END_IF
	
	//
	_MoveBusyFtrig[_i](CLK:=MoveRelative[_i].Busy);
	IF _MoveBusyFtrig[_i].Q THEN
		MoveRelative[_i].Execute := FALSE;
		MoveRelative[_i].Distance := MoveRelative[_i].Distance * -1.0; // reverse direction
	END_IF

END_FOR


// move relative
MoveRelative[0](
	Axis:= SM_Drive_PosControl_J1, 
	Execute:= , 
	Distance:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
MoveRelative[1](
	Axis:= SM_Drive_PosControl_J2, 
	Execute:= , 
	Distance:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
MoveRelative[2](
	Axis:= SM_Drive_PosControl_J3, 
	Execute:= , 
	Distance:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
MoveRelative[3](
	Axis:= SM_Drive_PosControl_J4, 
	Execute:= , 
	Distance:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
MoveRelative[4](
	Axis:= SM_Drive_PosControl_J5, 
	Execute:= , 
	Distance:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
MoveRelative[5](
	Axis:= SM_Drive_PosControl_J6, 
	Execute:= , 
	Distance:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	BufferMode:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_GroupHandler" ObjectId="39e1494b-f21b-4425-b5e3-86e0f472492e">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
GroupHandler(
	AxisGroup:= ArfBotAxisGroup,
	Enable:= GVL.PowerOn,
	StoredPositions:= PersistentVars.StoredPositions,
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f495872a-eb99-4e62-a111-ca71535b5152</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="_10_Drives" pouType="program">
                <interface>
                  <localVars>
                    <variable name="rx_heartbeat">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_en">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_alarm">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_heartbeat_lost">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_j1_limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_j2_limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_j3_limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_j4_limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_j5_limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="rx_j6_limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="pabyTxBuffer" address="%QB0">
                      <type>
                        <array>
                          <dimension lower="0" upper="31" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="pabyRxBuffer" address="%IB0">
                      <type>
                        <array>
                          <dimension lower="0" upper="31" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="InitializeDrives">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="FirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//
IF FirstScan THEN
	M_Init(FALSE);
END_IF

_M_Init();
_M_HandleDriveIO();

// do not put anything below this
FirstScan := FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_HandleDriveIO" ObjectId="1f105a3e-ae48-4de4-9cd3-fada08b1a872">
                      <interface>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//
HeartbeatOn(in:=NOT HeartbeatOff.Q,PT:=HeartbeatPt);
HeartbeatOff(in:=HeartbeatOn.Q,PT:=HeartbeatPt);

// need to use system time to transfer faster than 1ms
SysLTime := LTIME();
IF SysLTime - SysLTimeLast &gt; TransferTime THEN
	SysLTimeLast := SysLTime;
	TransferTrigger := NOT TransferTrigger;
END_IF

// handle outputs
// index 0 is for system outputs
pabyTxBuffer[0].0:=HeartbeatOn.Q; 	// heartbeat
pabyTxBuffer[0].1:=GVL.PowerOn; 			// enable drives
//pabyTxBuffer[0].2:=GVL.Homing;		// homing sts
// pabyTxBuffer[0].3:=; //
// pabyTxBuffer[0].4:=; //
// pabyTxBuffer[0].5:=; //
// pabyTxBuffer[0].6:=; //
// pabyTxBuffer[0].7:=; //

// index 1 through 24 is for velocity to drive
bufferIdx := 1;
FOR jointIdx := 0 TO 5 BY 1 DO
	MEMUtils.MemCpy(pbyDest:=ADR(pabyTxBuffer[bufferIdx]), 
					pbySrc:=ADR(SetVelocity[jointIdx]), 
					dwSize:=SIZEOF(SetVelocity[jointIdx]));
	bufferIdx := bufferIdx + 4;
END_FOR

//pabyTxBuffer[25]:=;

// index 26 will be for gpio byte (bits 0 through 7)
pabyTxBuffer[26].0 := GVL.CmdIO.Output[0];
pabyTxBuffer[26].1 := GVL.CmdIO.Output[1];
pabyTxBuffer[26].2 := GVL.CmdIO.Output[2];
pabyTxBuffer[26].3 := GVL.CmdIO.Output[3];
//pabyTxBuffer[26].4 := ;
//pabyTxBuffer[26].5 := ;
//pabyTxBuffer[26].6 := ;
//pabyTxBuffer[26].7 := ;

//pabyTxBuffer[27]:=;
//pabyTxBuffer[28]:=;
//pabyTxBuffer[29]:=;

// Tx buffer index 30 and 31 will be for crc
// calc crc here
TxCrc := F_Checksum(ADR(pabyTxBuffer), 30);
// append calc crc to tx buffer
MEMUtils.MemCpy(pbyDest:=ADR(pabyTxBuffer[30]), 
				pbySrc:=ADR(TxCrc), 
				dwSize:=2);

// read and write to i2c bus
//IF TransferTrigger THEN
	
	(*I2C_master_Bus1.write(usiAddress:=i2caddress,
					pbyBuffer:=ADR(pabyTxBuffer),
					nBufferLen:=transferlentx);
	I2C_master_Bus1.read(usiAddress:=i2caddress,
					pbyBuffer:=ADR(pabyRxBuffer),
					nBufferLen:=transferlenrx);*)
	
	//
	(*IF Com1Seq = 0 THEN
		IF hCom &lt;&gt; systypes2.RTS_INVALID_HANDLE THEN
			Com1Seq := 2;
		ELSE
			Com1Seq := 1;
		END_IF
	END_IF*)
	
//END_IF

(*ReadTimeoutTimer(IN:=Com1Seq=3, PT:=ReadTimeout);
CASE Com1Seq OF
	0:
		//Com1Seq := Com1Seq + 1;
	1:
		hCom := SysComOpen(sPort:= ComPort , pResult:= ADR(Result));
		IF hCom &lt;&gt; systypes2.RTS_INVALID_HANDLE THEN
			// Configure the connection
			csComSettings.byParity := SYS_NOPARITY;
			csComSettings.byStopBits := SYS_ONESTOPBIT;
			csComSettings.sPort := ComPort;
			csComSettings.ulBaudrate := BaudRate;// SYS_COM_BAUDRATE.SYS_BR_115200;
			csComSettings.ulBufferSize := 0;
			csComSettings.ulTimeout := SYS_COM_TIMEOUT.SYS_NOWAIT;
			Result := SysComSetSettings(hCom:= hCom, pSettings:= ADR(csComSettings) , pSettingsEx:= 0);
			Com1Seq := Com1Seq + 1;
		END_IF
		
	2:
		// Write data
		dwWritten := SysComWrite(
								hCom:= hCom,
								pbyBuffer:= ADR(pabyTxBuffer)+dwOffset,	
								ulSize:= SIZEOF(pabyTxBuffer)-dwOffset,
								ulTimeout:= 0,
								pResult:= ADR(Result) );
								
		//dwOffset := dwOffset + dwWritten;
		
		//IF dwOffset &gt;= SIZEOF(pabyTxBuffer) THEN
			//Com1Seq := Com1Seq + 1;
			//dwOffset := 0;
		//END_IF
		
	//3: 
		//
		SysComPurge(hCom:=hCom);
		
		// Read data
		dwRead := SysComRead(
							hCom:= hCom,
							pbyBuffer:= ADR(pabyRxBuffer),
							ulSize:= SIZEOF(pabyRxBuffer),
							ulTimeout:= 5,
							pResult:= ADR(Result));
		//IF dwRead &gt;= SIZEOF(pabyRxBuffer) OR ReadTimeoutTimer.Q THEN
			Com1Seq := 0;
		//END_IF
		
	3:
		//
		SysComClose(hCom:=hCom);
		Com1Seq := 0;
	
END_CASE*)

// copy crc from rx buffer
MEMUtils.MemCpy(pbyDest:=ADR(RxCrc), 
				pbySrc:=ADR(pabyRxBuffer[30]), 
				dwSize:=2);

// compare calc crc with rx crc
IF RxCrc = F_Checksum(ADR(pabyRxBuffer), 30) THEN
	// handle inputs
	// index 0 is for system inputs
	rx_heartbeat 		:= pabyRxBuffer[0].0;
	rx_en 				:= pabyRxBuffer[0].1;
	//rx_alarm 			:= pabyRxBuffer[0].2; TODO uncomment this once drive alarm output is wired
	//rx_ 				:= pabyRxBuffer[0].3;
	//rx_ 				:= pabyRxBuffer[0].4;
	//rx_ 				:= pabyRxBuffer[0].5;
	//rx_ 				:= pabyRxBuffer[0].6;
	rx_heartbeat_lost 	:= pabyRxBuffer[0].7;
	
	// index 1 through 24 is for encoder data from drive
	bufferIdx := 1;
	FOR jointIdx := 0 TO 5 BY 1 DO
		MEMUtils.MemCpy(pbyDest:=ADR(EncPosition[jointIdx]), 
						pbySrc:=ADR(pabyRxBuffer[bufferIdx]), 
						dwSize:=SIZEOF(EncPosition[jointIdx]));
		bufferIdx := bufferIdx + 4;
	END_FOR
	
	// index 25 will be for limit switch inputs
	rx_j1_limit := pabyRxBuffer[25].0;
	rx_j2_limit := pabyRxBuffer[25].1;
	rx_j3_limit := pabyRxBuffer[25].2;
	rx_j4_limit := pabyRxBuffer[25].3;
	rx_j5_limit := pabyRxBuffer[25].4;
	rx_j6_limit := pabyRxBuffer[25].5;
	//rx_ := pabyRxBuffer[25].6;
	//rx_ := pabyRxBuffer[25].7;
	
	// index 26 will be for gpio byte (bits 0 through 7)
	GVL.CmdIO.Input[0] := pabyRxBuffer[26].0;
	GVL.CmdIO.Input[1] := pabyRxBuffer[26].1;
	GVL.CmdIO.Input[2] := pabyRxBuffer[26].2;
	GVL.CmdIO.Input[3] := pabyRxBuffer[26].3;
	// := pabyRxBuffer[26].4;
	// := pabyRxBuffer[26].5;
	// := pabyRxBuffer[26].6;
	// := pabyRxBuffer[26].7;
	
	//rx_ := pabyRxBuffer[27];
	//rx_ := pabyRxBuffer[28];
	//rx_ := pabyRxBuffer[29];
	
	// Rx buffer index 30 and 31 will be for crc
ELSE
	// increment crc mismatch counter
	ChecksumMisCount := ChecksumMisCount + 1;
END_IF

// https://docs.google.com/spreadsheets/d/1S5TOxwbAx8pTMUdoWMnyC9WPfphhtUME/edit#gid=595805457
SM_Drive_PosControl_J1.in.dwActPosition := DINT_TO_DWORD(EncPosition[0]);
SM_Drive_PosControl_J2.in.dwActPosition := DINT_TO_DWORD(EncPosition[1]);
SM_Drive_PosControl_J3.in.dwActPosition := DINT_TO_DWORD(EncPosition[2]);
SM_Drive_PosControl_J4.in.dwActPosition := DINT_TO_DWORD(EncPosition[3]); // spec sheet is wrong. ratio is 16:1
SM_Drive_PosControl_J5.in.dwActPosition := DINT_TO_DWORD(EncPosition[4]);
SM_Drive_PosControl_J6.in.dwActPosition := DINT_TO_DWORD(EncPosition[5]); // spec sheet for ratio is wrong its not 19+38/187 it is 20+38/187

//
IF FirstScan THEN
	SM_Drive_PosControl_J1.bHWLimitEnable := TRUE;//NOT _00_Main.SMC_Homing_J1.bBusy;
	SM_Drive_PosControl_J2.bHWLimitEnable := TRUE;//NOT _00_Main.SMC_Homing_J2.bBusy;
	SM_Drive_PosControl_J3.bHWLimitEnable := TRUE;//NOT _00_Main.SMC_Homing_J3.bBusy;
	SM_Drive_PosControl_J4.bHWLimitEnable := TRUE;//NOT _00_Main.SMC_Homing_J4.bBusy;
	SM_Drive_PosControl_J5.bHWLimitEnable := TRUE;//NOT _00_Main.SMC_Homing_J5.bBusy;
	SM_Drive_PosControl_J6.bHWLimitEnable := TRUE;//NOT _00_Main.SMC_Homing_J6.bBusy;
END_IF

//
SM_Drive_PosControl_J1.in.bLimitNeg := TRUE;
SM_Drive_PosControl_J2.in.bLimitNeg := TRUE;
SM_Drive_PosControl_J3.in.bLimitNeg := rx_j3_limit;
SM_Drive_PosControl_J4.in.bLimitNeg := rx_j4_limit;
SM_Drive_PosControl_J5.in.bLimitNeg := TRUE;
SM_Drive_PosControl_J6.in.bLimitNeg := TRUE;

SM_Drive_PosControl_J1.in.bLimitPos := rx_j1_limit;
SM_Drive_PosControl_J2.in.bLimitPos := rx_j2_limit;
SM_Drive_PosControl_J3.in.bLimitPos := TRUE;
SM_Drive_PosControl_J4.in.bLimitPos := TRUE;
SM_Drive_PosControl_J5.in.bLimitPos := rx_j5_limit;
SM_Drive_PosControl_J6.in.bLimitPos := rx_j6_limit;

SM_Drive_PosControl_J1.in.bDriveStartRealState := rx_en;
SM_Drive_PosControl_J1.in.bRegulatorRealState := rx_en;
SM_Drive_PosControl_J2.in.bDriveStartRealState := rx_en;
SM_Drive_PosControl_J2.in.bRegulatorRealState := rx_en;
SM_Drive_PosControl_J3.in.bDriveStartRealState := rx_en;
SM_Drive_PosControl_J3.in.bRegulatorRealState := rx_en;
SM_Drive_PosControl_J4.in.bDriveStartRealState := rx_en;
SM_Drive_PosControl_J4.in.bRegulatorRealState := rx_en;
SM_Drive_PosControl_J5.in.bDriveStartRealState := rx_en;
SM_Drive_PosControl_J5.in.bRegulatorRealState := rx_en;
SM_Drive_PosControl_J6.in.bDriveStartRealState := rx_en;
SM_Drive_PosControl_J6.in.bRegulatorRealState := rx_en;

// convert degrees per second to revolutions per second as that is what the drives take
SetVelocity[0] := LREAL_TO_REAL(SM_Drive_PosControl_J1.out.fSetVelocity / 360.0); 
SetVelocity[1] := LREAL_TO_REAL(SM_Drive_PosControl_J2.out.fSetVelocity / 360.0);
SetVelocity[2] := LREAL_TO_REAL(SM_Drive_PosControl_J3.out.fSetVelocity / 360.0);
SetVelocity[3] := LREAL_TO_REAL(SM_Drive_PosControl_J4.out.fSetVelocity / 360.0);
SetVelocity[4] := LREAL_TO_REAL(SM_Drive_PosControl_J5.out.fSetVelocity / 360.0);
SetVelocity[5] := LREAL_TO_REAL(SM_Drive_PosControl_J6.out.fSetVelocity / 360.0);

FirstScan := FALSE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Init" ObjectId="aea6e4c3-5f5a-4eff-ae8a-2de4fd010b88">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="DefaultParameters">
                            <type>
                              <BOOL />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF DefaultParameters THEN
	PersistentVars.Flags[GVL.INIT_DRV_IDX].Value := FALSE;
END_IF
InitializeDrives := TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Init" ObjectId="9031c730-57b8-48ca-b284-2770517ca6ee">
                      <interface>
                        <globalVars>
                          <variable name="_Step">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_Done">
                            <type>
                              <BOOL />
                            </type>
                          </variable>
                          <variable name="_Success">
                            <type>
                              <BOOL />
                            </type>
                          </variable>
                          <variable name="_SMC_SetPosControlParams">
                            <type>
                              <array>
                                <dimension lower="0" upper="5" />
                                <baseType>
                                  <derived name="SMC_SetPosControlParams" />
                                </baseType>
                              </array>
                            </type>
                          </variable>
                          <variable name="_i">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_j">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_k">
                            <type>
                              <INT />
                            </type>
                          </variable>
                        </globalVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
CASE _Step OF
	0:
		IF InitializeDrives THEN
			InitializeDrives := FALSE;
			//
			FOR _i:=GVL.POSCONT_ARR_BEG TO GVL.POSCONT_ARR_END BY 1 DO
				_SMC_SetPosControlParams[_i].bExecute := FALSE;
			END_FOR
			//
			IF NOT PersistentVars.Flags[GVL.INIT_DRV_IDX].Value THEN
				FOR _i:=GVL.POSCONT_ARR_BEG TO GVL.POSCONT_ARR_END BY 1 DO
					PersistentVars.PositionControllers[_i].fKp := 0.03;
					PersistentVars.PositionControllers[_i].fPartVelPilotControl := 1.0; // 0-1
					PersistentVars.PositionControllers[_i].fDeadTime := 2.0;
					PersistentVars.PositionControllers[_i].fMaxPositionDiff := 0.0;
					PersistentVars.PositionControllers[_i].fSWMaxVelocity := 30.0;
					PersistentVars.PositionControllers[_i].fSWMaxAcceleration := 1000.0;
					PersistentVars.PositionControllers[_i].fSWMaxDeceleration := 1000.0;
					PersistentVars.PositionControllers[_i].fSWMaxJerk := 10000.0;
				END_FOR
			END_IF
			// next, please
			_Step := _Step + 1;
		END_IF
		
	1: 
		//
		FOR _i:=GVL.POSCONT_ARR_BEG TO GVL.POSCONT_ARR_END BY 1 DO
			_SMC_SetPosControlParams[_i].bExecute := TRUE;
		END_FOR
		// next, please
		_Step := _Step + 1;
		
	2:
		//
		_Done := TRUE;
		_Success := TRUE;
		FOR _i:=GVL.POSCONT_ARR_BEG TO GVL.POSCONT_ARR_END BY 1 DO
			IF _SMC_SetPosControlParams[_i].bError THEN
				_Success := FALSE;
				EXIT;
			END_IF
			IF NOT _SMC_SetPosControlParams[_i].bDone THEN
				_Success := FALSE;
				_Done := FALSE;
				EXIT;
			END_IF
		END_FOR
		IF _Done THEN
			// next, please
			_Step := _Step + 1;
		END_IF
		
	3:
		//
		FOR _i:=GVL.POSCONT_ARR_BEG TO GVL.POSCONT_ARR_END BY 1 DO
			_SMC_SetPosControlParams[_i].bExecute := FALSE;
		END_FOR
		//
		IF _Success THEN
			PersistentVars.Flags[GVL.INIT_DRV_IDX].Value := TRUE;
		END_IF
		// next, please
		_Step := 0;
		
END_CASE

//
_SMC_SetPosControlParams[0](
	Axis:= SM_Drive_PosControl_J1, 
	bExecute:= , 
	fKp:= PersistentVars.PositionControllers[0].fKp, 
	fPartVelPilotControl:= PersistentVars.PositionControllers[0].fPartVelPilotControl, 
	fDeadTime:= PersistentVars.PositionControllers[0].fDeadTime, 
	fMaxPositionDiff:=PersistentVars.PositionControllers[0].fMaxPositionDiff, 
	bDone=&gt; , 
	bError=&gt; , 
	ErrorID=&gt; );
IF _SMC_SetPosControlParams[0].bDone AND NOT _SMC_SetPosControlParams[0].bError THEN
	SM_Drive_PosControl_J1.fSWMaxVelocity 			:= PersistentVars.PositionControllers[0].fSWMaxVelocity; // 30
	SM_Drive_PosControl_J1.fSWMaxAcceleration 		:= PersistentVars.PositionControllers[0].fSWMaxAcceleration; // 1000
	SM_Drive_PosControl_J1.fSWMaxDeceleration 		:= PersistentVars.PositionControllers[0].fSWMaxDeceleration; // 1000
	SM_Drive_PosControl_J1.fSWMaxJerk 				:= PersistentVars.PositionControllers[0].fSWMaxJerk; // 10000
END_IF

//
_SMC_SetPosControlParams[1](
	Axis:= SM_Drive_PosControl_J2, 
	bExecute:= , 
	fKp:= PersistentVars.PositionControllers[1].fKp, 
	fPartVelPilotControl:= PersistentVars.PositionControllers[1].fPartVelPilotControl, 
	fDeadTime:= PersistentVars.PositionControllers[1].fDeadTime, 
	fMaxPositionDiff:=PersistentVars.PositionControllers[1].fMaxPositionDiff, 
	bDone=&gt; , 
	bError=&gt; , 
	ErrorID=&gt; );
IF _SMC_SetPosControlParams[1].bDone AND NOT _SMC_SetPosControlParams[1].bError THEN
	SM_Drive_PosControl_J2.fSWMaxVelocity 			:= PersistentVars.PositionControllers[1].fSWMaxVelocity;
	SM_Drive_PosControl_J2.fSWMaxAcceleration 		:= PersistentVars.PositionControllers[1].fSWMaxAcceleration;
	SM_Drive_PosControl_J2.fSWMaxDeceleration 		:= PersistentVars.PositionControllers[1].fSWMaxDeceleration;
	SM_Drive_PosControl_J2.fSWMaxJerk 				:= PersistentVars.PositionControllers[1].fSWMaxJerk;
END_IF

//
_SMC_SetPosControlParams[2](
	Axis:= SM_Drive_PosControl_J3, 
	bExecute:= , 
	fKp:= PersistentVars.PositionControllers[2].fKp, 
	fPartVelPilotControl:= PersistentVars.PositionControllers[2].fPartVelPilotControl, 
	fDeadTime:= PersistentVars.PositionControllers[2].fDeadTime, 
	fMaxPositionDiff:=PersistentVars.PositionControllers[2].fMaxPositionDiff, 
	bDone=&gt; , 
	bError=&gt; , 
	ErrorID=&gt; );
IF _SMC_SetPosControlParams[2].bDone AND NOT _SMC_SetPosControlParams[2].bError THEN
	SM_Drive_PosControl_J3.fSWMaxVelocity 			:= PersistentVars.PositionControllers[2].fSWMaxVelocity;
	SM_Drive_PosControl_J3.fSWMaxAcceleration 		:= PersistentVars.PositionControllers[2].fSWMaxAcceleration;
	SM_Drive_PosControl_J3.fSWMaxDeceleration 		:= PersistentVars.PositionControllers[2].fSWMaxDeceleration;
	SM_Drive_PosControl_J3.fSWMaxJerk 				:= PersistentVars.PositionControllers[2].fSWMaxJerk;
END_IF

//
_SMC_SetPosControlParams[3](
	Axis:= SM_Drive_PosControl_J4, 
	bExecute:= , 
	fKp:= PersistentVars.PositionControllers[3].fKp, 
	fPartVelPilotControl:= PersistentVars.PositionControllers[3].fPartVelPilotControl, 
	fDeadTime:= PersistentVars.PositionControllers[3].fDeadTime, 
	fMaxPositionDiff:=PersistentVars.PositionControllers[3].fMaxPositionDiff, 
	bDone=&gt; , 
	bError=&gt; , 
	ErrorID=&gt; );
IF _SMC_SetPosControlParams[3].bDone AND NOT _SMC_SetPosControlParams[3].bError THEN
	SM_Drive_PosControl_J4.fSWMaxVelocity 			:= PersistentVars.PositionControllers[3].fSWMaxVelocity;
	SM_Drive_PosControl_J4.fSWMaxAcceleration 		:= PersistentVars.PositionControllers[3].fSWMaxAcceleration;
	SM_Drive_PosControl_J4.fSWMaxDeceleration 		:= PersistentVars.PositionControllers[3].fSWMaxDeceleration;
	SM_Drive_PosControl_J4.fSWMaxJerk 				:= PersistentVars.PositionControllers[3].fSWMaxJerk;
END_IF

//
_SMC_SetPosControlParams[4](
	Axis:= SM_Drive_PosControl_J5, 
	bExecute:= , 
	fKp:= PersistentVars.PositionControllers[4].fKp, 
	fPartVelPilotControl:= PersistentVars.PositionControllers[4].fPartVelPilotControl, 
	fDeadTime:= PersistentVars.PositionControllers[4].fDeadTime, 
	fMaxPositionDiff:=PersistentVars.PositionControllers[4].fMaxPositionDiff, 
	bDone=&gt; , 
	bError=&gt; , 
	ErrorID=&gt; );
IF _SMC_SetPosControlParams[4].bDone AND NOT _SMC_SetPosControlParams[4].bError THEN
	SM_Drive_PosControl_J5.fSWMaxVelocity 			:= PersistentVars.PositionControllers[4].fSWMaxVelocity;
	SM_Drive_PosControl_J5.fSWMaxAcceleration 		:= PersistentVars.PositionControllers[4].fSWMaxAcceleration;
	SM_Drive_PosControl_J5.fSWMaxDeceleration 		:= PersistentVars.PositionControllers[4].fSWMaxDeceleration;
	SM_Drive_PosControl_J5.fSWMaxJerk 				:= PersistentVars.PositionControllers[4].fSWMaxJerk;
END_IF

//
_SMC_SetPosControlParams[5](
	Axis:= SM_Drive_PosControl_J6, 
	bExecute:= , 
	fKp:= PersistentVars.PositionControllers[5].fKp, 
	fPartVelPilotControl:= PersistentVars.PositionControllers[5].fPartVelPilotControl, 
	fDeadTime:= PersistentVars.PositionControllers[5].fDeadTime, 
	fMaxPositionDiff:=PersistentVars.PositionControllers[5].fMaxPositionDiff, 
	bDone=&gt; , 
	bError=&gt; , 
	ErrorID=&gt; );
IF _SMC_SetPosControlParams[5].bDone AND NOT _SMC_SetPosControlParams[5].bError THEN
	SM_Drive_PosControl_J6.fSWMaxVelocity 			:= PersistentVars.PositionControllers[5].fSWMaxVelocity;
	SM_Drive_PosControl_J6.fSWMaxAcceleration 		:= PersistentVars.PositionControllers[5].fSWMaxAcceleration;
	SM_Drive_PosControl_J6.fSWMaxDeceleration 		:= PersistentVars.PositionControllers[5].fSWMaxDeceleration;
	SM_Drive_PosControl_J6.fSWMaxJerk 				:= PersistentVars.PositionControllers[5].fSWMaxJerk;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>3256c2f0-e8a8-4738-aa1a-395ceff25c60</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_JogProcessor" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="GroupHandler">
                      <type>
                        <derived name="FB_GroupHandler" />
                      </type>
                    </variable>
                    <variable name="Controller">
                      <type>
                        <derived name="FB_Controller" />
                      </type>
                    </variable>
                  </inOutVars>
                  <inputVars>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="StoredPositions">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.POS_ARR_BEG..GVL.POS_ARR_END] OF DUT_StoredPosition" />
                      </type>
                    </variable>
                    <variable name="VisionRegisters">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.VIS_ARR_BEG..GVL.VIS_ARR_END] OF DUT_VisionRegister" />
                      </type>
                    </variable>
                    <variable name="Flags">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.FLG_ARR_BEG..GVL.FLG_ARR_END] OF DUT_Flags" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="ABC_as_ACS">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="CoordSystem">
                      <type>
                        <derived name="SMC_COORD_SYSTEM" />
                      </type>
                    </variable>
                    <variable name="Position">
                      <type>
                        <derived name="SMC_POS_REF" />
                      </type>
                    </variable>
                    <variable name="Enabled">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Done">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Busy">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorID">
                      <type>
                        <derived name="SMC_ERROR" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_ExecuteRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ExecuteFtrig">
                      <type>
                        <derived name="F_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ResetRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ErrorRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_EnableFtrig">
                      <type>
                        <derived name="F_TRIG" />
                      </type>
                    </variable>
                    <variable name="_SequenceMain">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceSetCoordTrans">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SMC_GroupJog2">
                      <type>
                        <derived name="SMC_GroupJog2" />
                      </type>
                    </variable>
                    <variable name="_ControllerCenter">
                      <type>
                        <USINT />
                      </type>
                      <initialValue>
                        <simpleValue value="128" />
                      </initialValue>
                    </variable>
                    <variable name="_ControllerDeadZone">
                      <type>
                        <USINT />
                      </type>
                      <initialValue>
                        <simpleValue value="40" />
                      </initialValue>
                    </variable>
                    <variable name="_OffsetExist">
                      <type>
                        <array>
                          <dimension lower="0" upper="(GVL.MCS_POS_IDX - GVL.TCP_POS_IDX)" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_MoveToPose">
                      <type>
                        <array>
                          <dimension lower="0" upper="(GVL.POSE_5_IDX - GVL.POSE_1_IDX)" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_MoveCommandProcessor">
                      <type>
                        <derived name="MoveCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_FirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_GROUP_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="35" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_SET_KINEMATICS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="60" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_KINEMATICS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="70" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_JOG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="80" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_JOG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="90" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_GROUP_DISABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="100" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_DISABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="110" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">_ExecuteRtrig(CLK:=_SMC_GroupJog2.Enable);
_ExecuteFtrig(CLK:=_SMC_GroupJog2.Enable);
_ResetRtrig(CLK:=Reset);

IF _FirstScan THEN
	_SMC_GroupJog2.Velocity := 50.0;
	_SMC_GroupJog2.Acceleration := 300.0;
	_SMC_GroupJog2.Deceleration := 300.0;
	_SMC_GroupJog2.Jerk := 1000.0;
	_SMC_GroupJog2.MaxAngularDistance := 90.0;
	_SMC_GroupJog2.MaxLinearDistance := 200.0;
	_SMC_GroupJog2.AccFactor := 1.0;
	_SMC_GroupJog2.VelFactor := 0.1;
	_SMC_GroupJog2.JerkFactor := 1.0;
	_SMC_GroupJog2.TorqueFactor := 1.0;
	_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.TCS;
	
END_IF

//
_M_HandleController();
_M_HandlePose();

//
_EnableFtrig(CLK:=Enable);
IF _EnableFtrig.Q THEN
	_SMC_GroupJog2.Enable := FALSE;
END_IF

//
CASE _SequenceMain OF
	STEP_DONE: // done
		Busy := FALSE;
		Done := TRUE;
		_SequenceMain := STEP_IDLE;
		_MoveCommandProcessor.M_Home();
		
	STEP_IDLE: // IDLE
		IF _ExecuteRtrig.Q AND Enable THEN
			Busy := TRUE;
			Done := FALSE;
			_M_CheckOffsets();
			_SequenceMain := STEP_GROUP_ENABLE;
		END_IF
		
	STEP_GROUP_ENABLE:
		IF GroupHandler.M_EnableGroup() THEN
			_SequenceMain := STEP_WAIT_ENABLE;
		ELSE
			_SequenceMain := STEP_DONE;
			Error := TRUE;
			ErrorID := GroupHandler.ErrorID;
		END_IF
		
	STEP_WAIT_ENABLE:
		// TODO add timeout timer here
		IF GroupHandler.P_GroupEnabled THEN
			_SequenceMain := STEP_SET_KINEMATICS;
		END_IF;
		
	STEP_SET_KINEMATICS: // set kinematics
		IF GroupHandler.M_SetKinematics(_SMC_GroupJog2.CoordSystem) THEN
			_SequenceMain := STEP_WAIT_KINEMATICS;
		ELSE
			_SequenceMain := STEP_DONE;
			Error := TRUE;
			ErrorID := GroupHandler.ErrorID;
		END_IF
		
	STEP_WAIT_KINEMATICS:
		// TODO add timeout timer here
		IF GroupHandler.P_KinematicsSet THEN
			_SequenceMain := STEP_WAIT_JOG;
		END_IF
		
	STEP_WAIT_JOG: //
		IF _SMC_GroupJog2.Error THEN
			Error := TRUE;
			ErrorID := _SMC_GroupJog2.ErrorID;
		END_IF
		IF _ExecuteFtrig.Q THEN
			//_SequenceMain := STEP_GROUP_DISABLE;
			_SequenceMain := STEP_DONE;
		END_IF
		
	// TODO: do we need to disable the group at this point? lets leave this here for now but skip it.	
	STEP_GROUP_DISABLE:
		IF GroupHandler.M_DisableGroup() THEN
			_SequenceMain := STEP_WAIT_DISABLE;
		ELSE
			_SequenceMain := STEP_DONE;
			Error := TRUE;
			ErrorID := GroupHandler.ErrorID;
		END_IF
		
	STEP_WAIT_DISABLE:
		// TODO add timeouttimer here
		IF NOT GroupHandler.P_GroupEnabled THEN
			_SequenceMain := STEP_DONE;
		END_IF
	
END_CASE

//
IF _ResetRtrig.Q AND Error THEN
	Error := FALSE;
	ErrorID := SMC_NO_ERROR;
	_SequenceMain := STEP_DONE;
	GroupHandler.M_ResetGroup();
	_MoveCommandProcessor.M_Home();
END_IF

_SMC_GroupJog2(
	AxisGroup:= AxisGroup, 
	Enable:= , 
	Forward:= , 
	Backward:= , 
	MaxLinearDistance:= , 
	MaxAngularDistance:= , 
	Velocity:= , 
	Acceleration:= , 
	Deceleration:= , 
	Jerk:= , 
	VelFactor:= , 
	AccFactor:= , 
	JerkFactor:= , 
	TorqueFactor:= , 
	CoordSystem:= , 
	ABC_as_ACS:= , 
	Active=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	CurrentPosition=&gt; Position);

//
CoordSystem := _SMC_GroupJog2.CoordSystem;
ABC_as_ACS := _SMC_GroupJog2.ABC_as_ACS;
Enabled := _SMC_GroupJog2.Enable;

//
_ErrorRtrig(CLK:=GroupHandler.Error
				OR _SMC_GroupJog2.Error
				OR _MoveCommandProcessor.Error);			
IF _ErrorRtrig.Q THEN
	// TODO need to rework how error messages are handled (globally)
	// if the move command processor has an error, we dont know what it is.
	Error := TRUE;
END_IF

// do not put anything after this
_FirstScan := FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_HandleController" ObjectId="dcf131a0-32b4-4630-a728-b085ba029110">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <globalVars>
                          <variable name="OptionsTimer">
                            <type>
                              <derived name="TON" />
                            </type>
                            <initialValue>
                              <structValue>
                                <value member="PT">
                                  <simpleValue value="TIME#1s0ms" />
                                </value>
                              </structValue>
                            </initialValue>
                          </variable>
                          <variable name="OptionsRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="ShareTimer">
                            <type>
                              <derived name="TON" />
                            </type>
                            <initialValue>
                              <structValue>
                                <value member="PT">
                                  <simpleValue value="TIME#1s0ms" />
                                </value>
                              </structValue>
                            </initialValue>
                          </variable>
                          <variable name="ShareRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="OptionsShareRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="JogEnabledRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="JogEnabledFtrig">
                            <type>
                              <derived name="F_TRIG" />
                            </type>
                          </variable>
                          <variable name="SquareButtonRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="TriangleButtonRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="CircleButtonRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="CrossButtonRtrig">
                            <type>
                              <derived name="R_TRIG" />
                            </type>
                          </variable>
                          <variable name="R2_Last">
                            <type>
                              <USINT />
                            </type>
                          </variable>
                          <variable name="JoyStickLeftXLast">
                            <type>
                              <USINT />
                            </type>
                          </variable>
                          <variable name="JoyStickLeftYLast">
                            <type>
                              <USINT />
                            </type>
                          </variable>
                          <variable name="JoyStickRightXLast">
                            <type>
                              <USINT />
                            </type>
                          </variable>
                          <variable name="JoyStickRightYLast">
                            <type>
                              <USINT />
                            </type>
                          </variable>
                          <variable name="FactorMin">
                            <type>
                              <LREAL />
                            </type>
                            <initialValue>
                              <simpleValue value="0.01" />
                            </initialValue>
                          </variable>
                        </globalVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//
OptionsTimer(IN:=Controller.P_State.Buttons.Options);
OptionsRtrig(CLK:=Controller.P_State.Buttons.Options);
//
ShareTimer(IN:=Controller.P_State.Buttons.Share);
ShareRtrig(CLK:=Controller.P_State.Buttons.Share);
//
OptionsShareRtrig(CLK:=OptionsTimer.Q AND_THEN ShareTimer.Q);
JogEnabledRtrig(CLK:=_SMC_GroupJog2.Enable);
JogEnabledFtrig(CLK:=_SMC_GroupJog2.Enable);


IF Enable AND_THEN Controller.P_State.Connected THEN
	
	// toggle jog enable
	IF OptionsShareRtrig.Q THEN
		_SMC_GroupJog2.Enable := NOT _SMC_GroupJog2.Enable;
	END_IF
	IF JogEnabledRtrig.Q OR JogEnabledFtrig.Q THEN
		IF _SMC_GroupJog2.Enable THEN
			_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.TCS;
			Controller.M_SetTriggerMode(E_ControllerTrigger.Right, E_ControllerTriggerMode.Rigid);
			Controller.M_SetTriggerForce(E_ControllerTrigger.Right, E_ControllerTriggerForceParameter.One, 0);
			Controller.M_SetPlayerID(E_ControllerPlayerID.PlayerALL);
			Controller.M_SetMicrophoneState(TRUE);
		ELSE
			Controller.M_SetTriggerMode(E_ControllerTrigger.Right, E_ControllerTriggerMode.Off);
			Controller.M_SetMicrophoneState(FALSE);
		END_IF
	END_IF
	
	// cycle through coord system
	IF OptionsRtrig.Q AND NOT Controller.P_State.Buttons.Share THEN
		CASE _SMC_GroupJog2.CoordSystem OF
			SMC_COORD_SYSTEM.ACS:
				_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.MCS;
				Controller.M_SetPlayerID(E_ControllerPlayerID.Player2);
			SMC_COORD_SYSTEM.MCS:
				_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.PCS_1;
				Controller.M_SetPlayerID(E_ControllerPlayerID.Player3);
			SMC_COORD_SYSTEM.PCS_1:
				_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.PCS_2;
				Controller.M_SetPlayerID(E_ControllerPlayerID.Player4);
			SMC_COORD_SYSTEM.PCS_2:
				_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.TCS;
				Controller.M_SetPlayerID(E_ControllerPlayerID.PlayerALL);
			SMC_COORD_SYSTEM.TCS:
				_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.ACS; // skip WCS
				Controller.M_SetPlayerID(E_ControllerPlayerID.Player1);
			SMC_COORD_SYSTEM.WCS:
				_SMC_GroupJog2.CoordSystem := SMC_COORD_SYSTEM.ACS;
				Controller.M_SetPlayerID(E_ControllerPlayerID.Player1);
		END_CASE
	END_IF
	
	// toggle the ABC as ACS setting
	IF ShareRtrig.Q AND NOT Controller.P_State.Buttons.Options THEN
		_SMC_GroupJog2.ABC_as_ACS := NOT _SMC_GroupJog2.ABC_as_ACS;
	END_IF
	
	// set the velocity factor while the left trigger button is pressed
	IF Controller.P_State.Dpad.Left AND_THEN Controller.P_State.Triggers.Right.Two &lt;&gt; R2_Last THEN
		R2_Last := Controller.P_State.Triggers.Right.Two;
		_SMC_GroupJog2.VelFactor := MAX(FactorMin, Controller.P_State.Triggers.Right.Two * 1.0 / 255.0);
	END_IF
	// set the acceleration factor while the up dpad button is pressed
	IF Controller.P_State.Dpad.Up AND_THEN Controller.P_State.Triggers.Right.Two &lt;&gt; R2_Last THEN
		R2_Last := Controller.P_State.Triggers.Right.Two;
		_SMC_GroupJog2.AccFactor := MAX(FactorMin, Controller.P_State.Triggers.Right.Two * 1.0 / 255.0);
	END_IF
	// set the jerk factor while the right dpad button is pressed
	IF Controller.P_State.Dpad.Right AND_THEN Controller.P_State.Triggers.Right.Two &lt;&gt; R2_Last THEN
		R2_Last := Controller.P_State.Triggers.Right.Two;
		_SMC_GroupJog2.JerkFactor := MAX(FactorMin, Controller.P_State.Triggers.Right.Two * 1.0 / 255.0);
	END_IF
	// set the torque factor while the down dpad down is pressed
	IF Controller.P_State.Dpad.Down AND_THEN Controller.P_State.Triggers.Right.Two &lt;&gt; R2_Last THEN
		R2_Last := Controller.P_State.Triggers.Right.Two;
		_SMC_GroupJog2.TorqueFactor := MAX(FactorMin, Controller.P_State.Triggers.Right.Two * 1.0 / 255.0);
	END_IF
	
	// first 4 poses can be called using buttons
	SquareButtonRtrig(CLK:=Controller.P_State.Buttons.Square);
	IF SquareButtonRtrig.Q THEN
		M_MoveToPose(E_Pose.One);
	END_IF
	TriangleButtonRtrig(CLK:=Controller.P_State.Buttons.Triangle);
	IF TriangleButtonRtrig.Q THEN
		M_MoveToPose(E_Pose.Two);
	END_IF
	CircleButtonRtrig(CLK:=Controller.P_State.Buttons.Circle);
	IF CircleButtonRtrig.Q THEN
		M_MoveToPose(E_Pose.Three);
	END_IF
	CrossButtonRtrig(CLK:=Controller.P_State.Buttons.Cross);
	IF CrossButtonRtrig.Q THEN
		M_MoveToPose(E_Pose.Four);
	END_IF
	
	//
	IF _SequenceMain = STEP_WAIT_JOG THEN
		
		//
		IF Controller.P_State.Joysticks.Left.X &lt;&gt; JoyStickLeftXLast
			OR Controller.P_State.Joysticks.Left.Y &lt;&gt; JoyStickLeftYLast THEN
				//
				JoyStickLeftXLast := Controller.P_State.Joysticks.Left.X;
				JoyStickLeftYLast := Controller.P_State.Joysticks.Left.Y;
				//	
				IF NOT Controller.P_State.Triggers.Left.One THEN
					// disable
					_SMC_GroupJog2.Forward[0] := FALSE;
					// disable
					_SMC_GroupJog2.Backward[0] := FALSE;
					// Controller.P_State.Joysticks.Left.X // X0-128 is -Y (Backward[1])
					_SMC_GroupJog2.Backward[1] := Controller.P_State.Joysticks.Left.X &lt; _ControllerCenter - _ControllerDeadZone;
					// Controller.P_State.Joysticks.Left.X // X128-256 is +Y (Forward[1])
					_SMC_GroupJog2.Forward[1] := Controller.P_State.Joysticks.Left.X &gt; _ControllerCenter + _ControllerDeadZone;
					// Controller.P_State.Joysticks.Left.Y // Y0-128 is +Z (Forward[2])
					_SMC_GroupJog2.Forward[2] := Controller.P_State.Joysticks.Left.Y &lt; _ControllerCenter - _ControllerDeadZone;
					// Controller.P_State.Joysticks.Left.Y // Y128-256 is -Z (Backward[2])
					_SMC_GroupJog2.Backward[2] := Controller.P_State.Joysticks.Left.Y &gt; _ControllerCenter + _ControllerDeadZone;
				ELSE
					// Controller.P_State.Joysticks.Left.Y // Y0-128 is +X (Forward[0])
					_SMC_GroupJog2.Forward[0] := Controller.P_State.Joysticks.Left.Y &lt; _ControllerCenter - _ControllerDeadZone;
					// Controller.P_State.Joysticks.Left.Y // Y128-256 is -X (Backward[0])
					_SMC_GroupJog2.Backward[0] := Controller.P_State.Joysticks.Left.Y &gt; _ControllerCenter + _ControllerDeadZone;
					// disable
					_SMC_GroupJog2.Backward[1] := FALSE;
					// disable
					_SMC_GroupJog2.Forward[1] := FALSE;
					// disable
					_SMC_GroupJog2.Forward[2] := FALSE;
					// disable])
					_SMC_GroupJog2.Backward[2] := FALSE;
				END_IF
		END_IF

		//
		IF Controller.P_State.Joysticks.Right.X &lt;&gt; JoyStickRightXLast
			OR Controller.P_State.Joysticks.Right.Y &lt;&gt; JoyStickRightYLast THEN
				//
				JoyStickRightXLast := Controller.P_State.Joysticks.Right.X;
				JoyStickRightYLast := Controller.P_State.Joysticks.Right.Y;
				//				
				IF NOT Controller.P_State.Triggers.Right.One THEN
					// Controller.P_State.Joysticks.Right.X // X0-128 is +Roll (rot about x) (Forward[3])
					_SMC_GroupJog2.Backward[3] := Controller.P_State.Joysticks.Right.X &gt; _ControllerCenter + _ControllerDeadZone;
					// Controller.P_State.Joysticks.Right.X // X128-256 is -Roll (rot about x) (Backward[3])
					_SMC_GroupJog2.Forward[3] := Controller.P_State.Joysticks.Right.X &lt; _ControllerCenter - _ControllerDeadZone;
					// Controller.P_State.Joysticks.Right.Y // Y0-128 is +Pitch (rot about y) (Forward[4])
					_SMC_GroupJog2.Forward[4] := Controller.P_State.Joysticks.Right.Y &lt; _ControllerCenter - _ControllerDeadZone;
					// Controller.P_State.Joysticks.Right.Y // Y128-256 is -Pitch (rot about y) (Backward[4])
					_SMC_GroupJog2.Backward[4] := Controller.P_State.Joysticks.Right.Y &gt; _ControllerCenter + _ControllerDeadZone;
					// disable
					_SMC_GroupJog2.Backward[5] := FALSE;
					// disable
					_SMC_GroupJog2.Forward[5] := FALSE;
				ELSE
					// disable
					_SMC_GroupJog2.Backward[3] := FALSE;
					// disable
					_SMC_GroupJog2.Forward[3] := FALSE;
					// disable
					_SMC_GroupJog2.Forward[4] := FALSE;
					// disable
					_SMC_GroupJog2.Backward[4] := FALSE;
					// Controller.P_State.Joysticks.Right.X // X0-128 is -Yaw (rot about z) (Backward[5])
					_SMC_GroupJog2.Backward[5] := Controller.P_State.Joysticks.Right.X &lt; _ControllerCenter - _ControllerDeadZone;
					// Controller.P_State.Joysticks.Right.X // X128-256 is +Yaw (rot about z) (Forward[5])
					_SMC_GroupJog2.Forward[5] := Controller.P_State.Joysticks.Right.X &gt; _ControllerCenter + _ControllerDeadZone;
				END_IF
		END_IF

	END_IF
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_CheckOffsets" ObjectId="347358c3-2be2-4bfb-955f-c6b01631848c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_i">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_j">
                            <type>
                              <INT />
                            </type>
                          </variable>
                          <variable name="_k">
                            <type>
                              <INT />
                            </type>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF _SMC_GroupJog2.Enable THEN
	FOR _j:=0 TO GVL.MCS_POS_IDX-GVL.TCP_POS_IDX BY 1 DO
		_OffsetExist[_j] := FALSE;
	END_FOR
	FOR _i := GVL.TCP_POS_IDX TO GVL.MCS_POS_IDX BY 1 DO
		IF StoredPositions[_i].Position.X &lt;&gt; 0
			OR_ELSE StoredPositions[_i].Position.Y &lt;&gt; 0
			OR_ELSE StoredPositions[_i].Position.Z &lt;&gt; 0
			OR_ELSE StoredPositions[_i].Position.A &lt;&gt; 0
			OR_ELSE StoredPositions[_i].Position.B &lt;&gt; 0
			OR_ELSE StoredPositions[_i].Position.C &lt;&gt; 0 THEN
				_OffsetExist[_i - GVL.TCP_POS_IDX] := TRUE;
		END_IF
	END_FOR
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_ClearOffsets" ObjectId="5b18153f-c32f-4189-9485-f501f275c7f5">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
FOR _j:=0 TO 3 BY 1 DO
	_OffsetExist[_j] := FALSE;
END_FOR
FOR _i := GVL.TCP_POS_IDX TO GVL.MCS_POS_IDX BY 1 DO
	StoredPositions[_i].Position.X := 0.0;
	StoredPositions[_i].Position.Y := 0.0;
	StoredPositions[_i].Position.Z := 0.0;
	StoredPositions[_i].Position.A := 0.0;
	StoredPositions[_i].Position.B := 0.0;
	StoredPositions[_i].Position.C := 0.0;
END_FOR</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_HandlePose" ObjectId="043b4f3b-61e5-44ea-8800-b568d3612acd">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_MoveCommand">
                            <type>
                              <derived name="ST_MoveCmd" />
                            </type>
                          </variable>
                          <variable name="_PoseSpeed">
                            <type>
                              <LREAL />
                            </type>
                            <initialValue>
                              <simpleValue value="20.0" />
                            </initialValue>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">FOR _i:=0 TO GVL.POSE_5_IDX - GVL.POSE_1_IDX BY 1 DO
	IF _MoveToPose[_i] THEN
		_MoveToPose[_i] := FALSE;
		//
		IF GVL.PowerOn 
			AND_THEN PersistentVars.Flags[GVL.HOME_COMPLETE].Value
			AND_THEN NOT _MoveCommandProcessor.Busy
			AND_THEN NOT _MoveCommandProcessor.Error THEN
				//
				_MoveCommand.MoveType 			:= DUT_Command_MoveType.DirectMove;
				_MoveCommand.PositionType 		:= DUT_Command_PositionType.AbsolutePosition;
				_MoveCommand.CoordinateType 	:= DUT_Command_CoordinateType.Literal;
				_MoveCommand.Speed 				:= _PoseSpeed;
				_MoveCommand.CoordSystem 		:= SMC_COORD_SYSTEM.ACS;
				_MoveCommand.CoordRef 			:= PersistentVars.StoredPositions[GVL.POSE_1_IDX + _i].Position;
				//
				_MoveCommandProcessor.Command := BuildMoveCmd(_MoveCommand);
				_MoveCommandProcessor.M_Start();
				//
				EXIT;
		END_IF;
	END_IF
END_FOR

_MoveCommandProcessor(
	StoredPositions:= StoredPositions,
	VisionRegisters:= VisionRegisters,
	Flags:= Flags,
	AxisGroup:= AxisGroup, 
	GroupHandler:= GroupHandler,
	Velocity:= StoredPositions[GVL.SPEEDS_IDX].Position.X, 
	VelFactor:= StoredPositions[GVL.SPEEDS_IDX].Position.A,
	Acceleration:= StoredPositions[GVL.SPEEDS_IDX].Position.Y, 
	AccFactor:= StoredPositions[GVL.SPEEDS_IDX].Position.B,
	Jerk:= StoredPositions[GVL.SPEEDS_IDX].Position.Z,
	JerkFactor:= StoredPositions[GVL.SPEEDS_IDX].Position.C, 
	Position=&gt; ,
	ItfUnitMode=&gt; , 
	Error=&gt; );</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_MoveToPose" ObjectId="5971868c-619e-47a6-ac41-0e2ed68a066a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Pose">
                            <type>
                              <derived name="E_Pose" />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enabled 
	AND NOT _MoveCommandProcessor.Busy
	AND NOT _MoveCommandProcessor.Error THEN
		M_MoveToPose := TRUE;
		_MoveToPose[Pose] := TRUE;
ELSE
	M_MoveToPose := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9ad0dd5a-e160-4345-8eee-ad9cf9bfb3eb</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_CommandProcessor" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="GroupHandler">
                      <type>
                        <derived name="FB_GroupHandler" />
                      </type>
                    </variable>
                    <variable name="CmdIO">
                      <type>
                        <derived name="ST_LogicCmdIO" />
                      </type>
                    </variable>
                    <variable name="PrgProcessor">
                      <type>
                        <derived name="FB_ProgramProcessor" />
                      </type>
                    </variable>
                  </inOutVars>
                  <inputVars>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="ItfActiveProcessorUnitMode">
                      <type>
                        <derived name="PACK_ML.IUnitMode" />
                      </type>
                    </variable>
                    <variable name="ItfActiveModule">
                      <type>
                        <derived name="ItfModule" />
                      </type>
                    </variable>
                    <variable name="StatusText">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_Commands">
                      <type>
                        <array>
                          <dimension lower="GVL.PROG_CMDS_ARR_BEG" upper="GVL.PROG_CMDS_ARR_END" />
                          <baseType>
                            <derived name="DUT_Command" />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_DummyUnitMode">
                      <type>
                        <derived name="PACK_ML.UnitMode" />
                      </type>
                    </variable>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_ActiveCommand">
                      <type>
                        <derived name="DUT_Command" />
                      </type>
                    </variable>
                    <variable name="_CurrentCmdIdx">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="_ProcessMoveCommand">
                      <type>
                        <derived name="MoveCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="_ProcessPauseCommand">
                      <type>
                        <derived name="PauseCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="_ProcessOutputCommand">
                      <type>
                        <derived name="OutputCmdProcessor" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">_ProcessInputCommand: InputCommandProcessor;</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_ProcessorDoneRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ProcessVisionCommand">
                      <type>
                        <derived name="REFERENCE TO VisionCmdProcessor" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> keep vision in separate task</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_ProcessVarSetCommand">
                      <type>
                        <derived name="VarSetCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="_ProcessCncCommand">
                      <type>
                        <derived name="CncCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="_ProcessLogicCommand">
                      <type>
                        <derived name="LogicCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="_FirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_CMD">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// keep this reference at the top in case we reference this somewhere else first
// hint: originally this was an issue because of the done and reset bits being referenced first
_ProcessVisionCommand REF= _40_Vision.ProcessVisionCommand;

//
SUPER^();

//
IF _FirstScan THEN
	// will exception if we don't set this on first scan
	_DummyUnitMode(sName := 'Active Processor', 
					eInitialState := PACK_ML.State.Idle,
					xActive := TRUE);
	ItfActiveProcessorUnitMode := _DummyUnitMode;
END_IF

// this is at best a hack and needs to be rethought out.
// we logically cant assign a process as the active unit mode 
// at start up so we use this dummy one
CASE _DummyUnitMode.CurrentState OF
	PACK_ML.State.Stopped,
	PACK_ML.State.Aborted,
	PACK_ML.State.Held,
	PACK_ML.State.Suspended,
	PACK_ML.State.Complete,
	PACK_ML.State.Idle:
		//
	PACK_ML.State.Resetting,
	PACK_ML.State.Starting,
	PACK_ML.State.Execute,
	PACK_ML.State.Suspending,
	PACK_ML.State.UnSuspending,
	PACK_ML.State.Holding,
	PACK_ML.State.UnHolding,
	PACK_ML.State.Completing,
	PACK_ML.State.Aborting,
	PACK_ML.State.Stopping,
	PACK_ML.State.Clearing:
		_DummyUnitMode.ActingStateCompleted();
END_CASE

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
IF _ProcessMoveCommand.Error THEN
	SUPER^.M_Error(Description:=CONCAT('Move Error: ', _ProcessMoveCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF
IF _ProcessPauseCommand.Error THEN
	SUPER^.M_Error(Description:=CONCAT('Pause Error: ', _ProcessPauseCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF
(*IF _ProcessInputCommand.Error THEN
	SUPER^._M_Error(Description:=CONCAT('Input Error: ', _ProcessInputCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF*)
IF _ProcessOutputCommand.Error THEN
	SUPER^.M_Error(Description:=CONCAT('Output Error: ', _ProcessOutputCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF       
IF _ProcessVisionCommand.Error THEN
	SUPER^.M_Error(Description:=CONCAT('Vision Error: ', _ProcessVisionCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF
IF _ProcessVarSetCommand.Error THEN
	SUPER^.M_Error(Description:=CONCAT('Variable Error: ', _ProcessVarSetCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF
IF _ProcessCncCommand.Error THEN
	SUPER^.M_Error(Description:=CONCAT('CNC Error: ', _ProcessCncCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF
IF _ProcessLogicCommand.Error THEN
	SUPER^.M_Error(Description:=CONCAT('Logic Error: ', _ProcessLogicCommand.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF

_ProcessMoveCommand(
	StoredPositions:= SUPER^.StoredPositions,
	VisionRegisters:= SUPER^.VisionRegisters,
	Flags:= SUPER^.Flags,
	AxisGroup:= AxisGroup,
	GroupHandler:= GroupHandler,
	Velocity:= PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.X, 
	VelFactor:= PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.A,
	Acceleration:= PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.Y, 
	AccFactor:= PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.B,
	Jerk:= PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.Z,
	JerkFactor:= PersistentVars.StoredPositions[GVL.SPEEDS_IDX].Position.C, 
	Position=&gt; ,
	ItfUnitMode=&gt;, 
	Error=&gt; );

_ProcessPauseCommand(
	StoredPositions:= SUPER^.StoredPositions,
	VisionRegisters:= SUPER^.VisionRegisters,
	Flags:= SUPER^.Flags, 
	ElapsedTime=&gt; , 
	RemainingTime=&gt; , 
	ItfUnitMode=&gt;, 
	Error=&gt; );

//_ProcessInputCommand();
_ProcessOutputCommand(
	StoredPositions:= SUPER^.StoredPositions,
	VisionRegisters:= SUPER^.VisionRegisters,
	Flags:= SUPER^.Flags,
	Digital:= CmdIO.Output,
	Pwm:= CmdIO.Pwm,
	Enable:= Enable,
	ItfUnitMode=&gt;, 
	Error=&gt; );
	
_ProcessVarSetCommand( 
	StoredPositions:= SUPER^.StoredPositions,
	VisionRegisters:= SUPER^.VisionRegisters,
	Flags:= SUPER^.Flags,
	ItfUnitMode=&gt;, 
	Error=&gt; , 
	ErrorDescription=&gt; );

_ProcessCncCommand(
	StoredPositions:= SUPER^.StoredPositions,
	VisionRegisters:= SUPER^.VisionRegisters,
	Flags:= SUPER^.Flags,
	AxisGroup:= AxisGroup, 
	SM3_Drive_PosControl_J1:=SM_Drive_PosControl_J1,
	SM3_Drive_PosControl_J2:=SM_Drive_PosControl_J2,
	SM3_Drive_PosControl_J3:=SM_Drive_PosControl_J3,
	SM3_Drive_PosControl_J4:=SM_Drive_PosControl_J4,
	SM3_Drive_PosControl_J5:=SM_Drive_PosControl_J5,
	SM3_Drive_PosControl_J6:=SM_Drive_PosControl_J6,
	GapVelocity:= , 
	AvoidGaps:= , 
	GapAccel:= , 
	ItfUnitMode=&gt;, 
	Error=&gt; , 
	ErrorDescription=&gt; );
	
_ProcessLogicCommand(
	StoredPositions:= SUPER^.StoredPositions,
	VisionRegisters:= SUPER^.VisionRegisters,
	Flags:= SUPER^.Flags,
	CmdProcessor:= THIS^,
	PrgProcessor:= PrgProcessor,
	ItfUnitMode=&gt;, 
	Error=&gt; , 
	ErrorDescription=&gt; , 
	CmdIO:= CmdIO);
	
_FirstScan := FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="642c5013-51df-4c85-a867-73cd18842e60">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="b97773af-d3db-4ff8-bc09-d39e6c9c165a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqResetting OF
	0:
		_ProcessMoveCommand.M_Home();
		_ProcessPauseCommand.M_Home();
		//_ProcessInputCommand.M_Home();
		_ProcessOutputCommand.M_Home();
		_ProcessVisionCommand.M_Home();
		_ProcessVarSetCommand.M_Home();
		_ProcessCncCommand.M_Home();
		_ProcessLogicCommand.M_Home();
		_SeqResetting := _SeqResetting + 1;
	1:
		IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Idle
			AND _ProcessPauseCommand.PropCurrentState = PACK_ML.State.Idle 
			//AND _ProcessInputCommand.PropCurrentState = PACK_ML.State.Idle
			AND _ProcessOutputCommand.PropCurrentState = PACK_ML.State.Idle
			AND _ProcessVisionCommand.PropCurrentState = PACK_ML.State.Idle
			AND _ProcessVarSetCommand.PropCurrentState = PACK_ML.State.Idle
			AND _ProcessCncCommand.PropCurrentState = PACK_ML.State.Idle
			AND _ProcessLogicCommand.PropCurrentState = PACK_ML.State.Idle THEN
				_SeqResetting := 0;
				SUPER^.M_StateComplete();
		END_IF
		
END_CASE

SUPER^.M_Reset();

(*IF ItfActiveModule &lt;&gt; 0 THEN
	CASE _Seq OF
		0:
			IF NOT ItfActiveModule.PropCurrentState = PACK_ML.State.Idle THEN
				ItfActiveModule.M_Home();
				_Seq := 1;
			ELSE
				SUPER^.M_StateComplete();
			END_IF
		1:
			IF ItfActiveModule.PropCurrentState = PACK_ML.State.Idle THEN
				_Seq := 0;
			END_IF
			
	END_CASE
	
ELSE
	SUPER^.M_StateComplete();
	_Seq := 0;
	
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetNextCommand" ObjectId="7318a297-a063-4ac2-856c-165720d821a4">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="CommandNumber">
                            <type>
                              <UINT />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF CommandNumber &lt;= GVL.PROG_CMDS_ARR_END AND CommandNumber &gt;= GVL.PROG_CMDS_ARR_BEG THEN
	_CurrentCmdIdx := CommandNumber;
	M_SetNextCommand := TRUE;
ELSE
	M_SetNextCommand := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Idle" ObjectId="a8790f5b-e067-4003-a446-4302e4343c80">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// in this state, we want to reset all the function blocks and hang out
_SeqMain := _STEP_IDLE;
_SeqAborting := 0;
_SeqClearing := 0;
_SeqResetting := 0;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="95b94fb2-14e3-4b3b-8405-e444036b8980">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// SUPER already does this but the default is eInitialState:=PACK_ML.State.Idle 
// and we want PACK_ML.State.Aborted for the Orchestrator
SUPER^._UnitMode(sName := 'Command Processor',
				eInitialState := PACK_ML.State.Aborted,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="9c738675-c279-409c-92e2-b6bbcd05e321">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// we can consider this the "INIT" state
_SeqMain := _STEP_CMD;
SUPER^._TimeoutTimer.PT := T#0MS; // timeout is ignored if set to 0
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="9d44a219-dd62-4e0a-8b38-07968243ee03">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
//
CASE _SeqMain OF
  	_STEP_DONE:
		_SeqMain := _STEP_IDLE;
		
	_STEP_IDLE:
		// hang out here until called to run
		_CurrentCmdIdx := 0;
		SUPER^.M_StateComplete();
		
	_STEP_CMD: //
		IF NOT Enable THEN
			_SeqMain := _STEP_DONE;
		ELSIF _CurrentCmdIdx &lt;= GVL.PROG_CMDS_ARR_END AND _CurrentCmdIdx &gt;= GVL.PROG_CMDS_ARR_BEG THEN
			//
			IF _Commands[_CurrentCmdIdx].CommandType = DUT_CommandType.Disabled THEN
				// want to increment here so that we can disable some commands 
				// in the program and it continue to execute
				_CurrentCmdIdx := _CurrentCmdIdx + 1;
				_SeqMain := _STEP_CMD;
				
			ELSE
				CASE _Commands[_CurrentCmdIdx].CommandType OF
					DUT_CommandType.MoveCommand: //
						StatusText := 'Move Command in Progress.';
						ItfActiveProcessorUnitMode := _ProcessMoveCommand.ItfUnitMode;
						ItfActiveModule := _ProcessMoveCommand;
						_ProcessMoveCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						ItfActiveModule.M_Start();
					
					DUT_CommandType.PauseCommand: //
						StatusText := 'Pause Command in Progress.';
						ItfActiveProcessorUnitMode := _ProcessPauseCommand.ItfUnitMode;
						ItfActiveModule := _ProcessPauseCommand;
						_ProcessPauseCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						ItfActiveModule.M_Start();
					
					DUT_CommandType.InputCommand: //
						StatusText := 'Input Command in Progress.';
						//ActiveUnitMode := _ProcessInputCommand.ItfUnitMode;
						//ItfActiveModule := _ProcessInputCommand;
						//_ProcessInputCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						//ItfActiveModule.M_Start();
					
					DUT_CommandType.OutputCommand: //
						StatusText := 'Output Command in Progress.';
						ItfActiveProcessorUnitMode := _ProcessOutputCommand.ItfUnitMode;
						ItfActiveModule := _ProcessOutputCommand;
						_ProcessOutputCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						ItfActiveModule.M_Start();
					
					DUT_CommandType.VisionCommand: //
						StatusText := 'Vision Command in Progress.';
						ItfActiveProcessorUnitMode := _ProcessVisionCommand.ItfUnitMode;
						ItfActiveModule := _ProcessVisionCommand;
						_ProcessVisionCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						ItfActiveModule.M_Start();
					
					DUT_CommandType.VarSetCommand: //
						StatusText := 'VarSet Command in Progress.';
						ItfActiveProcessorUnitMode := _ProcessVarsetCommand.ItfUnitMode;
						ItfActiveModule := _ProcessVarsetCommand;
						_ProcessVarsetCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						ItfActiveModule.M_Start();
					
					DUT_CommandType.CncCommand: //
						StatusText := 'CNC Command in Progress.';
						ItfActiveProcessorUnitMode := _ProcessCncCommand.ItfUnitMode;
						ItfActiveModule := _ProcessCncCommand;
						_ProcessCncCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						ItfActiveModule.M_Start();
					
					DUT_CommandType.LogicCommand: //
						StatusText := 'Logic Command in Progress.';
						ItfActiveProcessorUnitMode := _ProcessLogicCommand.ItfUnitMode;
						ItfActiveModule := _ProcessLogicCommand;
						_ProcessLogicCommand.Command := _Commands[_CurrentCmdIdx].CommandString;
						ItfActiveModule.M_Start();
						
				ELSE
					_SeqMain := _STEP_CMD;
					
				END_CASE
				
				// wait for executing
				IF ItfActiveModule.PropCurrentState = PACK_ML.State.Execute THEN
					_ActiveCommand := _Commands[_CurrentCmdIdx];
					_CurrentCmdIdx := _CurrentCmdIdx + 1;
					_SeqMain := _STEP_WAIT;
				END_IF
			END_IF
				
		ELSE
			_SeqMain := _STEP_DONE;
		END_IF
		
	_STEP_WAIT: // wait for command to finish
		//
		IF _ProcessorDoneRtrig.Q THEN
			_SeqMain := _STEP_CMD;
		END_IF
		//
		IF ItfActiveModule.PropError THEN
			SUPER^._UnitMode.Suspend();
			_SeqMain := _STEP_ERR;
		END_IF
		
	_STEP_ERR: //
	
END_CASE

// watch for rising edge of idle state. this was done for all processors since 
// the vision processor runs in a separate task and isnt guaranteed to start in the same 
// PLC scan.
_ProcessorDoneRtrig(clk:=ItfActiveProcessorUnitMode.CurrentState = PACK_ML.State.Idle);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Suspending" ObjectId="59fc01db-f06d-4b70-9e04-ba20bd9ce6b9">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ItfActiveModule &lt;&gt; 0 THEN
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Execute THEN
		ItfActiveModule.M_Hold();
		IF ItfActiveModule.PropCurrentState = PACK_ML.State.Held THEN
			SUPER^.M_StateComplete();
		END_IF
	ELSE
		SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnSuspending" ObjectId="d8134748-b5a7-4257-9a4e-3b1612d98833">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//
IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Start();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Execute THEN
		SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF

//
_SeqMain := _STEP_WAIT;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Holding" ObjectId="e05e442b-e0e4-4e0a-9099-5c3c862a429f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Hold();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Held THEN
		SUPER^.M_StateComplete();
	END_IF
ELSE
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnHolding" ObjectId="4a0b543c-927e-400a-b5da-ba002055cdd0">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//
IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Start();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Execute THEN
		SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF

//
_SeqMain := _STEP_WAIT;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Aborting" ObjectId="f73e1a47-970e-47c3-b986-e1fe2eaafd0c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqAborting OF
	0:
		_ProcessMoveCommand.M_Abort();
		_ProcessPauseCommand.M_Abort();
		//_ProcessInputCommand.M_Abort();
		_ProcessOutputCommand.M_Abort();
		_ProcessVisionCommand.M_Abort();
		_ProcessVarSetCommand.M_Abort();
		_ProcessCncCommand.M_Abort();
		_ProcessLogicCommand.M_Abort();
		_SeqAborting := _SeqAborting + 1;
	1:
		IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Aborted
			AND _ProcessPauseCommand.PropCurrentState = PACK_ML.State.Aborted 
			//AND _ProcessInputCommand.PropCurrentState = PACK_ML.State.Aborted
			AND _ProcessOutputCommand.PropCurrentState = PACK_ML.State.Aborted
			AND _ProcessVisionCommand.PropCurrentState = PACK_ML.State.Aborted
			AND _ProcessVarSetCommand.PropCurrentState = PACK_ML.State.Aborted
			AND _ProcessCncCommand.PropCurrentState = PACK_ML.State.Aborted
			AND _ProcessLogicCommand.PropCurrentState = PACK_ML.State.Aborted THEN
				_SeqAborting := 0;
				SUPER^.M_StateComplete();
		END_IF
		
END_CASE

(*IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Abort();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Aborted THEN
		SUPER^.M_StateComplete();
	END_IF
ELSE
	SUPER^.M_StateComplete();
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Stopping" ObjectId="b76b8c76-e672-465e-b5bc-a2cc80d6ee6f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Stop();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Idle 
		OR ItfActiveModule.PropCurrentState = PACK_ML.State.Stopped 
		OR ItfActiveModule.PropCurrentState = PACK_ML.State.Aborted 
		OR ItfActiveModule.PropCurrentState = PACK_ML.State.Complete THEN
			SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Clearing" ObjectId="766fbc5b-b0ec-40a6-bc48-5f02adefd0a5">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^.M_StateComplete();

(*IF SUPER^.Flags[GVL.HOME_COMPLETE].Value THEN
	CASE _SeqClearing OF
		0:
			_ProcessMoveCommand.M_Home();
			_SeqClearing := _SeqClearing + 1;
		1:
			IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Idle THEN
				_SeqClearing := _SeqClearing + 1;
			END_IF
		2:
			IF NOT _ProcessMoveCommand.Error THEN
				_ProcessMoveCommand.Command := GVL.Pose2;
				_ProcessMoveCommand.M_Start();
				_SeqClearing := _SeqClearing + 1;
			ELSE
				SUPER^._M_Error(Description:='Move processor errored. Please reset and try again');
				_SeqClearing := -1;
			END_IF
		3:
			IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Execute THEN
				_SeqClearing := _SeqClearing + 1;
			END_IF
		4:
			IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Complete 
				OR _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Stopped 
				OR _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Aborted
				OR _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Idle  THEN
					SUPER^.M_StateComplete();
					_SeqClearing := 0;
			END_IF
	END_CASE
ELSE
	SUPER^._M_Error(Description:='Drives are not homed. Please home and try again');
	_SeqClearing := -1;
END_IF

IF _ProcessMoveCommand.Error THEN
	SUPER^._M_Error(Description:='Move processor in error state. Please reset and try again');
	_SeqClearing := -1;
END_IF
*)

(*
IF ItfActiveModule &lt;&gt; 0 THEN
	//
	CASE _Seq OF
		0:
			IF NOT ItfActiveModule.PropCurrentState = PACK_ML.State.Stopped THEN
				ItfActiveModule.M_Abort();
				_Seq := 1;
			ELSE
				SUPER^.M_StateComplete();
			END_IF
		1:
			CASE ItfActiveModule.PropCurrentState OF
				PACK_ML.State.Aborted:
					ItfActiveModule.Clear();
				PACK_ML.State.Stopped:
					_Seq := 0;
			END_CASE
			
	END_CASE
ELSE
	_Seq := 0;
	SUPER^.M_StateComplete();
END_IF
*)
</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetCommands" ObjectId="b6f598fc-4eb1-4dc6-b9b6-f064109879cc">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="StartingCommand">
                            <type>
                              <UINT />
                            </type>
                          </variable>
                          <variable name="Commands">
                            <type>
                              <array>
                                <dimension lower="GVL.PROG_CMDS_ARR_BEG" upper="GVL.PROG_CMDS_ARR_END" />
                                <baseType>
                                  <derived name="DUT_Command" />
                                </baseType>
                              </array>
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF StartingCommand &gt;= GVL.PROG_CMDS_ARR_BEG AND StartingCommand &lt;= GVL.PROG_CMDS_ARR_END + 1 THEN // +1 because we want to be able to tell if calling program was on last command
	_CurrentCmdIdx := StartingCommand;
	_Commands := Commands;
	M_SetCommands := TRUE;
ELSE
	M_SetCommands := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_CurrentCommandIndex" ObjectId="d4fb3147-2a09-4011-bb95-1eb5cd53c440">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO UINT" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_CurrentCommandIndex REF= _CurrentCmdIdx;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_CurrentCommand" ObjectId="49585069-1976-4ffb-8b46-f97b3eeaff68">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO DUT_Command" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_CurrentCommand REF= _ActiveCommand;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>97872514-f094-4f4a-8630-59a989ffd663</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ParseMoveCmd" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_MoveCmd" />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CmdParams">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL.COMMAND_LEN" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_MoveTypeD">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'DIR'" />
                      </initialValue>
                    </variable>
                    <variable name="_MoveTypeL">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LIN'" />
                      </initialValue>
                    </variable>
                    <variable name="_MoveTypeC">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CIR'" />
                      </initialValue>
                    </variable>
                    <variable name="_ChangeTypeA">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ABS'" />
                      </initialValue>
                    </variable>
                    <variable name="_ChangeTypeR">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'REL'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemAcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ACS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemMcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'MCS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemPc1">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'PC1'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemPc2">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'PC2'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemTcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'TCS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemWcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'WCS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemIcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ICS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordTypeH">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LIT'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordTypeV">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VAR'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeS">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'STO'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeV">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VIS'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeF">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'FLG'" />
                      </initialValue>
                    </variable>
                    <variable name="_CircleModeBor">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'BOR'" />
                      </initialValue>
                    </variable>
                    <variable name="_CircleModeCen">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CEN'" />
                      </initialValue>
                    </variable>
                    <variable name="_CircleModeRad">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'RAD'" />
                      </initialValue>
                    </variable>
                    <variable name="_PathChoiceClw">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CLW'" />
                      </initialValue>
                    </variable>
                    <variable name="_PathChoiceCcw">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CCW'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// D is direct move. L is linear move. C is a circular move
// R is relative position. A is absolute position
// V is variable coordinated. H is a hardcoded coordinated
// S is stored position array. V is vision register array.
// D|L|C R|A Speed CoordSystem X0000.00 Y0000.00 Z0000.00 A0000.00 B0000.00 C0000.00 BOR|CEN|RAD CCW|CLW X0000.00 Y0000.00 Z0000.00 A0000.00 B0000.00 C0000.00
// 'D A 10 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
// 'C R 10 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
// 'D A 10 MCS V S 25'
// 'D A 10 MCS V V 33'
// 'C R 10 MCS V S 2 BOR CLW V S 005'
// 'C R 10 MCS V S 003 BOR CLW V V 006'
// 'C R 10 MCS V S 015 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
// 'C R 10 MCS H 250.0 0.0 500.0 0.0 45.0 180.0 BOR CLW V V 22'

Error := FALSE;
ErrorDescription := '';

// split command string into commands
_CmdParams:=F_SplitCmd(Command:=Command);

//
IF _CmdParams[0] = _MoveTypeD THEN
	stCommand.MoveType := DUT_Command_MoveType.DirectMove;
ELSIF _CmdParams[0] = _MoveTypeL THEN
	stCommand.MoveType := DUT_Command_MoveType.LinearMove;
ELSIF _CmdParams[0] = _MoveTypeC THEN
	stCommand.MoveType := DUT_Command_MoveType.CircularMove;
ELSE
	Error := TRUE;
	ErrorDescription := 'Incorrect move type';
END_IF

//
IF _CmdParams[1] = _ChangeTypeR THEN
	stCommand.PositionType := DUT_Command_PositionType.RelativePosition;
ELSIF _CmdParams[1] = _ChangeTypeA THEN
	stCommand.PositionType := DUT_Command_PositionType.AbsolutePosition;
ELSE
	Error := TRUE;
	ErrorDescription := 'Incorrect position type';
END_IF

//
stCommand.Speed := STRING_TO_LREAL(_CmdParams[2]);

//
IF _CmdParams[3] = _CoordSystemAcs THEN
	stCommand.CoordSystem := SMC_COORD_SYSTEM.ACS;
ELSIF _CmdParams[3] = _CoordSystemMcs THEN
	stCommand.CoordSystem := SMC_COORD_SYSTEM.MCS;
ELSIF _CmdParams[3] = _CoordSystemPc1 THEN
	stCommand.CoordSystem := SMC_COORD_SYSTEM.PCS_1;
ELSIF _CmdParams[3] = _CoordSystemPc2 THEN
	stCommand.CoordSystem := SMC_COORD_SYSTEM.PCS_2;
ELSIF _CmdParams[3] = _CoordSystemTcs THEN
	stCommand.CoordSystem := SMC_COORD_SYSTEM.TCS;
ELSIF _CmdParams[3] = _CoordSystemWcs THEN
	stCommand.CoordSystem := SMC_COORD_SYSTEM.WCS;
ELSIF _CmdParams[3] = _CoordSystemIcs THEN
	stCommand.CoordSystem := SMC_COORD_SYSTEM.ICS;
ELSE
	Error := TRUE;
	ErrorDescription := 'Incorrect coordinate system type';
END_IF

//
IF _CmdParams[4] = _CoordTypeH THEN
	stCommand.CoordinateType := DUT_Command_CoordinateType.Literal;
ELSIF _CmdParams[4] = _CoordTypeV THEN
	stCommand.CoordinateType := DUT_Command_CoordinateType.Variable;
ELSE
	Error := TRUE;
	ErrorDescription := 'Incorrect coordinate type'; // TODO wow i need a better name for this... wtf was i thinking?
END_IF

//
CASE stCommand.CoordinateType OF 
// 'D A 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
	DUT_Command_CoordinateType.Literal:
		stCommand.CoordRef.X := STRING_TO_LREAL(_CmdParams[5]);
		stCommand.CoordRef.Y := STRING_TO_LREAL(_CmdParams[6]);
		stCommand.CoordRef.Z := STRING_TO_LREAL(_CmdParams[7]);
		stCommand.CoordRef.A := STRING_TO_LREAL(_CmdParams[8]);
		stCommand.CoordRef.B := STRING_TO_LREAL(_CmdParams[9]);
		stCommand.CoordRef.C := STRING_TO_LREAL(_CmdParams[10]);
// 'D A 010 MCS V S 001'
	DUT_Command_CoordinateType.Variable:
		stCommand.ArrayIndex := STRING_TO_UINT(_CmdParams[6]);
		IF stCommand.ArrayIndex &lt;= GVL.POS_ARR_END 
			AND stCommand.ArrayIndex &gt;= GVL.POS_ARR_BEG THEN
				IF _CmdParams[5] = _ArrayTypeS THEN
					stCommand.ArrayType := DUT_Command_ArrayType.StoredPosition;
					stCommand.CoordRef := PersistentVars.StoredPositions[stCommand.ArrayIndex].Position;
				ELSIF _CmdParams[5] = _ArrayTypeV THEN
					stCommand.ArrayType := DUT_Command_ArrayType.VisionRegister;
					stCommand.CoordRef := PersistentVars.VisionRegisters[stCommand.ArrayIndex].Position;
				ELSE
					Error := TRUE;
					ErrorDescription := 'Incorrect array type';
				END_IF
		ELSE
			Error := TRUE;
			ErrorDescription := 'Array index out of bounds';
		END_IF
	
END_CASE

//
CASE stCommand.CoordinateType OF 
// 'C R 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
	DUT_Command_CoordinateType.Literal:
		IF _CmdParams[11] = _CircleModeBor THEN
			stCommand.CircleMode := SMC_CIRC_MODE.BORDER;
		ELSIF _CmdParams[11] = _CircleModeCen THEN
			stCommand.CircleMode := SMC_CIRC_MODE.CENTER;
		ELSIF _CmdParams[11] = _CircleModeRad THEN
			stCommand.CircleMode := SMC_CIRC_MODE.RADIUS;
		ELSE
			Error := TRUE;
			ErrorDescription := 'Incorrect circle mode';
		END_IF
// 'C R 010 MCS V S 001 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
	DUT_Command_CoordinateType.Variable:
		IF _CmdParams[7] = _CircleModeBor THEN
			stCommand.CircleMode := SMC_CIRC_MODE.BORDER;
		ELSIF _CmdParams[7] = _CircleModeCen THEN
			stCommand.CircleMode := SMC_CIRC_MODE.CENTER;
		ELSIF _CmdParams[7] = _CircleModeRad THEN
			stCommand.CircleMode := SMC_CIRC_MODE.RADIUS;
		ELSE
			Error := TRUE;
			ErrorDescription := 'Incorrect circle mode';
		END_IF
	
END_CASE

//
CASE stCommand.CoordinateType OF 
// 'C R 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
	DUT_Command_CoordinateType.Literal:
		IF _CmdParams[12] = _PathChoiceClw THEN
			stCommand.PathChoice := MC_CIRC_PATHCHOICE.CLOCKWISE;
		ELSIF _CmdParams[12] = _PathChoiceCcw THEN
			stCommand.PathChoice := MC_CIRC_PATHCHOICE.COUNTER_CLOCKWISE;
		ELSE
			Error := TRUE;
			ErrorDescription := 'Incorrect circle direction';
		END_IF
		IF _CmdParams[13] = _CoordTypeH THEN
			stCommand.CircularCoordinateType := DUT_Command_CoordinateType.Literal;
		ELSIF _CmdParams[13] = _CoordTypeV THEN
			stCommand.CircularCoordinateType := DUT_Command_CoordinateType.Variable;
		ELSE
			Error := TRUE;
			ErrorDescription := 'Incorrect coordinate type'; // TODO yeah, this needs better naming. "coordinate type" does not fit.
		END_IF
// 'C R 010 MCS V S 001 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
	DUT_Command_CoordinateType.Variable:
		IF _CmdParams[8] = _PathChoiceClw THEN
			stCommand.PathChoice := MC_CIRC_PATHCHOICE.CLOCKWISE;
		ELSIF _CmdParams[8] = _PathChoiceCcw THEN
			stCommand.PathChoice := MC_CIRC_PATHCHOICE.COUNTER_CLOCKWISE;
		ELSE
			Error := TRUE;
			ErrorDescription := 'Incorrect circle direction';
		END_IF
		IF _CmdParams[9] = _CoordTypeH THEN
			stCommand.CircularCoordinateType := DUT_Command_CoordinateType.Literal;
		ELSIF _CmdParams[9] = _CoordTypeV THEN
			stCommand.CircularCoordinateType := DUT_Command_CoordinateType.Variable;
		ELSE
			Error := TRUE;
			ErrorDescription := 'Incorrect coordinate type'; // TODO this naming "coordinate type" needs to go.
		END_IF
	
END_CASE

//
CASE stCommand.CircularCoordinateType OF 
	DUT_Command_CoordinateType.Literal:
		CASE stCommand.CoordinateType OF
// 'C R 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
			DUT_Command_CoordinateType.Literal:
				stCommand.CoordRef2.X := STRING_TO_LREAL(_CmdParams[14]);
				stCommand.CoordRef2.Y := STRING_TO_LREAL(_CmdParams[15]);
				stCommand.CoordRef2.Z := STRING_TO_LREAL(_CmdParams[16]);
				stCommand.CoordRef2.A := STRING_TO_LREAL(_CmdParams[17]);
				stCommand.CoordRef2.B := STRING_TO_LREAL(_CmdParams[18]);
				stCommand.CoordRef2.C := STRING_TO_LREAL(_CmdParams[19]);
// 'C R 010 MCS V S 001 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
			DUT_Command_CoordinateType.Variable:
				stCommand.CoordRef2.X := STRING_TO_LREAL(_CmdParams[10]);
				stCommand.CoordRef2.Y := STRING_TO_LREAL(_CmdParams[11]);
				stCommand.CoordRef2.Z := STRING_TO_LREAL(_CmdParams[12]);
				stCommand.CoordRef2.A := STRING_TO_LREAL(_CmdParams[13]);
				stCommand.CoordRef2.B := STRING_TO_LREAL(_CmdParams[14]);
				stCommand.CoordRef2.C := STRING_TO_LREAL(_CmdParams[15]);
				
		END_CASE
	
	DUT_Command_CoordinateType.Variable:
		CASE stCommand.CoordinateType OF
// 'C R 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00 BOR CLW V V 001'
			DUT_Command_CoordinateType.Literal:
				stCommand.CircularArrayIndex := STRING_TO_UINT(_CmdParams[15]);
				IF stCommand.CircularArrayIndex &lt;= GVL.POS_ARR_END 
					AND stCommand.CircularArrayIndex &gt;= GVL.POS_ARR_BEG THEN
						IF _CmdParams[14] = _ArrayTypeS THEN
							stCommand.CircularArrayType := DUT_Command_ArrayType.StoredPosition;
							stCommand.CoordRef2 := PersistentVars.StoredPositions[stCommand.CircularArrayIndex].Position;
						ELSIF _CmdParams[14] = _ArrayTypeV THEN
							stCommand.CircularArrayType := DUT_Command_ArrayType.VisionRegister;
							stCommand.CoordRef2 := PersistentVars.VisionRegisters[stCommand.CircularArrayIndex].Position;
						ELSE
							Error := TRUE;
							ErrorDescription := 'Incorrect array type';
						END_IF
					
				ELSE
					Error:=TRUE;
					ErrorDescription := 'Array index out of bounds';
					
				END_IF
				
// 'C R 010 MCS V S 001 BOR CLW V V 001'
			DUT_Command_CoordinateType.Variable:
				stCommand.CircularArrayIndex := STRING_TO_UINT(_CmdParams[11]);
				IF stCommand.CircularArrayIndex &lt;= GVL.POS_ARR_END 
					AND stCommand.CircularArrayIndex &gt;= GVL.POS_ARR_BEG THEN
						IF _CmdParams[10] = _ArrayTypeS THEN
							stCommand.CircularArrayType := DUT_Command_ArrayType.StoredPosition;
							stCommand.CoordRef2 := PersistentVars.StoredPositions[stCommand.CircularArrayIndex].Position;
						ELSIF _CmdParams[10] = _ArrayTypeV THEN
							stCommand.CircularArrayType := DUT_Command_ArrayType.VisionRegister;
							stCommand.CoordRef2 := PersistentVars.VisionRegisters[stCommand.CircularArrayIndex].Position;
						ELSE
							Error:=TRUE;
							ErrorDescription := 'Incorrect array type';
						END_IF
					
				ELSE
					Error:=TRUE;
					ErrorDescription := 'Array index out of bounds';
				END_IF
				
		END_CASE
	
END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>35e49e9e-292d-48d5-910d-e69db317cc55</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="_20_Io" pouType="program">
                <interface>
                  <localVars>
                    <variable name="PowerOn">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//
PowerOn := GVL.PowerOn;

//
_M_HandleRemoteIO();</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_HandleRemoteIO" ObjectId="95e27eb3-1cc7-4783-8f9f-46fca05a221d">
                      <interface>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//
HeartbeatOn(in:=NOT HeartbeatOff.Q,PT:=HeartbeatPt);
HeartbeatOff(in:=HeartbeatOn.Q,PT:=HeartbeatPt);

// need to use system time to transfer faster than 1ms
SysLTime := LTIME();
IF SysLTime - SysLTimeLast &gt; TransferTime THEN
	SysLTimeLast := SysLTime;
	TransferTrigger := NOT TransferTrigger;
END_IF

// handle outputs
// index 0 is for system outputs
pabyTxBuffer[0].0:=HeartbeatOn.Q; 	// heartbeat
pabyTxBuffer[0].1:=GVL.PowerOn; 			// enable
// pabyTxBuffer[0].2:=;
// pabyTxBuffer[0].3:=;
// pabyTxBuffer[0].4:=;
// pabyTxBuffer[0].5:=;
// pabyTxBuffer[0].6:=;
// pabyTxBuffer[0].7:=;

//
pabyTxBuffer[1].0 := GVL.CmdIO.Output[4];
pabyTxBuffer[1].1 := GVL.CmdIO.Output[5];
pabyTxBuffer[1].2 := GVL.CmdIO.Output[6];
pabyTxBuffer[1].3 := GVL.CmdIO.Output[7];
//pabyTxBuffer[1].4 := ;
//pabyTxBuffer[1].5 := ;
//pabyTxBuffer[1].6 := ;
//pabyTxBuffer[1].7 := ;

//
pabyTxBuffer[2] := GVL.CmdIO.Pwm[0];
pabyTxBuffer[3] := GVL.CmdIO.Pwm[1];
pabyTxBuffer[4] := GVL.CmdIO.Pwm[2];
pabyTxBuffer[5] := GVL.CmdIO.Pwm[3];

// Tx buffer index 30 and 31 will be for crc
// calc crc here
TxCrc := F_Checksum(ADR(pabyTxBuffer), 30);
// append calc crc to tx buffer
MEMUtils.MemCpy(pbyDest:=ADR(pabyTxBuffer[30]), 
				pbySrc:=ADR(TxCrc), 
				dwSize:=2);

// read and write to i2c bus
//IF TransferTrigger THEN
	(*I2C_master_Bus2.write(usiAddress:=i2caddress,
					pbyBuffer:=ADR(pabyTxBuffer),
					nBufferLen:=transferlentx);
	I2C_master_Bus2.read(usiAddress:=i2caddress,
					pbyBuffer:=ADR(pabyRxBuffer),
					nBufferLen:=transferlenrx);*)
//END_IF

// copy crc from rx buffer
MEMUtils.MemCpy(pbyDest:=ADR(RxCrc), 
				pbySrc:=ADR(pabyRxBuffer[30]), 
				dwSize:=2);

// compare calc crc with rx crc
IF RxCrc = F_Checksum(ADR(pabyRxBuffer), 30) THEN
	// handle inputs
	// index 0 is for system inputs
	rx_heartbeat 		:= pabyRxBuffer[0].0;
	rx_en 				:= pabyRxBuffer[0].1;
	//rx_   			:= pabyRxBuffer[0].2;
	//rx_ 				:= pabyRxBuffer[0].3;
	//rx_ 				:= pabyRxBuffer[0].4;
	//rx_ 				:= pabyRxBuffer[0].5;
	//rx_ 				:= pabyRxBuffer[0].6;
	//rx_ 				:= pabyRxBuffer[0].7;
	
	// index 1 will be for gpio byte (bits 0 through 7)
	GVL.CmdIO.Input[4] := pabyRxBuffer[1].0;
	GVL.CmdIO.Input[5] := pabyRxBuffer[1].1;
	GVL.CmdIO.Input[6] := pabyRxBuffer[1].2;
	GVL.CmdIO.Input[7] := pabyRxBuffer[1].3;
	// := pabyRxBuffer[1].4;
	// := pabyRxBuffer[1].5;
	// := pabyRxBuffer[1].6;
	// := pabyRxBuffer[1].7;
	
ELSE
	// increment crc mismatch counter
	ChecksumMisCount := ChecksumMisCount + 1;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c3b19a06-6020-44bc-8c83-cb31670bfa1a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="_30_Visu" pouType="program">
                <interface>
                  <localVars>
                    <variable name="SelectedProgramNumber">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="SelectedRecipeRowIndex">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="RecipeRowSelected">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="InsertLineAbove">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="InsertLineBelow">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="DeleteLine">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="CopySelectedCommand">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="CopiedCommandType">
                      <type>
                        <derived name="DUT_CommandType" />
                      </type>
                    </variable>
                    <variable name="CopiedCommandString">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                    <variable name="CopiedCommandComment">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="PasteCommand">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="SetStoredPositionAsCurrent">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SelectedStoredPosition">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="SetVisionRegisterAsCurrent">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="SelectedVisionRegister">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="SelectedFlag">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="TeachPosition">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="stTeachPosition">
                      <type>
                        <derived name="ST_MoveCmd" />
                      </type>
                    </variable>
                    <variable name="MoveCmdParser">
                      <type>
                        <derived name="ParseMoveCmd" />
                      </type>
                    </variable>
                    <variable name="stMoveCmd">
                      <type>
                        <derived name="ST_MoveCmd" />
                      </type>
                    </variable>
                    <variable name="MoveCmdVisu">
                      <type>
                        <derived name="AddMoveCmd_VISU_STRUCT" />
                      </type>
                    </variable>
                    <variable name="OutputCmdParser">
                      <type>
                        <derived name="ParseOutputCmd" />
                      </type>
                    </variable>
                    <variable name="stOutputCmd">
                      <type>
                        <derived name="ST_OutputCmd" />
                      </type>
                    </variable>
                    <variable name="OutputCmdVisu">
                      <type>
                        <derived name="AddOutputCmd_VISU_STRUCT" />
                      </type>
                    </variable>
                    <variable name="PauseCmdParser">
                      <type>
                        <derived name="ParsePauseCmd" />
                      </type>
                    </variable>
                    <variable name="stPauseCmd">
                      <type>
                        <derived name="ST_PauseCmd" />
                      </type>
                    </variable>
                    <variable name="PauseCmdVisu">
                      <type>
                        <derived name="AddPauseCmd_VISU_STRUCT" />
                      </type>
                    </variable>
                    <variable name="VisionCmdParser">
                      <type>
                        <derived name="ParseVisionCmd" />
                      </type>
                    </variable>
                    <variable name="stVisionCmd">
                      <type>
                        <derived name="ST_VisionCmd" />
                      </type>
                    </variable>
                    <variable name="VisionCmdVisu">
                      <type>
                        <derived name="AddVisionCmd_VISU_STRUCT" />
                      </type>
                    </variable>
                    <variable name="VarSetCmdParser">
                      <type>
                        <derived name="ParseVarSetCmd" />
                      </type>
                    </variable>
                    <variable name="stVarSetCmd">
                      <type>
                        <derived name="ST_VarSetCmd" />
                      </type>
                    </variable>
                    <variable name="VarSetCmdVisu">
                      <type>
                        <derived name="AddVarSetCmd_VISU_STRUCT" />
                      </type>
                    </variable>
                    <variable name="CncCmdParser">
                      <type>
                        <derived name="ParseCncCmd" />
                      </type>
                    </variable>
                    <variable name="stCncCmd">
                      <type>
                        <derived name="ST_CncCmd" />
                      </type>
                    </variable>
                    <variable name="CncCmdVisu">
                      <type>
                        <derived name="AddCncCmd_VISU_STRUCT" />
                      </type>
                    </variable>
                    <variable name="LogicCmdParser">
                      <type>
                        <derived name="ParseLogicCmd" />
                      </type>
                    </variable>
                    <variable name="stLogicCmd">
                      <type>
                        <derived name="ST_LogicCmd" />
                      </type>
                    </variable>
                    <variable name="LogicCmdVisu">
                      <type>
                        <derived name="AddLogicCmd_VISU_STRUCT" />
                      </type>
                    </variable>
                    <variable name="CurrentVisu">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="OpenDialog">
                      <type>
                        <derived name="VU.FbOpenDialogExtended" />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//
IF GVL.StorePersist THEN
	GVL.StorePersist := FALSE;
	// TODO manually store persistent data here.
	// not currently a straight forward way of doing this.
END_IF

//
IF (InsertLineAbove OR InsertLineBelow) AND RecipeRowSelected THEN
	//
	IF InsertLineAbove THEN
		InsertLineAbove := FALSE;
		_j := SelectedRecipeRowIndex + 1;
	ELSIF InsertLineBelow THEN
		InsertLineBelow := FALSE;
		_j := SelectedRecipeRowIndex + 2;
	END_IF
	//
	FOR _i := GVL.PROG_CMDS_ARR_END TO _j BY -1 DO
		// shift all data
		IF _i &gt;= GVL.PROG_CMDS_ARR_BEG AND _i &lt;= GVL.PROG_CMDS_ARR_END THEN // can never really bo too careful am I right?
			PersistentVars.Programs[SelectedProgramNumber].Commands[_i].CommandType := PersistentVars.Programs[SelectedProgramNumber].Commands[_i - 1].CommandType;
			PersistentVars.Programs[SelectedProgramNumber].Commands[_i].CommandString := PersistentVars.Programs[SelectedProgramNumber].Commands[_i - 1].CommandString;
			PersistentVars.Programs[SelectedProgramNumber].Commands[_i].CommandComment := PersistentVars.Programs[SelectedProgramNumber].Commands[_i - 1].CommandComment;
		END_IF
	END_FOR
	//
	PersistentVars.Programs[SelectedProgramNumber].Commands[_j - 1].CommandType := DUT_CommandType.Disabled;
	PersistentVars.Programs[SelectedProgramNumber].Commands[_j - 1].CommandString := '';
	PersistentVars.Programs[SelectedProgramNumber].Commands[_j - 1].CommandComment := '';
END_IF

//
IF DeleteLine AND RecipeRowSelected THEN
	DeleteLine := FALSE;
	FOR _i := SelectedRecipeRowIndex TO GVL.PROG_CMDS_ARR_END - 1 BY 1 DO
		IF _i &gt;= GVL.PROG_CMDS_ARR_BEG AND _i &lt;= GVL.PROG_CMDS_ARR_END THEN // can never really bo too careful am I right?
			PersistentVars.Programs[SelectedProgramNumber].Commands[_i].CommandType := PersistentVars.Programs[SelectedProgramNumber].Commands[_i + 1].CommandType;
			PersistentVars.Programs[SelectedProgramNumber].Commands[_i].CommandString := PersistentVars.Programs[SelectedProgramNumber].Commands[_i + 1].CommandString;
			PersistentVars.Programs[SelectedProgramNumber].Commands[_i].CommandComment := PersistentVars.Programs[SelectedProgramNumber].Commands[_i + 1].CommandComment;
		END_IF
	END_FOR
END_IF

//
IF SetStoredPositionAsCurrent THEN
	SetStoredPositionAsCurrent := FALSE;
	PersistentVars.StoredPositions[SelectedStoredPosition].Position.X := F_RoundLreal(_00_Main.ProcessJog.Position.v[0],2);
	PersistentVars.StoredPositions[SelectedStoredPosition].Position.Y := F_RoundLreal(_00_Main.ProcessJog.Position.v[1],2);
	PersistentVars.StoredPositions[SelectedStoredPosition].Position.Z := F_RoundLreal(_00_Main.ProcessJog.Position.v[2],2);
	PersistentVars.StoredPositions[SelectedStoredPosition].Position.A := F_RoundLreal(_00_Main.ProcessJog.Position.v[3],2);
	PersistentVars.StoredPositions[SelectedStoredPosition].Position.B := F_RoundLreal(_00_Main.ProcessJog.Position.v[4],2);
	PersistentVars.StoredPositions[SelectedStoredPosition].Position.C := F_RoundLreal(_00_Main.ProcessJog.Position.v[5],2);
END_IF

//
IF TeachPosition THEN
	TeachPosition := FALSE;
	//
	stTeachPosition.MoveType := DUT_Command_MoveType.DirectMove;
	stTeachPosition.Speed := 50;
	stTeachPosition.PositionType := DUT_Command_PositionType.AbsolutePosition;
	stTeachPosition.CoordSystem := _00_Main.ProcessJog.CoordSystem;
	stTeachPosition.CoordRef.X := F_RoundLreal(_00_Main.ProcessJog.Position.v[0],2);
	stTeachPosition.CoordRef.Y := F_RoundLreal(_00_Main.ProcessJog.Position.v[1],2);
	stTeachPosition.CoordRef.Z := F_RoundLreal(_00_Main.ProcessJog.Position.v[2],2);
	stTeachPosition.CoordRef.A := F_RoundLreal(_00_Main.ProcessJog.Position.v[3],2);
	stTeachPosition.CoordRef.B := F_RoundLreal(_00_Main.ProcessJog.Position.v[4],2);
	stTeachPosition.CoordRef.C := F_RoundLreal(_00_Main.ProcessJog.Position.v[5],2);
	PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandType := DUT_CommandType.MoveCommand;
	PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString := BuildMoveCmd(stTeachPosition);
	PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandComment := 'Taught position';
END_IF

//
IF PasteCommand THEN
	PasteCommand := FALSE;
	PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandType := CopiedCommandType;
	PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString := CopiedCommandString;
	PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandComment := CopiedCommandComment;
END_IF

//
IF CopySelectedCommand THEN
	CopySelectedCommand := FALSE;
	
	//
	CopiedCommandType := PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandType;
	CopiedCommandString := PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString;
	CopiedCommandComment := PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandComment;
	
	CASE PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandType OF
		DUT_CommandType.Disabled:
			//
			
		DUT_CommandType.MoveCommand:
			MoveCmdParser(Command := PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString);
			stMoveCmd := MoveCmdParser.stCommand;
			
		DUT_CommandType.PauseCommand:
			PauseCmdParser(Command:=PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString);
			stPauseCmd := PauseCmdParser.stCommand;
			
		DUT_CommandType.InputCommand:
			//
			
		DUT_CommandType.OutputCommand:
			OutputCmdParser(Command:=PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString);
			stOutputCmd := OutputCmdParser.stCommand;
			
		DUT_CommandType.VisionCommand:
			VisionCmdParser(Command:=PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString);
			stVisionCmd := VisionCmdParser.stCommand;
			
		DUT_CommandType.VarSetCommand:
			VarSetCmdParser(Command:=PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString);
			stVarSetCmd := VarSetCmdParser.stCommand;
			
		DUT_CommandType.CncCommand:
			CncCmdParser(Command:=PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString);
			stCncCmd := CncCmdParser.stCommand;
			
		DUT_CommandType.LogicCommand:
			LogicCmdParser(Command:=PersistentVars.Programs[SelectedProgramNumber].Commands[SelectedRecipeRowIndex].CommandString);
			stLogicCmd := LogicCmdParser.stCommand;
			
	END_CASE
	
END_IF

// should be called after CopySelectedCommand case statement
CurrentVisu := VisuElems.CurrentVisu;
OpenDialog(
	xExecute:= , 
	xDone=&gt; , 
	xBusy=&gt; , 
	xError=&gt; , 
	itfClientFilter:= , 
	eError=&gt; , 
	sDialogName:= , 
	xModal:= TRUE, // TRUE - visu in background cannot be used
	pTopLeftPosition:= , 
	itfDialogOpenedListener:= , 
	pbyDialogInterfaceData:= , 
	udiDialogInterfaceDataSize:= , 
	itfDialogCloseListener:= , 
	pbyTagForDialogClosed:= , 
	dwDialogFlags:= );
IF (OpenDialog.xExecute AND OpenDialog.xDone) 
	OR OpenDialog.xError 
	THEN
		OpenDialog.xExecute := FALSE;
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>9462f316-faa5-42b7-be46-708f3ef2e1f0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="BuildOutputCmd" pouType="function">
                <interface>
                  <returnType>
                    <string length="GVL.COMMAND_LEN" />
                  </returnType>
                  <inputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_OutputCmd" />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_Delimiter">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                    <variable name="_OutTypeDig">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'DIG'" />
                      </initialValue>
                    </variable>
                    <variable name="_OutTypePwm">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'PWM'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// DIG +0001.00 +0001.00 (turn digital input 1 on)
// DIG +0001.00 +0000.00 (turn digital input 1 off)
// PWM +0001.00 +0030.00(set PWM 1 to position 30)

// clear the command
_Command:='';

//
CASE stCommand.OutputType OF
	DUT_OutputType.Digital:
		F_AddElement(_Command, _Delimiter, _OutTypeDig);
	DUT_OutputType.Pwm:
		F_AddElement(_Command, _Delimiter, _OutTypePwm);
END_CASE

//
F_AddElement(_Command, _Delimiter, INT_TO_STRING(stCommand.OutputTarget));

//
F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.OutputValue1));

// set function equal to command
BuildOutputCmd := _Command;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e29ffd53-c60c-4780-9cae-795a42c1806f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ParseOutputCmd" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_OutputCmd" />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CmdParams">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL.COMMAND_LEN" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_OutputType">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// DIG +0001.00 +0001.00 (turn digital input 1 on)
// DIG +0001.00 +0000.00 (turn digital input 1 off)
// PWM +0001.00 +0030.00(set PWM 1 to position 30)

Error:=FALSE;
ErrorDescription:='';

// split command string into commands
_CmdParams:=F_SplitCmd(Command:=Command);

_OutputType := _CmdParams[0];
IF _OutputType = 'DIG' THEN
	stCommand.OutputType := DUT_OutputType.Digital;
ELSIF _OutputType = 'PWM' THEN
	stCommand.OutputType := DUT_OutputType.Pwm;
END_IF
stCommand.OutputTarget := STRING_TO_INT(_CmdParams[1]);
stCommand.OutputValue1 := STRING_TO_LREAL(_CmdParams[2]);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b67ef6d4-a509-4504-af22-150225e40cd0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="BuildPauseCmd" pouType="function">
                <interface>
                  <returnType>
                    <string length="GVL.COMMAND_LEN" />
                  </returnType>
                  <inputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_PauseCmd" />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_Delimiter">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// clear the command
_Command:='';

// build command
F_AddElement(_Command, _Delimiter, TIME_TO_STRING(stCommand.PauseTime));

// set function equal to command
BuildPauseCmd := _Command;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>b7a08d1d-f5e6-4f3c-9f3f-733c40c45429</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ParsePauseCmd" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_PauseCmd" />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CmdParams">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL.COMMAND_LEN" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// T#30s

Error:=FALSE;
ErrorDescription:='';

// split command string into commands
_CmdParams:=F_SplitCmd(Command:=Command);

stCommand.PauseTime := STRING_TO_TIME(_CmdParams[0]);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>155e4e57-98df-4f34-8414-c9af1793585b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="_40_Vision" pouType="program">
                <interface>
                  <localVars>
                    <variable name="ProcessVisionCommand">
                      <type>
                        <derived name="VisionCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="HostName">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="VisionSystemUrl">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="VisionOutputImageUrl">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="VisionSystemIpAddress_Last">
                      <type>
                        <string length="19" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="LocalIpAddress">
                      <type>
                        <string length="19" />
                      </type>
                      <initialValue>
                        <simpleValue value="'127.0.0.1'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
// used to show the output image on the HMI
// 'http://ArfBot:5000/output'
IF  PersistentVars.VisionSystemIpAddress &lt;&gt; VisionSystemIpAddress_Last THEN
	 VisionSystemIpAddress_Last :=  PersistentVars.VisionSystemIpAddress;
	//
	IF PersistentVars.VisionSystemIpAddress = LocalIpAddress THEN
		// https://forge.codesys.com/forge/talk/Runtime/thread/61d60a9fb7/
		SysSockGetHostName(szHostName:=HostName, diNameLen:=SIZEOF(HostName));
		VisionSystemUrl := CONCAT('http://', HostName);
	ELSE
		VisionSystemUrl := CONCAT('http://', PersistentVars.VisionSystemIpAddress);
	END_IF
	//
	VisionSystemUrl := CONCAT(VisionSystemUrl, ':5000');
	VisionOutputImageUrl := CONCAT(VisionSystemUrl,'/output');
END_IF

//
ProcessVisionCommand(
	VisionSystemIpAddress:= PersistentVars.VisionSystemIpAddress,
	VisionSystemPort:= PersistentVars.VisionSystemPort,
	StoredPositions:= PersistentVars.StoredPositions,
	VisionRegisters:= PersistentVars.VisionRegisters,
	Flags:= PersistentVars.Flags,
	LogicCmdIO:= GVL.CmdIO,
	ItfUnitMode=&gt; ,
	Error=&gt; , 
	ErrorDescription=&gt; , 
	VisionStateText=&gt; );</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>168c2bce-5a06-487a-a077-28448e10fa0d</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="CncPathPlanner" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="VarList">
                      <type>
                        <derived name="SMC_VarList" />
                      </type>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="DataOut">
                      <type>
                        <pointer>
                          <baseType>
                            <derived name="SMC_OUTQUEUE" />
                          </baseType>
                        </pointer>
                      </type>
                    </variable>
                    <variable name="Busy">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Done">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_Filename">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'_cnc/CNC_FromFile.cnc'" />
                      </initialValue>
                    </variable>
                    <variable name="_SMC_NCInterpreter">
                      <type>
                        <derived name="SMC_NCInterpreter" />
                      </type>
                    </variable>
                    <variable name="_SMC_ReadNCFile2">
                      <type>
                        <derived name="SMC_ReadNCFile2" />
                      </type>
                    </variable>
                    <variable name="_SMC_CheckVelocities">
                      <type>
                        <derived name="SMC_CheckVelocities" />
                      </type>
                    </variable>
                    <variable name="_SMC_GEOINFO">
                      <type>
                        <array>
                          <dimension lower="0" upper="49" />
                          <baseType>
                            <derived name="SMC_GEOINFO" />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_StartPos">
                      <type>
                        <derived name="SMC_PosInfo" />
                      </type>
                    </variable>
                    <variable name="_OriConvention">
                      <type>
                        <derived name="SMC_ORI_CONVENTION" />
                      </type>
                      <initialValue>
                        <simpleValue value="SMC_ORI_CONVENTION.XYZ" />
                      </initialValue>
                    </variable>
                    <variable name="_ExecuteRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_ResetRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Sequence">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_ErrorRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_BaseCncDirectory">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'_cnc/'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> before update to 3.5.19.40 '/var/opt/codesys/_cnc/'</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">_ExecuteRtrig(CLK:=_Execute);
IF _ExecuteRtrig.Q THEN
	_Execute:= FALSE;
END_IF
_ResetRtrig(CLK:=_Reset);
IF _ResetRtrig.Q THEN
	_Reset:= FALSE;
	_Sequence:=999;
END_IF

Busy := _Sequence &lt;&gt; 000;

CASE _Sequence OF
	999:
		_SMC_ReadNCFile2.bExecute := FALSE;
		_Sequence := 000;
	000:
		IF _ExecuteRtrig.Q THEN
			_SMC_ReadNCFile2.bExecute := TRUE;
			_Sequence := 1;
		END_IF
	001:
		IF NOT _SMC_CheckVelocities.bBusy THEN
			_Sequence := 999;
			Done := TRUE;
		END_IF
	
END_CASE

_SMC_ReadNCFile2(
	bExecute:= , 
	bAbort:= _Sequence = 999, 
	sFileName:= _Filename, 
	pvl:= ADR(VarList), 
	fDefaultVel:= , 
	fDefaultAccel:= , 
	fDefaultDecel:= , 
	fDefaultVelFF:= , 
	fDefaultAccelFF:= , 
	fDefaultDecelFF:= , 
	b3DMode:= , 
	bStepSuppress:= , 
	aSubProgramDirs:= , 
	bParenthesesAsComments:= , 
	bDisableJumpBuffer:= , 
	pCustomFunTable:= , 
	aTokenModifier:= , 
	aSentenceModifier:= , 
	bBusy=&gt; , 
	bError=&gt; , 
	ErrorID=&gt; , 
	errorPos=&gt; , 
	ErrorProgramName=&gt; , 
	sentences=&gt; , 
	adwFileSize=&gt; , 
	adwPos=&gt; );

_SMC_NCInterpreter(
	sentences:= _SMC_ReadNCFile2.sentences, 
	bExecute:= _SMC_ReadNCFile2.bExecute, 
	bAbort:= _Sequence = 999, 
	bAppend:= , 
	piStartPosition:= _StartPos, 
	vStartToolLength:= , 
	nSizeOutQueue:= SIZEOF(_SMC_GEOINFO), 
	pbyBufferOutQueue:= ADR(_SMC_GEOINFO), 
	bEnableSyntaxChecks:= , 
	eOriConv:= _OriConvention, // SMC_ORI_CONVENTION 
	dCircleTolerance:= , 
	pInterpreterStack:= , 
	nInterpreterStackSizeBytes:= , 
	bDone=&gt; , 
	bBusy=&gt; , 
	bError=&gt; , 
	wErrorID=&gt; , 
	errorPos=&gt; , 
	poqDataOut=&gt; , 
	iStatus=&gt; , 
	iLineNumberDecoded=&gt; , 
	GCodeText=&gt; , 
	CallstackInfo=&gt; , 
	aActivePrograms=&gt; );

_SMC_CheckVelocities(
	bExecute:= _SMC_NCInterpreter.bExecute, 
	bAbort:= _Sequence = 999, 
	poqDataIn:= _SMC_NCInterpreter.poqDataOut, 
	dAngleTol:= , 
	bCheckAddAxVelJump:= , 
	dMaxAddAxVelDifference:= , 
	bBusy=&gt; , 
	bError=&gt; , 
	wErrorID=&gt; , 
	poqDataOut=&gt; DataOut);
	
_ErrorRtrig();
_ErrorRtrig.CLK:= _SMC_ReadNCFile2.bError
				OR _SMC_NCInterpreter.bError
				OR _SMC_CheckVelocities.bError;
IF _ErrorRtrig.Q THEN
	Error := TRUE;
	IF _SMC_ReadNCFile2.bError THEN
		ErrorDescription := CONCAT('ReadNCFile Error: ',
                                CONCAT(TO_STRING(_SMC_ReadNCFile2.ErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_ReadNCFile2.ErrorID,
                                            SMC_Language_Type.english)))) ;
	END_IF
	IF _SMC_NCInterpreter.bError THEN
		ErrorDescription := CONCAT(' NCInterpreter Error: ',
                                CONCAT(TO_STRING(_SMC_NCInterpreter.wErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_NCInterpreter.wErrorID,
                                            SMC_Language_Type.english)))) ;
	END_IF
	IF _SMC_CheckVelocities.bError THEN
		ErrorDescription := CONCAT(' CheckVelocities Error: ',
                                CONCAT(TO_STRING(_SMC_CheckVelocities.wErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_CheckVelocities.wErrorID,
                                            SMC_Language_Type.english)))) ;
	END_IF
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="92875761-2fd7-4bb6-bbf7-a117fd98b83f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Filename">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'CNC_FromFile.cnc'" />
                            </initialValue>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_Filename := CONCAT(_BaseCncDirectory, Filename);
_Execute:=TRUE;
Done := FALSE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Reset" ObjectId="bcea459e-fa66-4937-b73d-59fec7864ad5">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_Reset := TRUE;
Error := FALSE;
ErrorDescription := '';</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetStartPosition" ObjectId="deae1c1c-a35f-4dab-a882-870c0dd1bbee">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="StartPos">
                            <type>
                              <derived name="SMC_PosInfo" />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StartPos := StartPos;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetOriConvention" ObjectId="bc2fe0c5-bb28-4086-a8ef-9e95685b910f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="OriConvention">
                            <type>
                              <derived name="SMC_ORI_CONVENTION" />
                            </type>
                            <initialValue>
                              <simpleValue value="SMC_ORI_CONVENTION.XYZ" />
                            </initialValue>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_OriConvention := OriConvention;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>845c01d1-16bd-4c5b-8921-4865a7e07fd2</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="BuildCncCmd" pouType="function">
                <interface>
                  <returnType>
                    <string length="GVL.COMMAND_LEN" />
                  </returnType>
                  <inputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_CncCmd" />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_Delimiter">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                    <variable name="_AddString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ADD'" />
                      </initialValue>
                    </variable>
                    <variable name="_XYZString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'XYZ'" />
                      </initialValue>
                    </variable>
                    <variable name="_ZYXString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ZYX'" />
                      </initialValue>
                    </variable>
                    <variable name="_ZYZString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ZYZ'" />
                      </initialValue>
                    </variable>
                    <variable name="_LiteralString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LIT'" />
                      </initialValue>
                    </variable>
                    <variable name="_VariableString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VAR'" />
                      </initialValue>
                    </variable>
                    <variable name="_StoredPositionsString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'STO'" />
                      </initialValue>
                    </variable>
                    <variable name="_VisionRegistersString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VIS'" />
                      </initialValue>
                    </variable>
                    <variable name="_FlagsString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'FLG'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// /path/to/file/with/no/spaces/file.cnc ADD|XYX|ZYX|ZYZ startpos
// file1.cnc XYZ H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00
// file2.cnc ADD A S 025
// file3.cnc ADD A V 015

_Command:='';

//
F_AddElement(_Command, _Delimiter, stCommand.Filename);

//
CASE stCommand.OriConvention OF
	SMC_ORI_CONVENTION.ADDAXES:
		F_AddElement(_Command, _Delimiter, _AddString);
	SMC_ORI_CONVENTION.XYZ:
		F_AddElement(_Command, _Delimiter, _XYZString);
	SMC_ORI_CONVENTION.ZYX:
		F_AddElement(_Command, _Delimiter, _ZYXString);
	SMC_ORI_CONVENTION.ZYZ:
		F_AddElement(_Command, _Delimiter, _ZYZString);
END_CASE

//
CASE stCommand.CoordinateType OF
	DUT_Command_CoordinateType.Literal:
		F_AddElement(_Command, _Delimiter, _LiteralString);
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.StartPos.dX));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.StartPos.dY));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.StartPos.dZ));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.StartPos.dA));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.StartPos.dB));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.StartPos.dC));
		
	DUT_Command_CoordinateType.Variable:
		F_AddElement(_Command, _Delimiter, _VariableString);
		CASE stCommand.ArrayType OF
			DUT_Command_ArrayType.StoredPosition:
				F_AddElement(_Command, _Delimiter, _StoredPositionsString);
			DUT_Command_ArrayType.VisionRegister:
				F_AddElement(_Command, _Delimiter, _VisionRegistersString);
			DUT_Command_ArrayType.Flag:
				F_AddElement(_Command, _Delimiter, _FlagsString);
		END_CASE
		F_AddElement(_Command, _Delimiter, INT_TO_STRING(stCommand.ArrayIndex));
		
END_CASE

BuildCncCmd := _Command;
</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>e33aafb8-c7d1-4dab-86cc-41df906bbf07</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PositionTracker" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J1">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J2">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J3">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J4">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J5">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J6">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="VisuStruct3DTrack">
                      <type>
                        <derived name="VisuStruct3DTrack" />
                      </type>
                    </variable>
                    <variable name="Arm">
                      <type>
                        <derived name="SMC_ArticulatedRobot_6DOF_J0_State" />
                      </type>
                    </variable>
                    <variable name="Elbow">
                      <type>
                        <derived name="SMC_ArticulatedRobot_6DOF_J1_State" />
                      </type>
                    </variable>
                    <variable name="Hand">
                      <type>
                        <derived name="SMC_ArticulatedRobot_6DOF_J4_State" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_SMC_Trafof_ArticulatedRobot_6DOF">
                      <type>
                        <derived name="SMC_Trafof_ArticulatedRobot_6DOF" />
                      </type>
                    </variable>
                    <variable name="_SMC_TrafoConfig_ArticulatedRobot_6DOF">
                      <type>
                        <derived name="SMC_TrafoConfig_ArticulatedRobot_6DOF" />
                      </type>
                    </variable>
                    <variable name="_VisuStruct3DPathPoint">
                      <type>
                        <array>
                          <dimension lower="0" upper="10000" />
                          <baseType>
                            <derived name="VisuStruct3DPathPoint" />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_SMC_PositionTracker">
                      <type>
                        <derived name="SMC_PositionTracker" />
                      </type>
                    </variable>
                    <variable name="_PositionTrackerClearR_Trig">
                      <type>
                        <derived name="R_Trig" />
                      </type>
                    </variable>
                    <variable name="_Clear">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">
// NOTE currently the settings for J6 invert direction under scaling/mapping contradict using motion control 
// libraries and CNC. For CNC to work properly, the setting is required to be enabled (inverted). Additionally
// the homing direction and position will need to be negated. This all requires a full download. Will be leaving 
// setting disabled for now so that we can continue to use motion control. 
//
// to recap, take these steps if you would like to try out CNC:
// 1. open the axis pool settings and under the scaling/mapping section enable 'invert direction'
// 2. in the A_Homing POU, change the homing direction to positive.
// 3. in _00_MAIN POU, under FirstScan set the initial home offset to a positive value (keep the value and just change the sign).
// 4. do a full download.
// 5. go online and set the persistent value (if previously initialized in FirstScan) to a positive value.
//
// UPDATE: Figured out a work around for this issue. In the A_Interpolater POU, I negated the set position in the ControlAxisByPos
// function block for J6 such that it drives the opposite way. This appears to have resolved the issue. Why this is needed, I do not
// know. I am sure it is some minor overlooked detail somewhere in the code...


_SMC_TrafoConfig_ArticulatedRobot_6DOF.a1:=ArfBotAxisGroup.Trafo.a1;//AxisGroup.Trafo.a1;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.a2:=ArfBotAxisGroup.Trafo.a2;//AxisGroup.Trafo.a2;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.a3:=ArfBotAxisGroup.Trafo.a3;//AxisGroup.Trafo.a3;
// conflicting documentation on if d1 needs to be pos or neg. only works as negative otherwise trafo reports invalid configuration
// https://product-help.schneider-electric.com/Machine%20Expert/V2.0/zh/codesys_softmotion/codesys_softmotion/modules/_sm_trafo_pou_six_dof_robot.html
// https://forge.codesys.com/forge/talk/Motion/thread/16e1f0327f/
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d1:=-ArfBotAxisGroup.Trafo.d1;//-AxisGroup.Trafo.d1;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d3:=ArfBotAxisGroup.Trafo.d3;//AxisGroup.Trafo.d3;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d4:=ArfBotAxisGroup.Trafo.d4;//AxisGroup.Trafo.d4;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d6:=ArfBotAxisGroup.Trafo.d6;//AxisGroup.Trafo.d6;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q3_max_deg:=160; // TODO put magic numbers somewhere appropriate
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q3_min_deg:=-160; // TODO put magic numbers somewhere appropriate
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q5_max_deg:=160; // TODO put magic numbers somewhere appropriate
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q5_min_deg:=-160; // TODO put magic numbers somewhere appropriate

// track position
_SMC_Trafof_ArticulatedRobot_6DOF(config:=_SMC_TrafoConfig_ArticulatedRobot_6DOF,
							Drive0:=SM3_Drive_PosControl_J1,
							Drive1:=SM3_Drive_PosControl_J2,
							Drive2:=SM3_Drive_PosControl_J3,
							Drive3:=SM3_Drive_PosControl_J4,
							Drive4:=SM3_Drive_PosControl_J5,
							Drive5:=SM3_Drive_PosControl_J6,
							vToolPos=&gt;,
							mToolOrientation=&gt;,
							armState=&gt;Arm,
							elbowState=&gt;Elbow,
							handState=&gt;Hand);

_PositionTrackerClearR_Trig(Clk:=_Clear);
_SMC_PositionTracker(
	bEnable:= TRUE, 
	bClear:= _PositionTrackerClearR_Trig.Q, 
	dX:= _SMC_Trafof_ArticulatedRobot_6DOF.vToolPos.dX, 
	dY:= _SMC_Trafof_ArticulatedRobot_6DOF.vToolPos.dY, 
	dZ:= _SMC_Trafof_ArticulatedRobot_6DOF.vToolPos.dZ, 
	udiNumberOfPointsInArray:= 10001, //SIZEOF(_VisuStruct3DPathPoint), TODO make this dynamic. hint SIZEOF wont work
	pBuffer:= ADR(_VisuStruct3DPathPoint), 
	vs3dt=&gt; VisuStruct3DTrack);
_Clear := FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Clear" ObjectId="dfb86b0d-b5f1-49bd-9916-9936d6497f13">
                      <interface />
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_Clear := TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>7701f0fc-a0ed-4db5-acf4-25ec5ce43abb</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="OpenCV" pouType="functionBlock">
                <interface>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>PythonServerHandler</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_CalibrateCamera" ObjectId="f8181cbb-d977-4dc5-9d9a-f6beb94ec24e">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="iImageWidth">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="2016" />
                            </initialValue>
                          </variable>
                          <variable name="iImageHeight">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="2000" />
                            </initialValue>
                          </variable>
                          <variable name="uTimeout">
                            <type>
                              <UDINT />
                            </type>
                            <initialValue>
                              <simpleValue value="60" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml">sec</xhtml>
                            </documentation>
                          </variable>
                          <variable name="fCalCheckerSize">
                            <type>
                              <REAL />
                            </type>
                            <initialValue>
                              <simpleValue value="25.0" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml">mm</xhtml>
                            </documentation>
                          </variable>
                          <variable name="iCalCheckerX">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="6" />
                            </initialValue>
                          </variable>
                          <variable name="iCalCheckerY">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="9" />
                            </initialValue>
                          </variable>
                        </inputVars>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                          <variable name="_CalScriptFileName">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'/var/opt/codesys/PlcLogic/Application/Vision/CalibrateCamera.py'" />
                            </initialValue>
                          </variable>
                          <variable name="_CalResultFile">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'/var/opt/codesys/PlcLogic/visu/outputimage.jpg'" />
                            </initialValue>
                          </variable>
                        </localVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// calibrate with a checkerboard
// sudo python /var/opt/codesys/PlcLogic/Application/CalibrateCamera.py -s cal.yaml -l 24.5 -x 6 -y 9 -d false

IF NOT _Busy THEN
	M_CalibrateCamera := TRUE;
	
	_Command := CONCAT('sudo python ', _CalScriptFileName);
	_Command := CONCAT(_Command, ' -l ');
	_Command := CONCAT(_Command, REAL_TO_STRING(fCalCheckerSize));
	_Command := CONCAT(_Command, ' -x ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iCalCheckerX));
	_Command := CONCAT(_Command, ' -y ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iCalCheckerY));
	_Command := CONCAT(_Command, ' -w ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iImageWidth));
	_Command := CONCAT(_Command, ' -h ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iImageHeight));
	_Command := CONCAT(_Command, ' -r ');
	_Command := CONCAT(_Command, _CalResultFile);
	_Command := CONCAT(_Command, ' 2&gt; ./vision_log.txt ');
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=uTimeout);
	
ELSE
	M_CalibrateCamera := FALSE;
	//_Error := TRUE;
	//_ErrorDescription := 'function busy.';
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_CaptureImage" ObjectId="d38f4a97-5265-4a49-a236-4f8dbe120152">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="iImageWidth">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="2016" />
                            </initialValue>
                          </variable>
                          <variable name="iImageHeight">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="2000" />
                            </initialValue>
                          </variable>
                          <variable name="uTimeout">
                            <type>
                              <UDINT />
                            </type>
                            <initialValue>
                              <simpleValue value="60" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml">sec</xhtml>
                            </documentation>
                          </variable>
                        </inputVars>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                          <variable name="_ImageScriptFileName">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'/var/opt/codesys/PlcLogic/Application/Vision/CaptureImage.py'" />
                            </initialValue>
                          </variable>
                          <variable name="_CaptureImageName">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'/var/opt/codesys/PlcLogic/visu/outputimage.jpg'" />
                            </initialValue>
                          </variable>
                        </localVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// capture an image
// sudo python /var/opt/codesys/PlcLogic/Application/CaptureImage.py -s /var/opt/codesys/PlcLogic/Application/input.jpg -w 2016 -h 2000

IF NOT _Busy THEN
	M_CaptureImage := TRUE;
	
	_Command := CONCAT('sudo python ', _ImageScriptFileName);
	_Command := CONCAT(_Command, ' -s ');
	_Command := CONCAT(_Command, _CaptureImageName);
	_Command := CONCAT(_Command, ' -w ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iImageWidth));
	_Command := CONCAT(_Command, ' -h ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iImageHeight));
	_Command := CONCAT(_Command, ' 2&gt; ./vision_log.txt ');
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=uTimeout);
	
ELSE
	M_CaptureImage := FALSE;
	//_Error := TRUE;
	//_ErrorDescription := 'function busy.';
	
END_IF
</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_LocatePart" ObjectId="6c14d589-4ff1-4332-97a1-15bfa9d317ed">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="iImageWidth">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="2016" />
                            </initialValue>
                          </variable>
                          <variable name="iImageHeight">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="2000" />
                            </initialValue>
                          </variable>
                          <variable name="uTimeout">
                            <type>
                              <UDINT />
                            </type>
                            <initialValue>
                              <simpleValue value="60" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml">sec</xhtml>
                            </documentation>
                          </variable>
                          <variable name="iMaxPos">
                            <type>
                              <UINT />
                            </type>
                            <initialValue>
                              <simpleValue value="10" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> i</xhtml>
                            </documentation>
                          </variable>
                          <variable name="dMaxOverlap">
                            <type>
                              <REAL />
                            </type>
                            <initialValue>
                              <simpleValue value="0.0" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> j</xhtml>
                            </documentation>
                          </variable>
                          <variable name="dScore">
                            <type>
                              <REAL />
                            </type>
                            <initialValue>
                              <simpleValue value="0.8" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> k</xhtml>
                            </documentation>
                          </variable>
                          <variable name="dToleranceAngle">
                            <type>
                              <REAL />
                            </type>
                            <initialValue>
                              <simpleValue value="90.0" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> l</xhtml>
                            </documentation>
                          </variable>
                          <variable name="sTemplateName">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'template.jpg'" />
                            </initialValue>
                          </variable>
                          <variable name="sScriptFilename">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'FastTemplateMatching.py'" />
                            </initialValue>
                          </variable>
                        </inputVars>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </localVars>
                        <localVars constant="true">
                          <variable name="_SCRIPT_DIR_PATH">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'/var/opt/codesys/PlcLogic/Application/Vision/'" />
                            </initialValue>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml">_SCRIPT_FILE_NAME: STRING:='/var/opt/codesys/PlcLogic/Application/Vision/FastTemplateMatching.py';</xhtml>
                            </documentation>
                          </variable>
                          <variable name="_RESULT_FILE_NAME">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'/var/opt/codesys/PlcLogic/visu/outputimage.jpg'" />
                            </initialValue>
                          </variable>
                          <variable name="_TEMPLATE_DIR_PATH">
                            <type>
                              <string />
                            </type>
                            <initialValue>
                              <simpleValue value="'/var/opt/codesys/PlcLogic/Application/Vision/Templates/'" />
                            </initialValue>
                          </variable>
                        </localVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// run the designated vision program
// sudo python /var/opt/codesys/PlcLogic/Application/Vision/TemplateMatch.py -s /var/opt/codesys/PlcLogic/visu/outputimage.jpg        -t /var/opt/codesys/PlcLogic/Application/Vision/Template3.JPG -i 0.9 -j 1.0 -d true -w 2016 -h 2000
// sudo python /var/opt/codesys/PlcLogic/Application/Vision/FastTemplateMatching.py -s /var/opt/codesys/PlcLogic/visu/outputimage.jpg -t /var/opt/codesys/PlcLogic/Application/Vision/Template.jpg -w 2016 -h 2000 -d false
IF NOT _Busy THEN
	M_LocatePart := TRUE;
	
	_Command := CONCAT('sudo python ', _SCRIPT_DIR_PATH);
	_Command := CONCAT(_Command, sScriptFilename);
	//_Command := CONCAT(_Command, ' -s '); // need to trim down the string length
	//_Command := CONCAT(_Command, _VisionImageName);
	_Command := CONCAT(_Command, ' -t ');
	_Command := CONCAT(_Command, _TEMPLATE_DIR_PATH);
	_Command := CONCAT(_Command, sTemplateName);
	_Command := CONCAT(_Command, ' -i ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iMaxPos));
	_Command := CONCAT(_Command, ' -j ');
	_Command := CONCAT(_Command, REAL_TO_STRING(dMaxOverlap));
	_Command := CONCAT(_Command, ' -k ');
	_Command := CONCAT(_Command, REAL_TO_STRING(dScore));
	_Command := CONCAT(_Command, ' -l ');
	_Command := CONCAT(_Command, REAL_TO_STRING(dToleranceAngle));
	_Command := CONCAT(_Command, ' -w ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iImageWidth));
	_Command := CONCAT(_Command, ' -h ');
	_Command := CONCAT(_Command, UINT_TO_STRING(iImageHeight));
	_Command := CONCAT(_Command, ' 2&gt; ./vision_log.txt ');
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=uTimeout);
	
ELSE
	M_LocatePart := FALSE;
	//_Error := TRUE;
	//_ErrorDescription := 'function busy.';
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6d87a4c9-9357-4e03-b1a0-c731940d5946</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="TcpClient" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="bEnable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="strIpAddress">
                      <type>
                        <string length="19" />
                      </type>
                      <initialValue>
                        <simpleValue value="'127.0.0.1'" />
                      </initialValue>
                    </variable>
                    <variable name="uPort">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="50011" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Write">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="_DataToWrite">
                      <type>
                        <string length="255" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <outputVars>
                    <variable name="bBusyWrite">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bDoneWrite">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="bBusyRead">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="dRecordRead">
                      <type>
                        <DINT />
                      </type>
                    </variable>
                    <variable name="strRead">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="byteArrayRead">
                      <type>
                        <array>
                          <dimension lower="0" upper="254" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="bConnected">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_ipAddress">
                      <type>
                        <derived name="NBS.IPv4Address" />
                      </type>
                    </variable>
                    <variable name="_fbTcpClient">
                      <type>
                        <derived name="NBS.TCP_Client" />
                      </type>
                    </variable>
                    <variable name="_fbTcpRead">
                      <type>
                        <derived name="NBS.TCP_Read" />
                      </type>
                    </variable>
                    <variable name="_fbTcpWrite">
                      <type>
                        <derived name="NBS.TCP_Write" />
                      </type>
                    </variable>
                    <variable name="_ConnectDelayTimer">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="_WriteData">
                      <type>
                        <derived name="StringByteArray" />
                      </type>
                    </variable>
                    <variable name="_ReadData">
                      <type>
                        <derived name="StringByteArray" />
                      </type>
                    </variable>
                    <variable name="_WriteRTRIG">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ConnectStep">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_ReadStep">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_Read">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="ConnectStep_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="ConnectStep_DELAY">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="ConnectStep_SETUP">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="ConnectStep_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="ConnectStep_WAIT">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="40" />
                      </initialValue>
                    </variable>
                    <variable name="ConnectStep_CONN">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                    </variable>
                    <variable name="WriteStep_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="WriteStep_DATA">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="WriteStep_WRITE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="WriteStep_WAIT">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="ReadStep_RESET">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="ReadStep_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="ReadStep_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="ReadStep_MONITOR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">{region "connect"}
	
	bConnected := (_ConnectStep = ConnectStep_CONN);
	_ConnectDelayTimer(IN:=_ConnectStep = ConnectStep_DELAY, PT:=T#1S);
	CASE _ConnectStep OF
		
		ConnectStep_IDLE: // IDLE
			IF bEnable THEN
				_fbTcpClient.xEnable := FALSE;
				_ConnectStep := ConnectStep_DELAY;
			END_IF
			
		ConnectStep_DELAY: // DELAY
			IF _ConnectDelayTimer.Q THEN
				_ConnectStep := ConnectStep_SETUP;
			END_IF
			
		ConnectStep_SETUP: // SETUP
			_ipAddress.SetInitialValue(ipAddress := strIpAddress);
			_ConnectStep := ConnectStep_ENABLE;
			
		ConnectStep_ENABLE: // ENABLE
			_fbTcpClient.xEnable := TRUE;
			_ConnectStep := ConnectStep_WAIT;
			
		ConnectStep_WAIT: // WAIT
			IF _fbTcpClient.xActive THEN
				_ConnectStep := ConnectStep_CONN;
			ELSIF _fbTcpClient.xError THEN
				_ConnectStep := ConnectStep_IDLE;
			END_IF
		
		ConnectStep_CONN: // CONNECTED
			IF _fbTcpClient.xError OR NOT _fbTcpClient.xActive OR NOT bEnable THEN
				_ConnectStep := ConnectStep_IDLE;
			END_IF
			
	END_CASE
	
	_fbTcpClient(
		xEnable := , 
		itfIPAddress := _ipAddress, 
		uiPort := uPort, 
		udiTimeOut := 1000000); // us
			 
{endregion}


{region "write"}
	_WriteRTRIG(CLK:=_Write);
	IF _WriteRTRIG.Q THEN
		_Write := FALSE;
		IF bConnected AND _DataToWrite &lt;&gt; '' THEN
			MemUtils.MemSet(	pbyBuffer:=ADR(_WriteData.bArray),
								byValue:=0,
								dwSize:=SIZEOF(_WriteData.bArray));
			MemUtils.MemCpy(	pbyDest:=ADR(_WriteData.sString),
								pbySrc:=ADR(_DataToWrite),
								dwSize:=INT_TO_DWORD(LEN(_DataToWrite)));
			_fbTcpWrite.xExecute := TRUE;
		END_IF
	END_IF
	
	_fbTcpWrite(xExecute := _fbTcpWrite.xExecute AND NOT _fbTcpWrite.xDone AND NOT _fbTcpWrite.xError,
				xBusy=&gt;bBusyWrite,
				xDone=&gt;bDoneWrite,
				itfConnection := _fbTcpClient.itfConnection, 
				udiTimeOut := 1000000, // us 
				udiSize := INT_TO_UDINT(LEN(_WriteData.sString)), 
				pData := ADR(_WriteData.bArray));

{endregion}


{region "read"}

	_Read := (_ConnectStep = ConnectStep_CONN);
	CASE _ReadStep OF
			 
		ReadStep_RESET: // RESET
			_fbTcpRead.xEnable := FALSE;
			_ReadStep := ReadStep_IDLE;

		ReadStep_IDLE: // IDLE
			IF _Read THEN
				_ReadStep := ReadStep_ENABLE;
			END_IF

		ReadStep_ENABLE: // ENABLE
			_fbTcpRead.xEnable := TRUE;
			_ReadStep := ReadStep_MONITOR;

		ReadStep_MONITOR: // MONITOR
			IF _fbTcpRead.xReady THEN
				IF (_fbTcpRead.udiCount &gt; 0) THEN
					//
					MemUtils.MemSet(
						pbyBuffer:=ADR(strRead),
						byValue:=0,
						dwSize:=SIZEOF(strRead)); 
					MemUtils.MemSet(
						pbyBuffer:=ADR(byteArrayRead),
						byValue:=0,
						dwSize:=SIZEOF(byteArrayRead)); 
					MemUtils.MemCpy(
						pbyDest:=ADR(strRead),
						pbySrc:=ADR(_ReadData.sString),
						dwSize:=SEL(_fbTcpRead.udiCount &gt; 255, _fbTcpRead.udiCount, 255));
					MemUtils.MemCpy(
						pbyDest:=ADR(byteArrayRead),
						pbySrc:=ADR(_ReadData.bArray),
						dwSize:=SEL(_fbTcpRead.udiCount &gt; 255, _fbTcpRead.udiCount, 255));
					MemUtils.MemSet(
						pbyBuffer:=ADR(_ReadData.sString),
						byValue:=0,
						dwSize:=SIZEOF(_ReadData.sString)); 
					//
					dRecordRead := dRecordRead + 1;
				END_IF
				
			ELSIF _fbTcpRead.xError OR NOT _Read THEN
				_ReadStep := ReadStep_RESET;
				
			END_IF
			 
	END_CASE
	
	bBusyRead := (_ReadStep &lt;&gt; ReadStep_IDLE) AND _fbTcpRead.xBusy;
	_fbTcpRead(xEnable := , 
				itfConnection := _fbTcpClient.itfConnection, 
				udiSize := SIZEOF(_ReadData.bArray), 
				pData := ADR(_ReadData.bArray), 
				udiCount =&gt; );

{endregion}</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Write" ObjectId="5821b17b-b657-4412-802a-8f52a5970847">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Data">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </inputVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Internal="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF bConnected AND NOT bBusyWrite THEN
	bBusyWrite := TRUE; // do this as a workaround to show "busy" ASAP to let callers know to hold back
	_Write:=TRUE;
	_DataToWrite:=Data;
	_M_Write := TRUE;
	
ELSE
	_M_Write := FALSE;
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Reconnect" ObjectId="97676848-0c7a-4e94-a0de-70ae837304a7">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Internal="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_ConnectStep := ConnectStep_IDLE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>0c178c71-0d25-4361-b16e-e3833e33b5d0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ParseVisionCmd" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_VisionCmd" />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CmdParams">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL.COMMAND_LEN" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_CommandType">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="_StrPosition">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_CommandTypeCal">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CAL'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> calibrate vision</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_CommandTypeAcq">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ACQ'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> acquire (capture) image</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_CommandTypeLoc">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LOC'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> locate part</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// C|A|L ImageWidth ImageHeight Timeout

// C Calibrate vision system
    // CheckerSize (user units) XCount YCount 
    // C 2016 2000 60 25.0 6 9
    
// A Aquire image
    // A 2016 2000 60
    
// L Locate part 
    // MaxParts MaxOverlap Score ToleranceAngle ResultPostion TemplateName ScriptName
    // L 2016 2000 60 10 0.0 0.8 90.0 1 template.jpg FastTemplateMatching.py
	// MaxParts - max number of parts to find in image
	// MaxOverlap - max overlap of parts in image
	// Score - min required score for parts
	// ToleranceAngle - +/- search angle (the larger the number, the longer the search)
	// ResultPostion - index of vision register to store result
	// TemplateName - name of the template to search for
	// ScriptName - name of the template to search for

Error:=FALSE;
ErrorDescription:='';

// split command string into commands
_CmdParams:=F_SplitCmd(Command:=Command);

_CommandType:= _CmdParams[0];
IF _CommandType = _CommandTypeCal THEN
    // C 2016 2000 0060 025.0 0006 0009
	stCommand.CommandType:=DUT_Command_VisionType.Calibrate;
    stCommand.Calibrate.CheckerSize:=STRING_TO_REAL(_CmdParams[4]);
    stCommand.Calibrate.CheckerXCount:=STRING_TO_UINT(_CmdParams[5]);
    stCommand.Calibrate.CheckerYCount:=STRING_TO_UINT(_CmdParams[6]);
	
	IF stCommand.Calibrate.CheckerSize &lt;= 0
		OR stCommand.Calibrate.CheckerXCount &lt;= 0
		OR stCommand.Calibrate.CheckerYCount &lt;= 0 THEN
			Error:=TRUE;
			ErrorDescription:='Checkerboard configuration incorrect';
			RETURN;
	END_IF
    
ELSIF _CommandType = _CommandTypeAcq THEN
    // A 2016 2000 0060
	stCommand.CommandType:=DUT_Command_VisionType.Acquire;
    
ELSIF _CommandType = _CommandTypeLoc THEN
    // L 2016 2000 0060 0010 000.0 0.8 090.0 001 template.jpg FastTemplatMatching.py
	stCommand.CommandType:=DUT_Command_VisionType.LocatePart;
    stCommand.Locate.MaxParts:=STRING_TO_UINT(_CmdParams[4]);
    stCommand.Locate.MaxOverlap:=STRING_TO_REAL(_CmdParams[5]);
    stCommand.Locate.Score:=STRING_TO_REAL(_CmdParams[6]);
    stCommand.Locate.ToleranceAngle:=STRING_TO_REAL(_CmdParams[7]);
    stCommand.Locate.ResultPosition:=STRING_TO_UINT(_CmdParams[8]);
    stCommand.Locate.TemplateName:=_CmdParams[9];
    stCommand.Locate.ScriptFilename:=_CmdParams[10];
	
	IF stCommand.Locate.MaxParts &lt;= 0
		OR stCommand.Locate.ResultPosition &lt; GVL.VIS_ARR_BEG
		OR stCommand.Locate.ResultPosition &gt; GVL.VIS_ARR_END
		OR stCommand.Locate.TemplateName = '' THEN
			Error:=TRUE;
			ErrorDescription:='Locate part configuration incorrect';
			RETURN;
	END_IF
	
ELSE
	Error:=TRUE;
	ErrorDescription:='Unknown command type for vision';
	RETURN;
    
END_IF

// common
stCommand.ImageWidth:=STRING_TO_UINT(_CmdParams[1]);
stCommand.ImageHeight:=STRING_TO_UINT(_CmdParams[2]);
stCommand.Timeout:=STRING_TO_UDINT(_CmdParams[3]);

IF stCommand.ImageWidth &lt;= 0
	OR stCommand.ImageHeight &lt;= 0 THEN
		Error:=TRUE;
		ErrorDescription:='Image size settings incorrect';
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c1f3fe10-7066-4e4d-ae1a-05a0a2c8898a</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="BuildVisionCmd" pouType="function">
                <interface>
                  <returnType>
                    <string length="GVL.COMMAND_LEN" />
                  </returnType>
                  <inputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_VisionCmd" />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_Delimiter">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                    <variable name="_CommandTypeCal">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CAL'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> calibrate vision</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_CommandTypeAcq">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ACQ'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> acquire (capture) image</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_CommandTypeLoc">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LOC'" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> locate part</xhtml>
                      </documentation>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// C|A|L ImageWidth ImageHeight Timeout

// C Calibrate vision system
    // CheckerSize (user units) XCount YCount 
    // C 2016 2000 60 25.0 6 9
    
// A Aquire image
    // A 2016 2000 60
    
// L Locate part 
    // MaxParts MaxOverlap Score ToleranceAngle ResultPostion TemplateName ScriptName
    // L 2016 2000 60 10 0.0 0.8 90.0 1 template.jpg FastTemplateMatching.py
	// MaxParts - max number of parts to find in image
	// MaxOverlap - max overlap of parts in image
	// Score - min required score for parts
	// ToleranceAngle - +/- search angle (the larger the number, the longer the search)
	// ResultPostion - index of vision register to store result
	// TemplateName - name of the template to search for
	// ScriptName - name of the template to search for

// clear the command
_Command:='';

// build the command
CASE stCommand.CommandType OF
	DUT_Command_VisionType.Calibrate:
		F_AddElement(_Command, _Delimiter, _CommandTypeCal);
	DUT_Command_VisionType.Acquire:
		F_AddElement(_Command, _Delimiter, _CommandTypeAcq);
	DUT_Command_VisionType.LocatePart:
		F_AddElement(_Command, _Delimiter, _CommandTypeLoc);
END_CASE

// add the common items width, height, timeout
F_AddElement(_Command, _Delimiter, UINT_TO_STRING(stCommand.ImageWidth));
F_AddElement(_Command, _Delimiter, UINT_TO_STRING(stCommand.ImageHeight));
F_AddElement(_Command, _Delimiter, UDINT_TO_STRING(stCommand.Timeout));

//
CASE stCommand.CommandType OF
	DUT_Command_VisionType.Calibrate:
		// C 2016 2000 60 25.0 6 9
		F_AddElement(_Command, _Delimiter, REAL_TO_STRING(stCommand.Calibrate.CheckerSize));
		F_AddElement(_Command, _Delimiter, UINT_TO_STRING(stCommand.Calibrate.CheckerXCount));
		F_AddElement(_Command, _Delimiter, UINT_TO_STRING(stCommand.Calibrate.CheckerYCount));
		
	DUT_Command_VisionType.Acquire:
		// A 2016 2000 60
		// we are done
		
	DUT_Command_VisionType.LocatePart:
		// L 2016 2000 60 10 0.0 0.8 90.0 1 template.jpg FastTemplateMatching.py
		F_AddElement(_Command, _Delimiter, UINT_TO_STRING(stCommand.Locate.MaxParts));
		F_AddElement(_Command, _Delimiter, REAL_TO_STRING(stCommand.Locate.MaxOverlap));
		F_AddElement(_Command, _Delimiter, REAL_TO_STRING(stCommand.Locate.Score));
		F_AddElement(_Command, _Delimiter, REAL_TO_STRING(stCommand.Locate.ToleranceAngle));
		F_AddElement(_Command, _Delimiter, UINT_TO_STRING(stCommand.Locate.ResultPosition));
		F_AddElement(_Command, _Delimiter, stCommand.Locate.TemplateName);
		F_AddElement(_Command, _Delimiter, stCommand.Locate.ScriptFilename);
		
END_CASE

// set function equal to command
BuildVisionCmd := _Command;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>580bcf70-fae5-407f-8446-aaa0a1365ba4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="Module" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="StoredPositions">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.POS_ARR_BEG..GVL.POS_ARR_END] OF DUT_StoredPosition" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> input vars</xhtml>
                      </documentation>
                    </variable>
                    <variable name="VisionRegisters">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.VIS_ARR_BEG..GVL.VIS_ARR_END] OF DUT_VisionRegister" />
                      </type>
                    </variable>
                    <variable name="Flags">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.FLG_ARR_BEG..GVL.FLG_ARR_END] OF DUT_Flags" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="ItfUnitMode">
                      <type>
                        <derived name="PACK_ML.IUnitMode" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> output vars</xhtml>
                      </documentation>
                    </variable>
                    <variable name="Busy">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_TimeoutTimer">
                      <type>
                        <derived name="TON" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="PT">
                            <simpleValue value="TIME#0ms" />
                          </value>
                        </structValue>
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> standard local vars</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_Home">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Start">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_ModuleFirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="_SeqStart">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqHome">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_AbortedRtrig">
                      <type>
                        <derived name="R_Trig" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_RUN">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>PackML</Extends>
                        <Implements>ItfModule</Implements>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

//
IF _ModuleFirstScan THEN
	ItfUnitMode := SUPER^.IUnitMode;
END_IF;

//
_M_Home();
_M_Start();

//
Busy := _UnitMode.CurrentState &lt;&gt; PACK_ML.State.Idle
		AND _UnitMode.CurrentState &lt;&gt; PACK_ML.State.Aborted
		AND _UnitMode.CurrentState &lt;&gt; PACK_ML.State.Complete
		AND _UnitMode.CurrentState &lt;&gt; PACK_ML.State.Held
		AND _UnitMode.CurrentState &lt;&gt; PACK_ML.State.Stopped
		AND _UnitMode.CurrentState &lt;&gt; PACK_ML.State.Suspended;
		
//
_AbortedRtrig(CLK:=_UnitMode.CurrentState = PACK_ML.State.Aborted);
IF _AbortedRtrig.Q THEN
	//_SeqStart := 0;  _Start:=FALSE;
	//_SeqHome := 0; _Home:=FALSE;
END_IF

//
_TimeoutTimer(IN:= Busy AND _TimeoutTimer.PT &gt; T#0MS); // ignore if timer set to 0
IF _TimeoutTimer.Q THEN
	M_Error(Description:= CONCAT('Task timed out after ', TIME_TO_STRING(_TimeoutTimer.ET)));
END_IF

// do not place anything below this
_ModuleFirstScan:=FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Start" ObjectId="4fffeb3f-a502-448a-801f-62a2012af7b1">
                      <interface />
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_Start := TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Home" ObjectId="80e95931-65c8-4c90-ad00-612ca250483e">
                      <interface />
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_Home:=TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Error" ObjectId="dbcfca92-733c-4c2e-a049-52c206183687">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Description">
                            <type>
                              <string />
                            </type>
                          </variable>
                        </inputVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// suspend state machine
_UnitMode.Suspend();

//
Error := TRUE;

//
IF ErrorDescription = '' THEN
	ErrorDescription := Description;
ELSE // add a space and tack on the additional error description
	ErrorDescription := CONCAT(ErrorDescription, ' ');
	ErrorDescription := CONCAT(ErrorDescription, Description);
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Abort" ObjectId="e5c2715c-41fc-45b3-ba5d-b082d35ede74">
                      <interface />
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_UnitMode.Abort();
_SeqStart := 0;  _Start:=FALSE;
_SeqHome := 0; _Home:=FALSE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Hold" ObjectId="f895a567-6f19-4aaf-a19a-430ec9375429">
                      <interface />
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_UnitMode.Hold();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Stop" ObjectId="10e51045-5ea3-431f-a77c-f14d9d4a03bb">
                      <interface />
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_UnitMode.Stop();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Start" ObjectId="f110705f-80e9-4c18-9b3f-432547227ce9">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqStart OF
	0:
		IF _Start THEN
			_Start := FALSE;
			M_Reset();
			_SeqStart := _SeqStart + 1;
		END_IF
	1:
		CASE _UnitMode.CurrentState OF
			PACK_ML.State.Clearing,
			PACK_ML.State.Resetting,
			PACK_ML.State.UnHolding,
			PACK_ML.State.UnSuspending,
			PACK_ML.State.Starting:
				// be patient
			PACK_ML.State.Aborted:
				_UnitMode.Clear();
			PACK_ML.State.Stopped:
				_UnitMode.Reset();
			PACK_ML.State.Held:
				_UnitMode.UnHold();
			PACK_ML.State.Suspended:
				_UnitMode.UnSuspend();
			PACK_ML.State.Idle:
				_UnitMode.Start();
			PACK_ML.State.Execute:
				_SeqStart := 0;
		ELSE
			_SeqStart := 0;
		END_CASE
		
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Reset" ObjectId="9e2db144-5b4e-459a-90c5-117bc0e5923a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">Error := FALSE;
ErrorDescription := '';</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Home" ObjectId="b6b75ed6-b5aa-4b31-9a1b-102168846c09">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqHome OF
	0:
		//
		IF _Home THEN
			_Home := FALSE;
			M_Reset();
			_SeqHome := _SeqHome + 1;
		END_IF
	1:
		//
		CASE _UnitMode.CurrentState OF
			PACK_ML.State.Aborted:
				_UnitMode.Clear();
				
			PACK_ML.State.Stopped,
			PACK_ML.State.Complete:
				_UnitMode.Reset();
				_SeqHome := _SeqHome + 1;
				
			PACK_ML.State.Resetting,
			PACK_ML.State.Clearing,
			PACK_ML.State.Aborting:
				// just wait
		ELSE
			_UnitMode.Abort();
			
		END_CASE
		
	2:
		IF _UnitMode.CurrentState = PACK_ML.State.Idle THEN
			_SeqHome := 0;
		END_IF
		
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="PropCurrentState" ObjectId="27b1323a-18e8-4d9c-9aef-c0fccf1fee6f">
                      <interface>
                        <returnType>
                          <derived name="PACK_ML.State" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">PropCurrentState := ItfUnitMode.CurrentState;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="PropBusy" ObjectId="df90aa53-7938-4729-8aeb-e73fd9721d5b">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">PropBusy := Busy;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="PropError" ObjectId="3b5ad92c-8b5a-464b-aed7-6f6699ae2429">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">PropError := Error;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="PropErrDescription" ObjectId="e9dc189d-3561-4f34-8238-07f940859ee8">
                      <interface>
                        <returnType>
                          <string />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">PropErrDescription := ErrorDescription;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>06152fa3-0ee8-42bb-9309-1b5f17657eed</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="VisionCmdProcessor" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                    <variable name="LogicCmdIO">
                      <type>
                        <derived name="REFERENCE TO ST_LogicCmdIO" />
                      </type>
                    </variable>
                    <variable name="VisionSystemIpAddress">
                      <type>
                        <string length="19" />
                      </type>
                      <initialValue>
                        <simpleValue value="'127.0.0.1'" />
                      </initialValue>
                    </variable>
                    <variable name="VisionSystemPort">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="50011" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="VisionStateText">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'READY'" />
                      </initialValue>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CaptureImage_Output">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="_CaptureImage_WorkerUid">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="_LocatePart_Output">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="_LocatePart_WorkerUid">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="_RunCalibration_Output">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="_RunCalibration_WorkerUid">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="_Vision">
                      <type>
                        <derived name="OpenCV" />
                      </type>
                    </variable>
                    <variable name="_VisionCommandParser">
                      <type>
                        <derived name="ParseVisionCmd" />
                      </type>
                    </variable>
                    <variable name="_VisionDoneRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_VisionBusyRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_VisionResult">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="_ResultPosition">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_ResultPosition_CAL">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_ResultPosition_LOC">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_ResultPosition_CAP">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SpacePosition">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_VisionObjectIndex">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="_VisionRatio">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="_VisionRotation">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="_VisionError">
                      <type>
                        <REAL />
                      </type>
                    </variable>
                    <variable name="_PartsCount">
                      <type>
                        <UDINT />
                      </type>
                    </variable>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_RESPONSE_CAL">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'res: CAL '" />
                      </initialValue>
                    </variable>
                    <variable name="_RESPONSE_LOC">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'res: LOC '" />
                      </initialValue>
                    </variable>
                    <variable name="_RESPONSE_CAP">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'res: CAP '" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_COMMAND">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_TRIGGER">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="40" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
CASE SUPER^._SeqMain OF
	
    _STEP_DONE:
		SUPER^._SeqMain := _STEP_IDLE;
        
    _STEP_IDLE:
		// hang out here until called to run
        
    _STEP_COMMAND: // parse vision command
        _VisionCommandParser(Command:=Command);
		IF _VisionCommandParser.Error THEN
			SUPER^.M_Error(Description:=_VisionCommandParser.ErrorDescription);
			//
			SUPER^._SeqMain := _STEP_ERR;
		ELSE
			IF _VisionCommandParser.stCommand.Timeout &gt; 0 THEN
				SUPER^._TimeoutTimer.PT := UDINT_TO_TIME(_VisionCommandParser.stCommand.Timeout * 1000);
			END_IF
			//
			SUPER^._SeqMain := _STEP_TRIGGER;
		END_IF
		
	_STEP_TRIGGER: //
		CASE _VisionCommandParser.stCommand.CommandType OF
			DUT_Command_VisionType.Calibrate: //
				_Vision.M_CalibrateCamera(	iImageWidth:= _VisionCommandParser.stCommand.ImageWidth, 
											iImageHeight:= _VisionCommandParser.stCommand.ImageHeight, 
											fCalCheckerSize:= _VisionCommandParser.stCommand.Calibrate.CheckerSize, 
											iCalCheckerX:= _VisionCommandParser.stCommand.Calibrate.CheckerXCount, 
											iCalCheckerY:= _VisionCommandParser.stCommand.Calibrate.CheckerYCount,
                                            uTimeout:=_VisionCommandParser.stCommand.Timeout);
			
			DUT_Command_VisionType.Acquire: //
				_Vision.M_CaptureImage(	iImageWidth:= _VisionCommandParser.stCommand.ImageWidth, 
										iImageHeight:= _VisionCommandParser.stCommand.ImageHeight,
                                        uTimeout:=_VisionCommandParser.stCommand.Timeout);
			
			DUT_Command_VisionType.LocatePart: //
				_PartsCount := 0;
				LogicCmdIO.Register[_VisionCommandParser.stCommand.Locate.ResultPosition] := 0;
				_Vision.M_LocatePart( 	iImageWidth:= _VisionCommandParser.stCommand.ImageWidth, 
										iImageHeight:= _VisionCommandParser.stCommand.ImageHeight, 
										iMaxPos:= _VisionCommandParser.stCommand.Locate.MaxParts, 
										dMaxOverlap:= _VisionCommandParser.stCommand.Locate.MaxOverlap, 
										dScore:= _VisionCommandParser.stCommand.Locate.Score, 
										dToleranceAngle:= _VisionCommandParser.stCommand.Locate.ToleranceAngle,
                                        uTimeout:=_VisionCommandParser.stCommand.Timeout,
										sTemplateName:=_VisionCommandParser.stCommand.Locate.TemplateName,
										sScriptFilename:=_VisionCommandParser.stCommand.Locate.ScriptFilename);
			
		END_CASE;
		
		//
		SUPER^._SeqMain := _STEP_WAIT;
		
	_STEP_WAIT: //
		IF _VisionDoneRtrig.Q THEN
			
			//
			_VisionResult := _Vision.P_Response;
			
			//
			_ResultPosition_CAL := FIND(STR1:=_VisionResult,STR2:=_RESPONSE_CAL);
			_ResultPosition_LOC := FIND(STR1:=_VisionResult,STR2:=_RESPONSE_LOC);
			_ResultPosition_CAP := FIND(STR1:=_VisionResult,STR2:=_RESPONSE_CAP);
			
			//
			IF _ResultPosition_CAL &gt; 0 THEN 
				// calibration was completed
				// res: CAL rat:23.23 rot:23.23 err:23.23
				_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN(_RESPONSE_CAL),POS:=LEN(_RESPONSE_CAL)+1);
				//VisionStateText := CONCAT(VisionStateText, '\n');
				//VisionStateText := CONCAT(VisionStateText, _VisionResult);
				// rat:23.23 rot:23.23 err:23.23
				_ResultPosition := FIND(STR1:=_VisionResult,STR2:='rat:');
				IF _ResultPosition &gt; 0 THEN
					_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN('rat:'),POS:=LEN('rat:')+1);
					_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
					_VisionRatio := STRING_TO_REAL(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
					_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
				END_IF
				// rot:23.23 err:23.23
				_ResultPosition := FIND(STR1:=_VisionResult,STR2:='rot:');
				IF _ResultPosition &gt; 0 THEN
					_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN('rot:'),POS:=LEN('rot:')+1);
					_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
					_VisionRotation := STRING_TO_REAL(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
					_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
				END_IF
				// err:23.23
				_ResultPosition := FIND(STR1:=_VisionResult,STR2:='err:');
				IF _ResultPosition &gt; 0 THEN
					_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN('err:'),POS:=LEN('err:')+1);
					_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
					_VisionError := STRING_TO_REAL(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
					_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
				END_IF
				
			ELSIF _ResultPosition_LOC &gt; 0 THEN 
				// part was located
				// 'res: LOC obj:0 cx:54.66 cy:119.45 a:-12.87 s:0.84 $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
				_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN(_RESPONSE_LOC),POS:=LEN(_RESPONSE_LOC)+1);
				//VisionStateText := CONCAT(VisionStateText, '\n');
				//VisionStateText := CONCAT(VisionStateText, _VisionResult);
				_VisionObjectIndex := 0;
				WHILE FIND(STR1:=_VisionResult,STR2:='obj:') &gt; 0 
					AND _VisionObjectIndex &lt;= _VisionCommandParser.stCommand.Locate.MaxParts 
					AND _VisionObjectIndex + _VisionCommandParser.stCommand.Locate.ResultPosition &lt; GVL.VIS_ARR_END DO
					// 'obj:0 cx:54.66 cy:119.45 a:-12.87 s:0.84 $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
					// $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
					_ResultPosition := FIND(STR1:=_VisionResult,STR2:='obj:');
					IF _ResultPosition &gt; 0 THEN
						_PartsCount := _PartsCount + 1;
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_ResultPosition-LEN('obj:')+1,POS:=_ResultPosition+LEN('obj:'));
						_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
						_VisionObjectIndex := STRING_TO_UINT(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
						SUPER^.VisionRegisters[_VisionCommandParser.stCommand.Locate.ResultPosition + _VisionObjectIndex].Comment := CONCAT('obj:', UDINT_TO_STRING(_VisionObjectIndex));
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
					END_IF
					// cx:54.66 cy:119.45 a:-12.87 s:0.84 $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
					_ResultPosition := FIND(STR1:=_VisionResult,STR2:='cx:');
					IF _ResultPosition &gt; 0 THEN
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN('cx:'),POS:=LEN('cx:')+1);
						_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
						SUPER^.VisionRegisters[_VisionCommandParser.stCommand.Locate.ResultPosition + _VisionObjectIndex].Position.X := STRING_TO_LREAL(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
					END_IF
					// cy:119.45 a:-12.87 s:0.84 $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
					_ResultPosition := FIND(STR1:=_VisionResult,STR2:='cy:');
					IF _ResultPosition &gt; 0 THEN
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN('cy:'),POS:=LEN('cy:')+1);
						_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
						SUPER^.VisionRegisters[_VisionCommandParser.stCommand.Locate.ResultPosition + _VisionObjectIndex].Position.Y := STRING_TO_LREAL(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
					END_IF
					// a:-12.87 s:0.84 $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
					_ResultPosition := FIND(STR1:=_VisionResult,STR2:='a:');
					IF _ResultPosition &gt; 0 THEN
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN('a:'),POS:=LEN('a:')+1);
						_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
						SUPER^.VisionRegisters[_VisionCommandParser.stCommand.Locate.ResultPosition + _VisionObjectIndex].Position.A := STRING_TO_LREAL(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
					END_IF
					// s:0.84 $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
					_ResultPosition := FIND(STR1:=_VisionResult,STR2:='s:');
					IF _ResultPosition &gt; 0 THEN
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-LEN('s:'),POS:=LEN('s:')+1);
						_SpacePosition := FIND(STR1:=_VisionResult,STR2:=' ');
						SUPER^.VisionRegisters[_VisionCommandParser.stCommand.Locate.ResultPosition + _VisionObjectIndex].Scaling := STRING_TO_REAL(MID(STR:=_VisionResult,LEN:=_SpacePosition-1,POS:=1));
						_VisionResult := MID(STR:=_VisionResult,LEN:=LEN(_VisionResult)-_SpacePosition,POS:=_SpacePosition+1);
					END_IF
					// $NLOC obj:1 cx:71.49 cy:100.06 a:10.13 s:0.83 $N'
				END_WHILE
				// return how many part were found
				LogicCmdIO.Register[_VisionCommandParser.stCommand.Locate.ResultPosition] := _PartsCount;
				
			ELSIF _ResultPosition_CAP &gt; 0 THEN 
				// image was captured
				
			END_IF
			
			//
			SUPER^._SeqMain := _STEP_DONE;
			
		END_IF

END_CASE

//
_Vision(sIpAddress:= VisionSystemIpAddress, uPort:= VisionSystemPort);

//
_VisionBusyRtrig(clk:=_Vision.P_Busy);
IF _VisionBusyRtrig.Q THEN
	VisionStateText := 'BUSY';
END_IF

//
_VisionDoneRtrig(clk:=_Vision.P_Done);
IF _VisionDoneRtrig.Q THEN
	VisionStateText := 'DONE.';
	VisionStateText := CONCAT(VisionStateText, ' Found ');
	VisionStateText := CONCAT(VisionStateText, UDINT_TO_STRING(_PartsCount));
	VisionStateText := CONCAT(VisionStateText, ' parts.');
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="93afa927-2608-4b3d-9460-07c2fd48c33a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^._UnitMode(	sName := 'Vision Processor',
				eInitialState := PACK_ML.State.Idle,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="fcfc6b30-29f1-4c96-9dec-23fe83a707f7">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="62ae2670-1ac3-4949-b0cc-afaf62b4bcb3">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqResetting OF
	0:
		_Vision.M_Reset();
		_SeqResetting := _SeqResetting + 1;
	1:
		IF NOT _Vision.P_Error THEN
			//VisionStateText := 'RESET';
			SUPER^.M_StateComplete();
			_SeqResetting := 0;
		END_IF
END_CASE
		
</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="02db5f8f-59c2-4bc3-a7b7-0c1db0560d27">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// I can consider this the "INIT" state
SUPER^._SeqMain := _STEP_COMMAND;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="4fb297bd-99b3-45b8-9db0-a39dde1b30d8">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
IF SUPER^._SeqMain =_STEP_IDLE THEN
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Aborting" ObjectId="d513ea01-4f59-4a93-8842-106eb97fa165">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqAborting OF
	0:
		_Vision.M_Cancel();
		_SeqAborting := _SeqAborting + 1;
		
	1: 
		IF NOT _Vision.P_Busy THEN
			SUPER^.M_StateComplete();
			_SeqAborting := 0;
		END_IF
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_ReconnectVisionSystem" ObjectId="bccf85b8-1449-40b5-9076-7f7a8ac52707">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// TODO may want to make sure the state machine is not in execute?
_Vision.M_Reconnect();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_PartsCount" ObjectId="59a35101-d609-430e-a7f5-a7dd6d208165">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO UDINT" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_PartsCount REF= _PartsCount;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_VisionSystemConnected" ObjectId="095e3029-762d-4123-a2cd-4e83671e3172">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO BOOL" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_VisionSystemConnected REF= _Vision._TcpClient.bConnected;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>fe68b725-9761-4240-89f1-03981366ea66</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ParseVarSetCmd" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_VarSetCmd" />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CmdParams">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL.COMMAND_LEN" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_ArrayTypeS">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'STO'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeV">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VIS'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeF">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'FLG'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// S|V|F index x y z a b c
// S 0000 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 
// V 0000 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 
// F 0000 1

Error:=FALSE;
ErrorDescription:='';

// split command string into commands
_CmdParams:=F_SplitCmd(Command:=Command);

//
IF _CmdParams[0] = _ArrayTypeS  THEN
	stCommand.ArrayType := DUT_Command_ArrayType.StoredPosition;
ELSIF _CmdParams[0] = _ArrayTypeV THEN
	stCommand.ArrayType := DUT_Command_ArrayType.VisionRegister;
ELSIF _CmdParams[0] = _ArrayTypeF THEN
	stCommand.ArrayType := DUT_Command_ArrayType.Flag;
ELSE
	Error:=TRUE;
	ErrorDescription:='Incorrect array type';
END_IF

//
stCommand.ArrayIndex := STRING_TO_INT(_CmdParams[1]);
IF ((stCommand.ArrayIndex &lt; GVL.POS_ARR_BEG OR stCommand.ArrayIndex &gt; GVL.POS_ARR_END) AND stCommand.ArrayType = DUT_Command_ArrayType.StoredPosition)
	OR ((stCommand.ArrayIndex &lt; GVL.VIS_ARR_BEG OR stCommand.ArrayIndex &gt; GVL.VIS_ARR_END) AND stCommand.ArrayType = DUT_Command_ArrayType.VisionRegister)
	OR ((stCommand.ArrayIndex &lt; GVL.FLG_ARR_BEG OR stCommand.ArrayIndex &gt; GVL.FLG_ARR_END) AND stCommand.ArrayType = DUT_Command_ArrayType.Flag) THEN
		Error:=TRUE;
		ErrorDescription:='Incorrect array type';
END_IF

//
stCommand.Coordinates.X := STRING_TO_LREAL(_CmdParams[2]);
stCommand.Coordinates.Y := STRING_TO_LREAL(_CmdParams[3]);
stCommand.Coordinates.Z := STRING_TO_LREAL(_CmdParams[4]);
stCommand.Coordinates.A := STRING_TO_LREAL(_CmdParams[5]);
stCommand.Coordinates.B := STRING_TO_LREAL(_CmdParams[6]);
stCommand.Coordinates.C := STRING_TO_LREAL(_CmdParams[7]);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>21a45979-23a6-4d05-8c5e-026456e22047</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="MoveCmdProcessor" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Velocity">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="1000.0" />
                      </initialValue>
                    </variable>
                    <variable name="VelFactor">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="1.0" />
                      </initialValue>
                    </variable>
                    <variable name="Acceleration">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="1000.0" />
                      </initialValue>
                    </variable>
                    <variable name="AccFactor">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0.5" />
                      </initialValue>
                    </variable>
                    <variable name="Jerk">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="1000.0" />
                      </initialValue>
                    </variable>
                    <variable name="JerkFactor">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="0.5" />
                      </initialValue>
                    </variable>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="GroupHandler">
                      <type>
                        <derived name="FB_GroupHandler" />
                      </type>
                    </variable>
                  </inOutVars>
                  <outputVars>
                    <variable name="Position">
                      <type>
                        <derived name="SMC_POS_REF" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_SequenceSetCoordTrans">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceMoveCircularAbsolute">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceMoveCircularRelative">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceMoveDirectAbsolute">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceMoveDirectRelative">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceMoveLinearAbsolute">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceMoveLinearRelative">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_MC_GroupHalt">
                      <type>
                        <derived name="MC_GroupHalt" />
                      </type>
                    </variable>
                    <variable name="_MC_MoveCircularAbsolute">
                      <type>
                        <derived name="MC_MoveCircularAbsolute" />
                      </type>
                    </variable>
                    <variable name="_MC_MoveCircularRelative">
                      <type>
                        <derived name="MC_MoveCircularRelative" />
                      </type>
                    </variable>
                    <variable name="_MC_MoveDirectAbsolute">
                      <type>
                        <derived name="MC_MoveDirectAbsolute" />
                      </type>
                    </variable>
                    <variable name="_MC_MoveDirectRelative">
                      <type>
                        <derived name="MC_MoveDirectRelative" />
                      </type>
                    </variable>
                    <variable name="_MC_MoveLinearAbsolute">
                      <type>
                        <derived name="MC_MoveLinearAbsolute" />
                      </type>
                    </variable>
                    <variable name="_MC_MoveLinearRelative">
                      <type>
                        <derived name="MC_MoveLinearRelative" />
                      </type>
                    </variable>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_MoveCommandParser">
                      <type>
                        <derived name="ParseMoveCmd" />
                      </type>
                    </variable>
                    <variable name="_PosRef">
                      <type>
                        <derived name="SMC_POS_REF" />
                      </type>
                    </variable>
                    <variable name="_PosRef2">
                      <type>
                        <derived name="SMC_POS_REF" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_COMMAND">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_GROUP_POWER_ON">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="22" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_POWER_ON">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="24" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_GROUP_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="35" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_READ_POSITION">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="40" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_POSITION">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_SET_KINEMATICS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="60" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_KINEMATICS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="70" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_SET_COORD_TRANS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="71" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_COORD_TRANS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="72" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_MOVE_TYPE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="80" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_MOVE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="90" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_GROUP_DISABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="100" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_DISABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="110" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_GROUP_POWER_OFF">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="120" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="9999" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
CASE SUPER^._SeqMain OF
	
	_STEP_DONE:
		SUPER^._SeqMain := _STEP_IDLE;
		
	_STEP_IDLE:
		// wait here until commanded to start
		
	_STEP_COMMAND: // parse command
		_MoveCommandParser(Command:=Command);
		SUPER^._SeqMain := _STEP_GROUP_ENABLE;
		
	_STEP_GROUP_ENABLE:
		IF GroupHandler.M_EnableGroup() THEN
			SUPER^._SeqMain := _STEP_WAIT_ENABLE;
		ELSE
			SUPER^.M_Error(Description:=CONCAT('Group Handler Error: ',
										CONCAT(TO_STRING(GroupHandler.ErrorID),
										CONCAT(' ', SMC_ErrorString(GroupHandler.ErrorID,
													SMC_Language_Type.english)))));
			SUPER^._SeqMain := _STEP_ERR; // error step so we dont spam errors
		END_IF
		
	_STEP_WAIT_ENABLE:
		// TODO add timeout timer here?
		IF GroupHandler.P_GroupEnabled THEN
			SUPER^._SeqMain := _STEP_SET_KINEMATICS;
		END_IF;
		
	_STEP_SET_KINEMATICS: // set kinematics
		_PosRef.c := _MoveCommandParser.stCommand.CoordRef;
		_PosRef2.c := _MoveCommandParser.stCommand.CoordRef2;
		IF GroupHandler.M_SetKinematics(_MoveCommandParser.stCommand.CoordSystem) THEN
			SUPER^._SeqMain := _STEP_WAIT_KINEMATICS;
		ELSE
			SUPER^.M_Error(Description:=CONCAT('Group Handler Error: ',
										CONCAT(TO_STRING(GroupHandler.ErrorID),
										CONCAT(' ', SMC_ErrorString(GroupHandler.ErrorID,
													SMC_Language_Type.english)))));
			SUPER^._SeqMain := _STEP_ERR; // error step so we dont spam errors
		END_IF
		
	_STEP_WAIT_KINEMATICS: // wait for set kinematics
		// TODO add timeout timer here?
		IF GroupHandler.P_KinematicsSet THEN
			SUPER^._SeqMain := _STEP_MOVE_TYPE;
		END_IF
		
	_STEP_MOVE_TYPE: // parse move type
		IF _MoveCommandParser.stCommand.MoveType = DUT_Command_MoveType.CircularMove THEN
			IF _MoveCommandParser.stCommand.PositionType = DUT_Command_PositionType.AbsolutePosition THEN
				_SequenceMoveCircularAbsolute := 1;
			ELSIF _MoveCommandParser.stCommand.PositionType = DUT_Command_PositionType.RelativePosition THEN
				_SequenceMoveCircularRelative := 1;
			END_IF
			
		ELSIF _MoveCommandParser.stCommand.MoveType = DUT_Command_MoveType.DirectMove THEN
			IF _MoveCommandParser.stCommand.PositionType = DUT_Command_PositionType.AbsolutePosition THEN
				_SequenceMoveDirectAbsolute := 1;
			ELSIF _MoveCommandParser.stCommand.PositionType = DUT_Command_PositionType.RelativePosition THEN
				_SequenceMoveDirectRelative := 1;
			END_IF
			
		ELSIF _MoveCommandParser.stCommand.MoveType = DUT_Command_MoveType.LinearMove THEN
			IF _MoveCommandParser.stCommand.PositionType = DUT_Command_PositionType.AbsolutePosition THEN
				_SequenceMoveLinearAbsolute := 1;
			ELSIF _MoveCommandParser.stCommand.PositionType = DUT_Command_PositionType.RelativePosition THEN
				_SequenceMoveLinearRelative := 1;
			END_IF
		END_IF
		
		SUPER^._SeqMain := _STEP_WAIT_MOVE;
		
	_STEP_WAIT_MOVE: // wait for move complete
		IF _SequenceMoveCircularAbsolute = 0
			AND _SequenceMoveCircularRelative = 0 
			AND _SequenceMoveDirectAbsolute = 0 
			AND _SequenceMoveDirectRelative = 0
			AND _SequenceMoveLinearAbsolute = 0
			AND _SequenceMoveLinearRelative = 0 THEN
				//SUPER^._SeqMain := _STEP_GROUP_DISABLE;
				SUPER^._SeqMain := _STEP_DONE;
		END_IF
	
	// TODO do we need to disable the group at this point? lets leave this here for now but skip it.
	_STEP_GROUP_DISABLE: 
		IF GroupHandler.M_DisableGroup() THEN
			SUPER^._SeqMain := _STEP_WAIT_DISABLE;
		ELSE
			SUPER^.M_Error(Description:=CONCAT('Group Handler Error: ',
										CONCAT(TO_STRING(GroupHandler.ErrorID),
										CONCAT(' ', SMC_ErrorString(GroupHandler.ErrorID,
													SMC_Language_Type.english)))));
			SUPER^._SeqMain := _STEP_ERR; // error step so we dont spam errors
		END_IF
		
	_STEP_WAIT_DISABLE:
		IF NOT GroupHandler.P_GroupEnabled THEN
			SUPER^._SeqMain := _STEP_DONE;
		END_IF
	
END_CASE

CASE _SequenceMoveCircularAbsolute OF
	0: //
	
	1: //
		_MC_MoveCircularAbsolute.Execute := TRUE;
		_SequenceMoveCircularAbsolute := 2;
		
	2: //
		IF _MC_MoveCircularAbsolute.Error THEN
			SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_MoveCircularAbsolute.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_MoveCircularAbsolute.ErrorID,
													SMC_Language_Type.english)))));
			_SequenceMoveCircularAbsolute := 3; // error step so we dont spam errors
		ELSIF  _MC_MoveCircularAbsolute.Done THEN
			_MC_MoveCircularAbsolute.Execute := FALSE;
			_SequenceMoveCircularAbsolute := 0;
		END_IF
		
END_CASE

CASE _SequenceMoveCircularRelative OF
	0: //
	
	1: //
		_MC_MoveCircularRelative.Execute := TRUE;
		_SequenceMoveCircularRelative := 2;
		
	2: //
		IF _MC_MoveCircularRelative.Error THEN
			SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_MoveCircularRelative.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_MoveCircularRelative.ErrorID,
													SMC_Language_Type.english)))));
			_SequenceMoveCircularRelative := 3; // error step so we dont spam errors
		ELSIF  _MC_MoveCircularRelative.Done THEN
			_MC_MoveCircularRelative.Execute := FALSE;
			_SequenceMoveCircularRelative := 0;
		END_IF
		
END_CASE

CASE _SequenceMoveDirectAbsolute OF
	0: //
	
	1: //
		_MC_MoveDirectAbsolute.Execute := TRUE;
		_SequenceMoveDirectAbsolute := 2;
		
	2: //
		IF _MC_MoveDirectAbsolute.Error THEN
			SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_MoveDirectAbsolute.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_MoveDirectAbsolute.ErrorID,
													SMC_Language_Type.english)))));
			_SequenceMoveDirectAbsolute := 3; // error step so we dont spam errors
			
		ELSIF _MC_MoveDirectAbsolute.Done THEN
			_MC_MoveDirectAbsolute.Execute := FALSE;
			_SequenceMoveDirectAbsolute := 0;
		END_IF
		
END_CASE

CASE _SequenceMoveDirectRelative OF
	0: //
	
	1: //
		_MC_MoveDirectRelative.Execute := TRUE;
		_SequenceMoveDirectRelative := 2;
		
	2: //
		IF _MC_MoveDirectRelative.Error THEN
			SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_MoveDirectRelative.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_MoveDirectRelative.ErrorID,
													SMC_Language_Type.english)))));
			_SequenceMoveDirectRelative := 3; // error step so we dont spam errors
			
		ELSIF _MC_MoveDirectRelative.Done THEN
			_MC_MoveDirectRelative.Execute := FALSE;
			_SequenceMoveDirectRelative := 0;
		END_IF
		
END_CASE

CASE _SequenceMoveLinearAbsolute OF
	0: //
	
	1: //
		_MC_MoveLinearAbsolute.Execute := TRUE;
		_SequenceMoveLinearAbsolute := 2;
		
	2: //
		IF _MC_MoveLinearAbsolute.Error THEN
			SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_MoveLinearAbsolute.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_MoveLinearAbsolute.ErrorID,
													SMC_Language_Type.english)))));
			_SequenceMoveLinearAbsolute := 3; // error step so we dont spam errors
			
		ELSIF _MC_MoveLinearAbsolute.Done THEN
			_MC_MoveLinearAbsolute.Execute := FALSE;
			_SequenceMoveLinearAbsolute := 0;
		END_IF
END_CASE

CASE _SequenceMoveLinearRelative OF
	0: //
	
	1: //
		_MC_MoveLinearRelative.Execute := TRUE;
		_SequenceMoveLinearRelative := 2;
		
	2: //
		IF _MC_MoveLinearRelative.Error THEN
		SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_MoveLinearRelative.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_MoveLinearRelative.ErrorID,
													SMC_Language_Type.english)))));
			_SequenceMoveLinearRelative := 3; // error step so we dont spam errors
			
		ELSIF _MC_MoveLinearRelative.Done THEN
			_MC_MoveLinearRelative.Execute := FALSE;
			_SequenceMoveLinearRelative := 0;
		END_IF
		
END_CASE

_MC_GroupHalt(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	Deceleration:= Acceleration, 
	Jerk:= Jerk, 
	AccFactor:= AccFactor, 
	JerkFactor:= JerkFactor, 
	TorqueFactor:= , 
	ClearMovements:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	CommandAccepted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	MovementId=&gt; );

// https://content.helpme-codesys.com/de/libs/SM3_Robotics/Current/SM3_Robotics/POUs/Movement/MC_MoveCircularAbsolute.html
// https://content.helpme-codesys.com/de/libs/SM3_Robotics/Current/SM3_Robotics/Basic-types/SMC_CIRC_MODE.html#smc-circ-mode
_MC_MoveCircularAbsolute(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	CircMode:= _MoveCommandParser.stCommand.CircleMode, 
	AuxPoint:= _PosRef, 
	EndPoint:= _PosRef2, 
	PathChoice:= _MoveCommandParser.stCommand.PathChoice, 
	Velocity:= Velocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Acceleration, 
	Jerk:= Jerk, 
	CoordSystem:= _MoveCommandParser.stCommand.CoordSystem, 
	BufferMode:= , 
	TransitionMode:= , 
	TransitionParameter:= , 
	OrientationMode:= , 
	VelFactor:= SEL(_MoveCommandParser.stCommand.Speed &gt; 100, _MoveCommandParser.stCommand.Speed / 100.0, 1), // cannot be greater than 1
	AccFactor:= SEL(AccFactor &gt; 1, AccFactor, 1), 
	JerkFactor:= SEL(JerkFactor &gt; 1, JerkFactor, 1), 
	TorqueFactor:= 1, 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	CommandAccepted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	MovementId=&gt; );

// https://content.helpme-codesys.com/en/libs/SM3_Robotics/Current/SM3_Robotics/POUs/Movement/MC_MoveCircularRelative.html
// https://content.helpme-codesys.com/de/libs/SM3_Robotics/Current/SM3_Robotics/Basic-types/SMC_CIRC_MODE.html#smc-circ-mode
_MC_MoveCircularRelative(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	CircMode:= _MoveCommandParser.stCommand.CircleMode, 
	AuxPoint:= _PosRef, 
	EndPoint:= _PosRef2, 
	PathChoice:= _MoveCommandParser.stCommand.PathChoice, 
	Velocity:= Velocity, 
	Acceleration:= Acceleration, 
	Deceleration:= Acceleration, 
	Jerk:= Jerk, 
	CoordSystem:= _MoveCommandParser.stCommand.CoordSystem, 
	BufferMode:= , 
	TransitionMode:= , 
	TransitionParameter:= , 
	OrientationMode:= , 
	VelFactor:= SEL(_MoveCommandParser.stCommand.Speed &gt; 100, _MoveCommandParser.stCommand.Speed / 100.0, 1), // cannot be greater than 1
	AccFactor:= SEL(AccFactor &gt; 1, AccFactor, 1), 
	JerkFactor:= SEL(JerkFactor &gt; 1, JerkFactor, 1), 
	TorqueFactor:= 1, 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	CommandAccepted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	MovementId=&gt; );
_MC_MoveDirectAbsolute(
	AxisGroup:=AxisGroup,
	Execute:= ,
	Position:= _PosRef,
	MovementType:= ,
	CoordSystem:= _MoveCommandParser.stCommand.CoordSystem,
	BufferMode:= ,
	TransitionMode:= ,
	TransitionParameter:= ,
	VelFactor:= SEL(_MoveCommandParser.stCommand.Speed &gt; 100, _MoveCommandParser.stCommand.Speed / 100.0, 1), // cannot be greater than 1
	AccFactor:= SEL(AccFactor &gt; 1, AccFactor, 1), 
	JerkFactor:= SEL(JerkFactor &gt; 1, JerkFactor, 1), 
	TorqueFactor:= 1,
	Done=&gt; ,
	Busy=&gt; ,
	Active=&gt; ,
	CommandAborted=&gt; ,
	CommandAccepted=&gt; ,
	Error=&gt; ,
	ErrorID=&gt; ,
	MovementId=&gt; );
_MC_MoveDirectRelative(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	Distance:= _PosRef, 
	MovementType:= , 
	CoordSystem:= _MoveCommandParser.stCommand.CoordSystem, 
	BufferMode:= , 
	TransitionMode:= , 
	TransitionParameter:= , 
	VelFactor:= SEL(_MoveCommandParser.stCommand.Speed &gt; 100, _MoveCommandParser.stCommand.Speed / 100.0, 1), // cannot be greater than 1
	AccFactor:= SEL(AccFactor &gt; 1, AccFactor, 1), 
	JerkFactor:= SEL(JerkFactor &gt; 1, JerkFactor, 1), 
	TorqueFactor:= 1, 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	CommandAccepted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	MovementId=&gt; );
	
_MC_MoveLinearAbsolute(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	Position:= _PosRef,
	Velocity:= 1000, 
	Acceleration:= Acceleration, 
	Deceleration:= Acceleration, 
	Jerk:= Jerk, 
	CoordSystem:= _MoveCommandParser.stCommand.CoordSystem, 
	BufferMode:= , 
	TransitionMode:= , 
	TransitionParameter:= , 
	OrientationMode:= , 
	VelFactor:= SEL(_MoveCommandParser.stCommand.Speed &gt; 100, _MoveCommandParser.stCommand.Speed / 100.0, 1), // cannot be greater than 1
	AccFactor:= SEL(AccFactor &gt; 1, AccFactor, 1), 
	JerkFactor:= SEL(JerkFactor &gt; 1, JerkFactor, 1), 
	TorqueFactor:= 1, 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	CommandAccepted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	MovementId=&gt; );
	
_MC_MoveLinearRelative(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	Distance:= _PosRef, 
	Velocity:= 1000, 
	Acceleration:= Acceleration, 
	Deceleration:= Acceleration, 
	Jerk:= Jerk, 
	CoordSystem:= _MoveCommandParser.stCommand.CoordSystem, 
	BufferMode:= , 
	TransitionMode:= , 
	TransitionParameter:= , 
	OrientationMode:= , 
	VelFactor:= SEL(_MoveCommandParser.stCommand.Speed &gt; 100, _MoveCommandParser.stCommand.Speed / 100.0, 1), // cannot be greater than 1
	AccFactor:= SEL(AccFactor &gt; 1, AccFactor, 1), 
	JerkFactor:= SEL(JerkFactor &gt; 1, JerkFactor, 1), 
	TorqueFactor:= 1, 
	Done=&gt; , 
	Busy=&gt; , 
	Active=&gt; , 
	CommandAborted=&gt; , 
	CommandAccepted=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	MovementId=&gt; );</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="ce3be291-42fd-4d66-9e0a-0e5bf023807b">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// I can consider this the "INIT" state
SUPER^._SeqMain := _STEP_COMMAND;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="95f46e6e-26ec-450c-948d-d902314a1d4d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqResetting OF
	0:
		GroupHandler.M_ResetGroup();
		_SeqResetting := _SeqResetting + 1;
	1:
		//IF NOT  THEN
			SUPER^.M_StateComplete();
			_SeqResetting := 0;
		//END_IF
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Idle" ObjectId="387dbba7-203a-4514-9198-3038b8e4b5dc">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// in this state, we want to reset all the function blocks and hang out

_MC_MoveCircularAbsolute.Execute := FALSE;
_MC_MoveCircularRelative.Execute := FALSE;
_MC_MoveDirectAbsolute.Execute := FALSE;
_MC_MoveDirectRelative.Execute := FALSE;
_MC_MoveLinearAbsolute.Execute := FALSE;
_MC_MoveLinearRelative.Execute := FALSE;
_SequenceMoveCircularAbsolute := 0;
_SequenceMoveCircularRelative := 0;
_SequenceMoveDirectAbsolute := 0;
_SequenceMoveDirectRelative := 0;
_SequenceMoveLinearAbsolute := 0;
_SequenceMoveLinearRelative := 0;
_SequenceSetCoordTrans := 0;
SUPER^._SeqMain := 0;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Holding" ObjectId="67eb5664-2a5b-4455-8b32-aeda1b99b743">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqHolding OF
	0:
		_MC_MoveCircularAbsolute.Execute := FALSE;
		_MC_MoveCircularRelative.Execute := FALSE;
		_MC_MoveDirectAbsolute.Execute := FALSE;
		_MC_MoveDirectRelative.Execute := FALSE;
		_MC_MoveLinearAbsolute.Execute := FALSE;
		_MC_MoveLinearRelative.Execute := FALSE;
		_MC_GroupHalt.Execute:=TRUE;
		_SeqHolding := _SeqHolding + 1;
	1:
		IF _MC_GroupHalt.Done THEN
			_MC_GroupHalt.Execute := FALSE;
			SUPER^.M_StateComplete();
			_SeqHolding := 0;
		END_IF
		
END_CASE

</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="a682ac1d-71f4-44e2-9664-b97db23d1386">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
IF SUPER^._SeqMain =_STEP_IDLE THEN
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Aborting" ObjectId="4e26ece5-3a6a-4b95-a5a2-0147c1e26a3d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqAborting OF
	0:
		GroupHandler.M_DisableGroup();
		_SeqAborting := _SeqAborting + 1;
	1:
		IF NOT GroupHandler.P_GroupEnabled THEN
			SUPER^.M_StateComplete();
			_SeqAborting := 0;
		END_IF
		
END_CASE
</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="5915b6b9-5c4b-4cff-a92a-a70dfd02e351">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnHolding" ObjectId="388ca3d8-559e-4364-ae71-180c399a068a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here the operator called unhold (most likely from M_Start)
_MC_GroupHalt.Execute := FALSE;
CASE _MoveCommandParser.stCommand.MoveType OF 
	DUT_Command_MoveType.DirectMove:
		IF _MoveCommandParser.stCommand.PositionType = DUT_Command_Positiontype.AbsolutePosition THEN
			_MC_MoveDirectAbsolute.Execute := TRUE;
		ELSE
			_MC_MoveDirectRelative.Execute := TRUE;
		END_IF
	DUT_Command_MoveType.LinearMove:
		IF _MoveCommandParser.stCommand.PositionType = DUT_Command_Positiontype.AbsolutePosition THEN
			_MC_MoveLinearAbsolute.Execute := TRUE;
		ELSE
			_MC_MoveLinearRelative.Execute := TRUE;
		END_IF
	DUT_Command_MoveType.CircularMove:
		IF _MoveCommandParser.stCommand.PositionType = DUT_Command_Positiontype.AbsolutePosition THEN
			_MC_MoveCircularAbsolute.Execute := TRUE;
		ELSE
			_MC_MoveCircularRelative.Execute := TRUE;
		END_IF
END_CASE
//
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="09bb9e0c-557b-4db9-8574-c3a1036b476e">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^._UnitMode(	sName := 'Move Processor',
				eInitialState := PACK_ML.State.Idle,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Clearing" ObjectId="2e7feb23-d083-4537-94b3-cdf41be2bdfa">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
_MC_MoveCircularAbsolute.Execute := FALSE;
_MC_MoveCircularRelative.Execute := FALSE;
_MC_MoveDirectAbsolute.Execute := FALSE;
_MC_MoveDirectRelative.Execute := FALSE;
_MC_MoveLinearAbsolute.Execute := FALSE;
_MC_MoveLinearRelative.Execute := FALSE;
_SequenceMoveCircularAbsolute := 0;
_SequenceMoveCircularRelative := 0;
_SequenceMoveDirectAbsolute := 0;
_SequenceMoveDirectRelative := 0;
_SequenceMoveLinearAbsolute := 0;
_SequenceMoveLinearRelative := 0;
_SequenceSetCoordTrans := 0;

SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8f4275d6-46b8-4b53-89d9-00cb2bff4683</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="VarSetCmdProcessor" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_COMMAND">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_VarSetCmdParser">
                      <type>
                        <derived name="ParseVarSetCmd" />
                      </type>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
CASE SUPER^._SeqMain OF
    _STEP_DONE:
		SUPER^._SeqMain := _STEP_IDLE;
        
    _STEP_IDLE:
		// hang out here until called to run
		
	_STEP_COMMAND:
        _VarSetCmdParser(Command:=Command);
		IF _VarSetCmdParser.Error THEN
			//
			SUPER^.M_Error(Description:=_VarSetCmdParser.ErrorDescription);
			// next, please
			SUPER^._SeqMain := _STEP_ERR;
			
		ELSE
			//
			IF _VarSetCmdParser.stCommand.ArrayType = DUT_Command_ArrayType.StoredPosition THEN
				SUPER^.StoredPositions[_VarSetCmdParser.stCommand.ArrayIndex].Position := _VarSetCmdParser.stCommand.Coordinates;
			ELSIF _VarSetCmdParser.stCommand.ArrayType = DUT_Command_ArrayType.VisionRegister THEN
				SUPER^.VisionRegisters[_VarSetCmdParser.stCommand.ArrayIndex].Position := _VarSetCmdParser.stCommand.Coordinates;
			ELSIF _VarSetCmdParser.stCommand.ArrayType = DUT_Command_ArrayType.Flag THEN
				// will just let the flag take on the value of X
				SUPER^.Flags[_VarSetCmdParser.stCommand.ArrayIndex].Value := LREAL_TO_BOOL(_VarSetCmdParser.stCommand.Coordinates.X);
			END_IF
			// next, please
			SUPER^._SeqMain := _STEP_DONE;
			
		END_IF

END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="68d991e6-dbe4-463a-80e0-5f3da08333d1">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^._UnitMode(	sName := 'VarSet Processor', 
				eInitialState := PACK_ML.State.Idle,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="130f8bcb-8a65-424f-bc15-3fc7e753edde">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="2949ddea-6613-413b-8ae7-28086e6ca171">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// I can consider this the "INIT" state
SUPER^._SeqMain := _STEP_COMMAND;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="f570903b-8d82-43ce-845d-3b6445cd6365">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
IF SUPER^._SeqMain =_STEP_IDLE THEN
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4e6d31f4-1f5e-495c-b2c6-1fabb531ce1d</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PauseCmdProcessor" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="ElapsedTime">
                      <type>
                        <TIME />
                      </type>
                    </variable>
                    <variable name="RemainingTime">
                      <type>
                        <TIME />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_Timer">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="_Timer_IN">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Timer_PT">
                      <type>
                        <TIME />
                      </type>
                    </variable>
                    <variable name="_Timer_Q">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Timer_ET">
                      <type>
                        <TIME />
                      </type>
                    </variable>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_ParsePauseCmd">
                      <type>
                        <derived name="ParsePauseCmd" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_COMMAND">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_TWO">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
CASE SUPER^._SeqMain OF
	
    _STEP_DONE:
 		_Timer_IN := FALSE;
		SUPER^._SeqMain := _STEP_IDLE;
        
    _STEP_IDLE:
		// hang out here until called to run
        
    _STEP_COMMAND:
		_ParsePauseCmd(Command:=Command);
		_Timer_PT := _ParsePauseCmd.stCommand.PauseTime;
 		_Timer_IN := TRUE;
		// next, please
		SUPER^._SeqMain := _STEP_TWO;
		
	_STEP_TWO:
		IF _Timer.Q THEN
			// next, please
			SUPER^._SeqMain := _STEP_DONE;
		END_IF

END_CASE

_Timer(
	IN:= _Timer_IN, 
	PT:= _Timer_PT, 
	Q=&gt; _Timer_Q, 
	ET=&gt; _Timer_ET);
	
ElapsedTime := _Timer_ET;
RemainingTime := _Timer_PT - _Timer_ET;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="6e516751-a0ab-433e-9a68-8b911bf9a0fe">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^._UnitMode(	sName := 'Pause Processor',
				eInitialState := PACK_ML.State.Idle,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="2e5db4a5-a489-4506-8ef9-c0b206420609">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="25f52b0f-f9c8-4c07-856d-4168885b692d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqResetting OF
	0:
		_Timer_IN := FALSE;
		_SeqResetting := _SeqResetting + 1;
	1:
		IF NOT _Timer_IN THEN
			SUPER^.M_StateComplete();
			_SeqResetting := 0;
		END_IF
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="3817a097-cfb2-4856-abd1-75f36cc5363a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
IF SUPER^._SeqMain =_STEP_IDLE THEN
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="c161e731-b469-46d9-a74c-2490c081ccd5">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// I can consider this the "INIT" state
SUPER^._SeqMain := _STEP_COMMAND;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>761241d9-a41a-4641-86b9-9b083b6be68b</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="OutputCmdProcessor" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="Digital">
                      <type>
                        <array>
                          <dimension lower="GVL.DIG_OUT_ARR_BEG" upper="GVL.DIG_OUT_ARR_END" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="Pwm">
                      <type>
                        <array>
                          <dimension lower="GVL.PWM_OUT_ARR_BEG" upper="GVL.PWM_OUT_ARR_END" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </inOutVars>
                  <localVars>
                    <variable name="_RunRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_SequenceDigital">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequencePwm">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_OutputCommandParser">
                      <type>
                        <derived name="ParseOutputCmd" />
                      </type>
                    </variable>
                    <variable name="_OutputType">
                      <type>
                        <derived name="DUT_OutputType" />
                      </type>
                    </variable>
                    <variable name="_OutputTarget">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_OutputValue1">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_COMMAND">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_TWO">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
CASE SUPER^._SeqMain OF
	
    _STEP_DONE:
		SUPER^._SeqMain := _STEP_IDLE;
        
    _STEP_IDLE:
        // hang out here untill called to run
		
    _STEP_COMMAND:
		_OutputCommandParser(Command:=Command);
		IF _OutputCommandParser.Error THEN
			SUPER^.M_Error(Description:=_OutputCommandParser.ErrorDescription);
			SUPER^._SeqMain := _STEP_ERR;
		ELSE
			_OutputType := _OutputCommandParser.stCommand.OutputType;
			_OutputTarget := _OutputCommandParser.stCommand.OutputTarget;
			_OutputValue1 := _OutputCommandParser.stCommand.OutputValue1;
			
			CASE _OutputType OF
				DUT_OutputType.Digital: //
					_SequenceDigital := 1;
					SUPER^._SeqMain := _STEP_TWO;
				DUT_OutputType.Pwm: //
					_SequencePwm := 1;
					SUPER^._SeqMain := _STEP_TWO;
			ELSE
				SUPER^._SeqMain := _STEP_DONE;
				
			END_CASE
		END_IF
		
	_STEP_TWO:
		IF _SequenceDigital = 0 
			AND _SequencePwm = 0 THEN
				// next, please
				SUPER^._SeqMain := _STEP_DONE;
		END_IF;

END_CASE

CASE _SequenceDigital OF
	0: //
	1: //
		THIS^.Digital[_OutputTarget] := _OutputValue1 &gt; 0;
		_SequenceDigital := 0;
END_CASE

CASE _SequencePwm OF
	0: //
	1: //
		THIS^.Pwm[_OutputTarget] := LREAL_TO_BYTE(_OutputValue1);
		_SequencePwm := 0;
	
END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="fed562a2-eddf-4e93-afb0-ae3624ddf3de">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^._UnitMode(	sName := 'Output Processor',
				eInitialState := PACK_ML.State.Idle,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="83e31000-e404-406b-a9f0-af2b8e43e2b9">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqResetting OF
	0:
		_SeqResetting := _SeqResetting + 1;
	1:
		SUPER^.M_StateComplete();
		_SeqResetting := 0;
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="1d97f92f-5146-4d3a-b260-50bb7a3971f7">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
IF SUPER^._SeqMain =_STEP_IDLE THEN
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="88023030-83e7-4c3a-848e-230ca2d5e812">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// I can consider this the "INIT" state
SUPER^._SeqMain := _STEP_COMMAND;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Holding" ObjectId="6bd03b4f-d8eb-4211-abab-f0512818ab61">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqHolding OF
	0:
		SUPER^._SeqHolding := SUPER^._SeqHolding + 1;
	1:
		SUPER^.M_StateComplete();
		SUPER^._SeqHolding := 0;
		
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Idle" ObjectId="f42bff08-3d3c-4f17-bbd4-541074d9df17">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_SequenceDigital := 0;
_SequencePwm := 0;
SUPER^._SeqMain := 0;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnHolding" ObjectId="10531d76-a1e4-42ba-a26f-88c13c76bd1e">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
//
SUPER^._SeqMain := _STEP_COMMAND;

//
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Aborting" ObjectId="fc1f966e-206a-402e-8b05-6358a2c60ff4">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqAborting OF
	0:
		SUPER^._SeqAborting := SUPER^._SeqAborting + 1;
	1:
		SUPER^.M_StateComplete();
		SUPER^._SeqAborting := 0;
		
END_CASE
</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Clearing" ObjectId="368dc781-45d7-4e24-9a5e-8a9a04872ec6">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_SequenceDigital := 0;
_SequencePwm := 0;

SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="843305da-b984-4520-8555-133899b9f165">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6372490f-9396-4f98-b458-51631931ad07</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PackML" pouType="functionBlock">
                <interface>
                  <outputVars>
                    <variable name="IUnitMode">
                      <type>
                        <derived name="PACK_ML.IUnitMode" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="instance_path">
                      <type>
                        <string length="255" />
                      </type>
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                          <Attributes>
                            <Attribute Name="instance-path" Value="" />
                            <Attribute Name="noinit" />
                          </Attributes>
                        </data>
                      </addData>
                    </variable>
                    <variable name="_UnitMode">
                      <type>
                        <derived name="PACK_ML.UnitMode" />
                      </type>
                    </variable>
                    <variable name="_StateTimer">
                      <type>
                        <derived name="TON" />
                      </type>
                    </variable>
                    <variable name="_PackMLFirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="_SeqMain">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqAborting">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqClearing">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqCompleting">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqHolding">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqResetting">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqStarting">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqStopping">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqSuspending">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqUnholding">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqUnSuspending">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="STATE_TIME">
                      <type>
                        <TIME />
                      </type>
                      <initialValue>
                        <simpleValue value="TIME#0ms" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                      <Attributes>
                        <Attribute Name="reflection" Value="" />
                      </Attributes>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//
IF _PackMLFirstScan THEN
	_PackMLFirstScan := FALSE;
	M_SetPackMl();
	IUnitMode := _UnitMode;
END_IF

//
_StateTimer(PT:=STATE_TIME);

//
CASE _UnitMode.CurrentState OF
	PACK_ML.State.Stopped:
		M_Stopped();
	PACK_ML.State.Aborted:
		M_Aborted();
	PACK_ML.State.Held:
		M_Held();
	PACK_ML.State.Suspended:
		M_Suspended();
	PACK_ML.State.Complete:
		M_Complete();
	PACK_ML.State.Idle:
		M_Idle();
	PACK_ML.State.Resetting:
		M_Resetting();
	PACK_ML.State.Starting:
		M_Starting();
	PACK_ML.State.Execute:
		M_Execute();
	PACK_ML.State.Suspending:
		M_Suspending();
	PACK_ML.State.UnSuspending:
		M_UnSuspending();
	PACK_ML.State.Holding:
		M_Holding();
	PACK_ML.State.UnHolding:
		M_UnHolding();
	PACK_ML.State.Completing:
		M_Completing();
	PACK_ML.State.Aborting:
		M_Aborting();
	PACK_ML.State.Stopping:
		M_Stopping();
	PACK_ML.State.Clearing:
		M_Clearing();
END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Aborting" ObjectId="4ccdaadd-4d64-4496-9a92-f9d54027b3e6">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Unholding" ObjectId="dd9db8d0-121c-491d-90d0-c48a6d1a9c8c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Aborted" ObjectId="1e7d8b79-5c9e-4f82-bbe2-4b62642b61c9">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_SeqMain := 0;
_SeqAborting := 0;
_SeqClearing := 0;
_SeqCompleting := 0;
_SeqHolding := 0;
_SeqResetting := 0;
_SeqStarting := 0;
_SeqStopping := 0;
_SeqSuspending := 0;
_SeqUnholding := 0;
_SeqUnSuspending := 0;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Held" ObjectId="e494ada4-57c2-4376-ac70-cda2694b60af">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">(*_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Completing" ObjectId="cdb4b4d5-ad61-48d7-8221-bee63d28f73e">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Stopping" ObjectId="2a358bb2-c1f6-4a20-a8a4-b1f9186be16b">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Clearing" ObjectId="d14434d0-0c21-4aeb-9ac0-ef015f60a253">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Stopped" ObjectId="9d740f8a-4f3e-49bb-91d2-33529475924d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">(*_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="39ef47a6-266e-47c8-9b77-da56debc7f4c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_UnitMode(sName := 'Normal Operation', 
			dwSupportedStates := PACK_ML.State.All,
			dwAllowsLeavingFromStates := PACK_ML.State.Stopped 
											OR PACK_ML.State.Aborted 
											OR PACK_ML.State.Idle, 
			dwAllowsEnteringIntoStates := PACK_ML.State.Stopped
											OR PACK_ML.State.Aborted 
											OR PACK_ML.State.Idle, 
			eInitialState := PACK_ML.State.Idle,
			xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="a8d6ce7e-80d8-47c9-bc1d-450f6d3deda6">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">(*_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="265b97c8-7d33-479a-a049-5413df07bbc0">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Suspended" ObjectId="612d50dc-ee92-4ff0-ae48-fb8d6eb3faaa">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">(*_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_StateComplete" ObjectId="92d33e74-f074-4855-bfb9-ab287dcecae4">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_UnitMode.ActingStateCompleted();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Suspending" ObjectId="257ce55a-16e1-49a8-a988-70ddadfd556f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Idle" ObjectId="f7cfba5a-2f6d-4bb5-a7c7-24bbbea33671">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">(*_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="a57fa019-c6bc-4a1b-8d70-a7fd715b2a98">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="6b6aa070-27a5-40ba-b87d-289ef11ff0ed">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnSuspending" ObjectId="92d160d6-e55f-49b6-aa9a-db1194f2c385">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Holding" ObjectId="d0d2c3a0-c22e-4c6e-a69f-299695504931">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_StateTimer.IN:=TRUE;

IF _StateTimer.Q THEN
	_StateTimer.IN:=FALSE;
	M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6c88eb42-407a-40dd-8e49-bce1d691f0b2</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="CncCmdProcessor" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="GapVelocity">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="AvoidGaps">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                    <variable name="GapAccel">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="500.0" />
                      </initialValue>
                    </variable>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <inOutVars>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J1">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J2">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J3">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J4">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J5">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                    <variable name="SM3_Drive_PosControl_J6">
                      <type>
                        <derived name="SM3_Drive_PosControl.AXIS_REF_POSCONTROL" />
                      </type>
                    </variable>
                  </inOutVars>
                  <localVars>
                    <variable name="_SMC_TrafoConfig_ArticulatedRobot_6DOF">
                      <type>
                        <derived name="SMC_TrafoConfig_ArticulatedRobot_6DOF" />
                      </type>
                    </variable>
                    <variable name="_SMC_Trafo_ArticulatedRobot_6DOF">
                      <type>
                        <derived name="SMC_Trafo_ArticulatedRobot_6DOF" />
                      </type>
                    </variable>
                    <variable name="_SMC_Trafof_ArticulatedRobot_6DOF">
                      <type>
                        <derived name="SMC_Trafof_ArticulatedRobot_6DOF" />
                      </type>
                    </variable>
                    <variable name="_SMC_ControlAxisByPos_J1">
                      <type>
                        <derived name="SMC_ControlAxisByPos" />
                      </type>
                    </variable>
                    <variable name="_SMC_ControlAxisByPos_J2">
                      <type>
                        <derived name="SMC_ControlAxisByPos" />
                      </type>
                    </variable>
                    <variable name="_SMC_ControlAxisByPos_J3">
                      <type>
                        <derived name="SMC_ControlAxisByPos" />
                      </type>
                    </variable>
                    <variable name="_SMC_ControlAxisByPos_J4">
                      <type>
                        <derived name="SMC_ControlAxisByPos" />
                      </type>
                    </variable>
                    <variable name="_SMC_ControlAxisByPos_J5">
                      <type>
                        <derived name="SMC_ControlAxisByPos" />
                      </type>
                    </variable>
                    <variable name="_SMC_ControlAxisByPos_J6">
                      <type>
                        <derived name="SMC_ControlAxisByPos" />
                      </type>
                    </variable>
                    <variable name="_SMC_Interpolator">
                      <type>
                        <derived name="SMC_Interpolator" />
                      </type>
                    </variable>
                    <variable name="_PlanPath">
                      <type>
                        <derived name="CncPathPlanner" />
                      </type>
                    </variable>
                    <variable name="_ErrorRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="wVarCount">
                      <type>
                        <WORD />
                      </type>
                      <initialValue>
                        <simpleValue value="1" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars>
                    <variable name="lrR1">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="astVar">
                      <type>
                        <array>
                          <dimension lower="0" upper="wVarCount" />
                          <baseType>
                            <derived name="SMC_SingleVar" />
                          </baseType>
                        </array>
                      </type>
                      <initialValue>
                        <arrayValue>
                          <value>
                            <structValue>
                              <value member="strVarName">
                                <simpleValue value="'R1'" />
                              </value>
                              <value member="pAdr">
                                <simpleValue value="ADR(lrR1)" />
                              </value>
                              <value member="eVarType">
                                <simpleValue value="SMC_VarType.SMC_TYPE_LREAL" />
                              </value>
                            </structValue>
                          </value>
                        </arrayValue>
                      </initialValue>
                    </variable>
                    <variable name="stVarList">
                      <type>
                        <derived name="SMC_VarList" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="wNumberVars">
                            <simpleValue value="wVarCount" />
                          </value>
                          <value member="psvVarlist">
                            <simpleValue value="ADR(astVar)" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_COMMAND">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_CncCmdParser">
                      <type>
                        <derived name="ParseCncCmd" />
                      </type>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// NOTE currently the settings for J6 invert direction under scaling/mapping contradict using motion control 
// libraries and CNC. For CNC to work properly, the setting is required to be enabled (inverted). Additionally
// the homing direction and position will need to be negated. This all requires a full download. Will be leaving 
// setting disabled for now so that we can continue to use motion control. 
//
// to recap, take these steps if you would like to try out CNC:
// 1. open the axis pool settings and under the scaling/mapping section enable 'invert direction'
// 2. in the A_Homing POU, change the homing direction to positive.
// 3. in _00_MAIN POU, under FirstScan set the initial home offset to a positive value (keep the value and just change the sign).
// 4. do a full download.
// 5. go online and set the persistent value (if previously initialized in FirstScan) to a positive value.
//
// UPDATE: Figured out a work around for this issue. In the A_Interpolater POU, I negated the set position in the ControlAxisByPos
// function block for J6 such that it drives the opposite way. This appears to have resolved the issue. Why this is needed, I do not
// know. I am sure it is some minor overlooked detail somewhere in the code...

SUPER^();

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
CASE SUPER^._SeqMain OF
    _STEP_DONE:
		_SMC_Interpolator.bExecute := FALSE;
		SUPER^._SeqMain := _STEP_IDLE;
        
    _STEP_IDLE:
		// hang out here until called to start
	
	_STEP_COMMAND:
		//
		_CncCmdParser(Command:=Command);	
		_PlanPath.M_SetOriConvention(OriConvention:=_CncCmdParser.stCommand.OriConvention);
		_PlanPath.M_SetStartPosition(StartPos:=_CncCmdParser.stCommand.StartPos);
		_PlanPath.M_Execute(Filename:=_CncCmdParser.stCommand.Filename); // TODO I think we should be careful here. May need to sync CheckVelocities with the Interpolator
		
		//
		IF NOT _CncCmdParser.Error THEN
			_SMC_Interpolator.bExecute := TRUE;
			SUPER^._SeqMain := _STEP_ONE;
		ELSE
			SUPER^.M_Error(Description:=CONCAT('Command parsing error: ',_CncCmdParser.ErrorDescription));
		END_IF
        
    _STEP_ONE:
		IF NOT _SMC_Interpolator.bBusy AND NOT SUPER^.Error THEN
			// next, please
			SUPER^._SeqMain := _STEP_DONE;
		END_IF

END_CASE

// TODO these should reference INOUT AxisGroup but somehow wont compile like that. 
// using global scoped vars for now
_SMC_TrafoConfig_ArticulatedRobot_6DOF.a1:=ArfBotAxisGroup.Trafo.a1;//AxisGroup.Trafo.a1;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.a2:=ArfBotAxisGroup.Trafo.a2;//AxisGroup.Trafo.a2;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.a3:=ArfBotAxisGroup.Trafo.a3;//AxisGroup.Trafo.a3;
// conflicting documentation on if d1 needs to be pos or neg. only works as negative otherwise trafo reports invalid configuration
// https://product-help.schneider-electric.com/Machine%20Expert/V2.0/zh/codesys_softmotion/codesys_softmotion/modules/_sm_trafo_pou_six_dof_robot.html
// https://forge.codesys.com/forge/talk/Motion/thread/16e1f0327f/
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d1:=-ArfBotAxisGroup.Trafo.d1;//-AxisGroup.Trafo.d1;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d3:=ArfBotAxisGroup.Trafo.d3;//AxisGroup.Trafo.d3;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d4:=ArfBotAxisGroup.Trafo.d4;//AxisGroup.Trafo.d4;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.d6:=ArfBotAxisGroup.Trafo.d6;//AxisGroup.Trafo.d6;
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q3_max_deg:=160; // TODO put magic numbers somewhere appropriate
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q3_min_deg:=-160; // TODO put magic numbers somewhere appropriate
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q5_max_deg:=160; // TODO put magic numbers somewhere appropriate
_SMC_TrafoConfig_ArticulatedRobot_6DOF.q5_min_deg:=-160; // TODO put magic numbers somewhere appropriate


// TODO figure out how this var list can be used. for now its just hello world
_PlanPath(VarList:= stVarList, DataOut=&gt; );

_SMC_Interpolator.bEmergency_Stop := _SMC_ControlAxisByPos_J1.bError OR _SMC_ControlAxisByPos_J1.bStopIpo
									OR _SMC_ControlAxisByPos_J2.bError OR _SMC_ControlAxisByPos_J2.bStopIpo
									OR _SMC_ControlAxisByPos_J3.bError OR _SMC_ControlAxisByPos_J3.bStopIpo
									OR _SMC_ControlAxisByPos_J4.bError OR _SMC_ControlAxisByPos_J4.bStopIpo
									OR _SMC_ControlAxisByPos_J5.bError OR _SMC_ControlAxisByPos_J5.bStopIpo
									OR _SMC_ControlAxisByPos_J6.bError OR _SMC_ControlAxisByPos_J6.bStopIpo;

_SMC_Interpolator(
	bExecute:= , 
	poqDataIn:= _PlanPath.DataOut, 
	bSlow_Stop:= , 
	bEmergency_Stop:= , 
	bWaitAtNextStop:= , 
	dOverride:= , 
	iVelMode:= , 
	dwIpoTime:= GVL.dwMainInterval, // in microseconds and should match the task time
	dLastWayPos:= , 
	bAbort:= NOT _SMC_Interpolator.bExecute, 
	bSingleStep:= , 
	bAcknM:= , 
	bQuick_Stop:= , 
	dQuickDeceleration:= , 
	dJerkMax:= , 
	dQuickStopJerk:= , 
	bSuppressSystemMFunctions:= , 
	bDone=&gt; , 
	bBusy=&gt; , 
	bError=&gt; , 
	wErrorID=&gt; , 
	piSetPosition=&gt; , 
	iStatus=&gt; , 
	bWorking=&gt; , 
	iActObjectSourceNo=&gt; , 
	dActObjectLength=&gt; , 
	dActObjectLengthRemaining=&gt; , 
	dVel=&gt; , 
	vecActTangent=&gt; , 
	iLastSwitch=&gt; , 
	dwSwitches=&gt; , 
	dWayPos=&gt; , 
	wM=&gt; , 
	adToolLength=&gt; , 
	Act_Object=&gt; );

// handle m codes
CASE _SMC_Interpolator.wM OF
	0:	// rest acknowledgment
		_SMC_Interpolator.bAcknM := FALSE;
	200: // close gripper
		_SMC_Interpolator.bAcknM := TRUE;
		GVL.Servo0Position := 0; // TODO
	201: // open gripper
		_SMC_Interpolator.bAcknM := TRUE;
		GVL.Servo0Position := 255; // TODO
END_CASE

_SMC_Trafo_ArticulatedRobot_6DOF(
	config:= _SMC_TrafoConfig_ArticulatedRobot_6DOF, 
	pi:= _SMC_Interpolator.piSetPosition, 
	dQ0_old:= SM_Drive_PosControl_J1.fActPosition, 
	dQ1_old:= SM_Drive_PosControl_J2.fActPosition, 
	dQ2_old:= SM_Drive_PosControl_J3.fActPosition, 
	dQ3_old:= SM_Drive_PosControl_J4.fActPosition, 
	dQ4_old:= SM_Drive_PosControl_J5.fActPosition, 
	dQ5_old:= SM_Drive_PosControl_J6.fActPosition, 
	armState:= , 
	elbowState:= , 
	handState:= , 
	dQ0=&gt; , 
	dQ1=&gt; , 
	dQ2=&gt; , 
	dQ3=&gt; , 
	dQ4=&gt; , 
	dQ5=&gt; , 
	bError=&gt; , 
	result=&gt; );
	
_SMC_ControlAxisByPos_J1(
	Axis:= SM3_Drive_PosControl_J1, 
	iStatus:= _SMC_Interpolator.iStatus, 
	bEnable:= _SMC_Interpolator.bWorking, 
	bAvoidGaps:= AvoidGaps, 
	fSetPosition:= _SMC_Trafo_ArticulatedRobot_6DOF.dQ0, 
	fGapVelocity:= GapVelocity, 
	fGapAcceleration:= GapAccel, 
	fGapDeceleration:= GapAccel, 
	fGapJerk:= , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	iErrorID=&gt; , 
	bStopIpo=&gt; );
	
_SMC_ControlAxisByPos_J2(
	Axis:= SM3_Drive_PosControl_J2, 
	iStatus:= _SMC_Interpolator.iStatus, 
	bEnable:= _SMC_Interpolator.bWorking, 
	bAvoidGaps:= AvoidGaps, 
	fSetPosition:= _SMC_Trafo_ArticulatedRobot_6DOF.dQ1, 
	fGapVelocity:= GapVelocity, 
	fGapAcceleration:= GapAccel, 
	fGapDeceleration:= GapAccel, 
	fGapJerk:= , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	iErrorID=&gt; , 
	bStopIpo=&gt; );
	
_SMC_ControlAxisByPos_J3(
	Axis:= SM3_Drive_PosControl_J3, 
	iStatus:= _SMC_Interpolator.iStatus, 
	bEnable:= _SMC_Interpolator.bWorking, 
	bAvoidGaps:= AvoidGaps, 
	fSetPosition:= _SMC_Trafo_ArticulatedRobot_6DOF.dQ2, 
	fGapVelocity:= GapVelocity, 
	fGapAcceleration:= GapAccel, 
	fGapDeceleration:= GapAccel, 
	fGapJerk:= , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	iErrorID=&gt; , 
	bStopIpo=&gt; );
	
_SMC_ControlAxisByPos_J4(
	Axis:= SM3_Drive_PosControl_J4, 
	iStatus:= _SMC_Interpolator.iStatus, 
	bEnable:= _SMC_Interpolator.bWorking, 
	bAvoidGaps:= AvoidGaps, 
	fSetPosition:= _SMC_Trafo_ArticulatedRobot_6DOF.dQ3, 
	fGapVelocity:= GapVelocity, 
	fGapAcceleration:= GapAccel, 
	fGapDeceleration:= GapAccel, 
	fGapJerk:= , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	iErrorID=&gt; , 
	bStopIpo=&gt; );
	
_SMC_ControlAxisByPos_J5(
	Axis:= SM3_Drive_PosControl_J5, 
	iStatus:= _SMC_Interpolator.iStatus, 
	bEnable:= _SMC_Interpolator.bWorking, 
	bAvoidGaps:= AvoidGaps, 
	fSetPosition:= _SMC_Trafo_ArticulatedRobot_6DOF.dQ4, 
	fGapVelocity:= GapVelocity, 
	fGapAcceleration:= GapAccel, 
	fGapDeceleration:= GapAccel, 
	fGapJerk:= , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	iErrorID=&gt; , 
	bStopIpo=&gt; );
	
_SMC_ControlAxisByPos_J6(
	Axis:= SM3_Drive_PosControl_J6, 
	iStatus:= _SMC_Interpolator.iStatus, 
	bEnable:= _SMC_Interpolator.bWorking, 
	bAvoidGaps:= AvoidGaps, 
	fSetPosition:= -_SMC_Trafo_ArticulatedRobot_6DOF.dQ5, // please see note in A_CNC POU regarding why this was set to negative
	fGapVelocity:= GapVelocity, 
	fGapAcceleration:= GapAccel, 
	fGapDeceleration:= GapAccel, 
	fGapJerk:= , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	iErrorID=&gt; , 
	bStopIpo=&gt; );
	
_ErrorRtrig();
_ErrorRtrig.CLK := _PlanPath.Error
					OR _SMC_Interpolator.bError
					OR _SMC_Trafo_ArticulatedRobot_6DOF.bError
					OR _SMC_ControlAxisByPos_J1.bError
					OR _SMC_ControlAxisByPos_J2.bError
					OR _SMC_ControlAxisByPos_J3.bError
					OR _SMC_ControlAxisByPos_J4.bError
					OR _SMC_ControlAxisByPos_J5.bError
					OR _SMC_ControlAxisByPos_J6.bError;
IF _ErrorRtrig.Q THEN
	IF _PlanPath.Error THEN
		SUPER^.M_Error(Description:=_PlanPath.ErrorDescription);
	END_IF
	IF _SMC_Interpolator.bError THEN
		SUPER^.M_Error(Description := CONCAT(' Interpolator Error: ',
                                CONCAT(TO_STRING(_SMC_Interpolator.wErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_Interpolator.wErrorID,
                                            SMC_Language_Type.english)))));
	END_IF
	IF _SMC_Trafo_ArticulatedRobot_6DOF.bError THEN
		SUPER^.M_Error(Description := CONCAT(' Trafo Error: ', 'unknown'));
	END_IF
	IF _SMC_ControlAxisByPos_J1.bError THEN
		SUPER^.M_Error(Description := CONCAT(' ControlAxisByPos_J1 Error: ',
                                CONCAT(TO_STRING(_SMC_ControlAxisByPos_J1.iErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_ControlAxisByPos_J1.iErrorID,
                                            SMC_Language_Type.english)))));
	END_IF
	IF _SMC_ControlAxisByPos_J2.bError THEN
		SUPER^.M_Error(Description := CONCAT(' ControlAxisByPos_J2 Error: ',
                                CONCAT(TO_STRING(_SMC_ControlAxisByPos_J2.iErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_ControlAxisByPos_J2.iErrorID,
                                            SMC_Language_Type.english)))));
	END_IF
	IF _SMC_ControlAxisByPos_J3.bError THEN
		SUPER^.M_Error(Description := CONCAT(' ControlAxisByPos_J3 Error: ',
                                CONCAT(TO_STRING(_SMC_ControlAxisByPos_J3.iErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_ControlAxisByPos_J3.iErrorID,
                                            SMC_Language_Type.english)))));
	END_IF
	IF _SMC_ControlAxisByPos_J4.bError THEN
		SUPER^.M_Error(Description := CONCAT(' ControlAxisByPos_J4 Error: ',
                                CONCAT(TO_STRING(_SMC_ControlAxisByPos_J4.iErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_ControlAxisByPos_J4.iErrorID,
                                            SMC_Language_Type.english)))));
	END_IF
	IF _SMC_ControlAxisByPos_J5.bError THEN
		SUPER^.M_Error(Description := CONCAT(' ControlAxisByPos_J5 Error: ',
                                CONCAT(TO_STRING(_SMC_ControlAxisByPos_J5.iErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_ControlAxisByPos_J5.iErrorID,
                                            SMC_Language_Type.english)))));
	END_IF
	IF _SMC_ControlAxisByPos_J6.bError THEN
		SUPER^.M_Error(Description := CONCAT(' ControlAxisByPos_J6 Error: ',
                                CONCAT(TO_STRING(_SMC_ControlAxisByPos_J6.iErrorID),
                                CONCAT(' ', SMC_ErrorString(_SMC_ControlAxisByPos_J6.iErrorID,
                                            SMC_Language_Type.english)))));
	END_IF
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="7c793665-23c8-4063-a654-5011975c105b">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^._UnitMode(	sName := 'CNC Processor',
				eInitialState := PACK_ML.State.Idle,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="0b336f4b-391c-459f-a28e-2f4ba2e8bba2">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="882518ea-bbf9-4ac5-86b5-eca49a6b2287">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
IF SUPER^._SeqMain =_STEP_IDLE THEN
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="3a2ecf7b-c9fd-4771-acb0-40bfe0e5c659">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// I can consider this the "INIT" state
SUPER^._SeqMain := _STEP_COMMAND;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="dd49c510-b353-40d1-99d1-226a7e98ba4c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE SUPER^._SeqResetting OF
	0:
		_PlanPath.M_Reset();
		_SeqResetting := _SeqResetting + 1;
	1:
		IF NOT _PlanPath.Error THEN
			SUPER^.M_StateComplete();
			_SeqResetting := 0;
		END_IF
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Holding" ObjectId="1442df85-b316-4422-acf3-2f8fc74d80e1">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqHolding OF
	0:
		_SMC_Interpolator.bWaitAtNextStop := TRUE;
		SUPER^._SeqHolding := SUPER^._SeqHolding + 1;
	1:
		// TODO dale thomas this is not tested
		IF NOT _SMC_Interpolator.bWorking THEN
			SUPER^._SeqHolding := 0;
			SUPER^.M_StateComplete();
		END_IF
		
END_CASE

</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnHolding" ObjectId="1070643e-06f2-476a-8286-a7b05c60fa83">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqUnHolding OF
	0:
		_SMC_Interpolator.bWaitAtNextStop := FALSE;
		SUPER^._SeqUnHolding := SUPER^._SeqUnHolding + 1;
	1:
		// TODO dale thomas this is not tested
		IF _SMC_Interpolator.bWorking THEN
			SUPER^._SeqUnHolding := 0;
			SUPER^.M_StateComplete();
		END_IF
		
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Idle" ObjectId="c93ab278-2b3f-4bc7-a2ff-fccaf401c8a8">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_SMC_Interpolator.bWaitAtNextStop := FALSE;
_SMC_Interpolator.bExecute := FALSE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>09e229dd-dea4-4418-8521-de497c93f5dc</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ParseCncCmd" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_CncCmd" />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CmdParams">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL.COMMAND_LEN" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_AddString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ADD'" />
                      </initialValue>
                    </variable>
                    <variable name="_XYZString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'XYZ'" />
                      </initialValue>
                    </variable>
                    <variable name="_ZYXString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ZYX'" />
                      </initialValue>
                    </variable>
                    <variable name="_ZYZString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ZYZ'" />
                      </initialValue>
                    </variable>
                    <variable name="_LiteralString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LIT'" />
                      </initialValue>
                    </variable>
                    <variable name="_VariableString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VAR'" />
                      </initialValue>
                    </variable>
                    <variable name="_StoredPositionsString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'STO'" />
                      </initialValue>
                    </variable>
                    <variable name="_VisionRegistersString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VIS'" />
                      </initialValue>
                    </variable>
                    <variable name="_FlagsString">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'FLG'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// /path/to/file/with/no/spaces/file.cnc ADD|XYX|ZYX|ZYZ startpos
// file1.cnc XYZ H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00
// file2.cnc ADD A S 025
// file3.cnc ADD A V 015

Error := FALSE;
ErrorDescription:='';

// split command string into commands
_CmdParams:=F_SplitCmd(Command:=Command);

//
IF _CmdParams[0] &lt;&gt; '' THEN
	//
	stCommand.Filename:=_CmdParams[0];
	
	//
	IF _CmdParams[1] = _AddString THEN
		stCommand.OriConvention := SMC_ORI_CONVENTION.ADDAXES;
	ELSIF _CmdParams[1] = _XYZString THEN
		stCommand.OriConvention := SMC_ORI_CONVENTION.XYZ;
	ELSIF _CmdParams[1] = _ZYXString THEN
		stCommand.OriConvention := SMC_ORI_CONVENTION.ZYX;
	ELSIF _CmdParams[1] = _ZYZString THEN
		stCommand.OriConvention := SMC_ORI_CONVENTION.ZYZ;
	ELSE
		Error := TRUE;
		ErrorDescription:='No ori convention provided';
	END_IF
	
	//
	IF _CmdParams[2] = _LiteralString THEN
		// file1.cnc XYZ H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00
		stCommand.StartPos.dX:=STRING_TO_LREAL(_CmdParams[3]);
		stCommand.StartPos.dY:=STRING_TO_LREAL(_CmdParams[4]);
		stCommand.StartPos.dZ:=STRING_TO_LREAL(_CmdParams[5]);
		stCommand.StartPos.dA:=STRING_TO_LREAL(_CmdParams[6]);
		stCommand.StartPos.dB:=STRING_TO_LREAL(_CmdParams[7]);
		stCommand.StartPos.dC:=STRING_TO_LREAL(_CmdParams[8]);
	ELSIF _CmdParams[2] = _VariableString THEN
		// file2.cnc ADD V S 025
		IF _CmdParams[3] = _StoredPositionsString THEN
			//_ArrayType:=DUT_Command_ArrayType.StoredPosition;
			stCommand.StartPos.dX:=PersistentVars.StoredPositions[STRING_TO_INT(_CmdParams[4])].Position.X; // TODO try to remove this reference to global vars
			stCommand.StartPos.dY:=PersistentVars.StoredPositions[STRING_TO_INT(_CmdParams[4])].Position.Y;
			stCommand.StartPos.dZ:=PersistentVars.StoredPositions[STRING_TO_INT(_CmdParams[4])].Position.Z;
			stCommand.StartPos.dA:=PersistentVars.StoredPositions[STRING_TO_INT(_CmdParams[4])].Position.A;
			stCommand.StartPos.dB:=PersistentVars.StoredPositions[STRING_TO_INT(_CmdParams[4])].Position.B;
			stCommand.StartPos.dC:=PersistentVars.StoredPositions[STRING_TO_INT(_CmdParams[4])].Position.C;
		ELSIF _CmdParams[3] = _VisionRegistersString THEN
			//_ArrayType:=DUT_Command_ArrayType.Vision;
			stCommand.StartPos.dX:=PersistentVars.VisionRegisters[STRING_TO_INT(_CmdParams[4])].Position.X;
			stCommand.StartPos.dY:=PersistentVars.VisionRegisters[STRING_TO_INT(_CmdParams[4])].Position.Y;
			stCommand.StartPos.dZ:=PersistentVars.VisionRegisters[STRING_TO_INT(_CmdParams[4])].Position.Z;
			stCommand.StartPos.dA:=PersistentVars.VisionRegisters[STRING_TO_INT(_CmdParams[4])].Position.A;
			stCommand.StartPos.dB:=PersistentVars.VisionRegisters[STRING_TO_INT(_CmdParams[4])].Position.B;
			stCommand.StartPos.dC:=PersistentVars.VisionRegisters[STRING_TO_INT(_CmdParams[4])].Position.C;
		ELSIF _CmdParams[3] = _FlagsString THEN
			//_ArrayType:=DUT_Command_ArrayType.Flag;
		ELSE
			Error := TRUE;
			ErrorDescription:='No array type provided';
		END_IF
	ELSE
		Error := TRUE;
		ErrorDescription:='No variable type provided';
	END_IF
	
ELSE
	Error := TRUE;
	ErrorDescription:='Command string format incorrect';
	
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4ea6ce2c-d973-415a-9620-8fd34fa576a4</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="F_SplitCmd" pouType="function">
                <interface>
                  <returnType>
                    <array>
                      <dimension lower="0" upper="GVL.COMMAND_LEN" />
                      <baseType>
                        <string />
                      </baseType>
                    </array>
                  </returnType>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                    <variable name="Delimiter">
                      <type>
                        <string length="1" />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                    <variable name="_DelimPos">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_SpaceChar">
                      <type>
                        <string length="1" />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// grab a copy
// TODO do we need to do this? cant we just operate on the input?
_Command := Command;

// ex. 123 456 789 0 123 456 879 0
WHILE LEN(_Command) &gt; 0  AND _i &lt; GVL.COMMAND_LEN DO
	// find the delimiter
	_DelimPos := FIND(_Command, Delimiter);
	// don't copy empty commands
	IF _DelimPos &gt; 1 THEN
		// copy the command into the array position
		F_SplitCmd[_i] := MID(STR:=_Command, LEN:=_DelimPos - 1, POS:=1);
		// trim the command off the front of the string
		_Command := DELETE(STR:=_Command, LEN:=_DelimPos, POS:=1);
		// increment the index and get ready for the next
		_i := _i + 1;
	ELSIF _DelimPos = 1 OR FIND(_Command, _SpaceChar) = 1 THEN
		// don't do anything with a stray delimiter or a space at the  start of the next command
		// trim the command off the space at the front of the string
		_Command := DELETE(STR:=_Command, LEN:=LEN(_SpaceChar), POS:=1);
	ELSIF _DelimPos = 0 AND LEN(_Command) &gt; 0 THEN
		// copy the last command into the array position and return
		F_SplitCmd[_i] := MID(STR:=_Command, LEN:=LEN(_Command), POS:=1);
		// trim the command off the front of the string
		_Command := DELETE(STR:=_Command, LEN:=_DelimPos, POS:=1);
		// increment the index and get ready for the next
		_i := _i + 1;
		RETURN;
	ELSE
		RETURN;
	END_IF
END_WHILE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4ffeb092-e2fe-4508-9822-2d3197400b13</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="BuildVarSetCmd" pouType="function">
                <interface>
                  <returnType>
                    <string length="GVL.COMMAND_LEN" />
                  </returnType>
                  <inputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_VarSetCmd" />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_Delimiter">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeS">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'STO'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeV">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VIS'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeF">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'FLG'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// S|V|F index x y z a b c
// S 0000 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 
// V 0000 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 +0000.00 
// F 0000 1

// clear the command
_Command:='';

// build the command
CASE stCommand.ArrayType OF
	DUT_Command_ArrayType.StoredPosition:
		F_AddElement(_Command, _Delimiter, _ArrayTypeS);
	DUT_Command_ArrayType.VisionRegister:
		F_AddElement(_Command, _Delimiter, _ArrayTypeV);
	DUT_Command_ArrayType.Flag:
		F_AddElement(_Command, _Delimiter, _ArrayTypeF);
END_CASE

// add the array index
F_AddElement(_Command, _Delimiter, INT_TO_STRING(stCommand.ArrayIndex));

// add the coordinates
IF stCommand.ArrayType = DUT_Command_ArrayType.StoredPosition 
	OR stCommand.ArrayType = DUT_Command_ArrayType.VisionRegister THEN
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Coordinates.X));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Coordinates.Y));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Coordinates.Z));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Coordinates.A));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Coordinates.B));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Coordinates.C));
		
ELSIF stCommand.ArrayType = DUT_Command_ArrayType.Flag THEN
		// we only send the x for readability. it will work if we send them all.
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Coordinates.X));
		
END_IF

// set function equal to command
BuildVarSetCmd := _Command;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>464f3abe-fbad-44ed-ab93-0358a4edadad</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="LogicCmdProcessor" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="PrgProcessor">
                      <type>
                        <derived name="FB_ProgramProcessor" />
                      </type>
                    </variable>
                    <variable name="CmdProcessor">
                      <type>
                        <derived name="FB_CommandProcessor" />
                      </type>
                    </variable>
                    <variable name="CmdIO">
                      <type>
                        <derived name="ST_LogicCmdIO" />
                      </type>
                    </variable>
                  </inOutVars>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                      <initialValue>
                        <simpleValue value="''" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_ParseLogicCmd">
                      <type>
                        <derived name="ParseLogicCmd" />
                      </type>
                    </variable>
                    <variable name="_ThenFunctionProcessed">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_COMMAND">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_EVAL_IN">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="100" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_EVAL_REG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="110" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_EVAL_CNT">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="120" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_THEN">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="200" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_ELSE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="210" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_OUT">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="300" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_JMP">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="310" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_CNT">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="320" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_REG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="330" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_NOP">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="340" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PROC_CAL">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="350" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
CASE SUPER^._SeqMain OF
	
    _STEP_DONE:
		SUPER^._SeqMain := _STEP_IDLE;
        
    _STEP_IDLE:
		// wait here until commanded to start
        
    _STEP_COMMAND:
		_ParseLogicCmd(Command:=Command);
		
		CASE _ParseLogicCmd.stCommand.IF_Condition OF
			E_LogicIfCondition.PASS:
				SUPER^._SeqMain := _STEP_PROC_THEN;
			E_LogicIfCondition.INPUT:
				SUPER^._SeqMain := _STEP_EVAL_IN;
			E_LogicIfCondition.REGISTER:
				SUPER^._SeqMain := _STEP_EVAL_REG;
			E_LogicIfCondition.COUNTER:
				SUPER^._SeqMain := _STEP_EVAL_CNT;
		END_CASE
		
		//
		_ThenFunctionProcessed := FALSE;
		
	_STEP_EVAL_IN:
		CASE _ParseLogicCmd.stCommand.IF_Condition_Operator OF
			E_LogicIfConditionOperator.EQU:
				IF CmdIO.Input[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					= UDINT_TO_BOOL(_ParseLogicCmd.stCommand.IF_Condition_Operator_Value) THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.GRE:
				IF CmdIO.Input[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&gt;= UDINT_TO_BOOL(_ParseLogicCmd.stCommand.IF_Condition_Operator_Value) THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.GRT:
				IF CmdIO.Input[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&gt; UDINT_TO_BOOL(_ParseLogicCmd.stCommand.IF_Condition_Operator_Value) THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.LEQ:
				IF CmdIO.Input[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&lt;= UDINT_TO_BOOL(_ParseLogicCmd.stCommand.IF_Condition_Operator_Value) THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.LES:
				IF CmdIO.Input[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&lt; UDINT_TO_BOOL(_ParseLogicCmd.stCommand.IF_Condition_Operator_Value) THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
		END_CASE
		
	_STEP_EVAL_REG:
		CASE _ParseLogicCmd.stCommand.IF_Condition_Operator OF
			E_LogicIfConditionOperator.EQU:
				IF CmdIO.Register[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					= _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.GRE:
				IF CmdIO.Register[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&gt;= _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.GRT:
				IF CmdIO.Register[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&gt; _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.LEQ:
				IF CmdIO.Register[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&lt;= _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.LES:
				IF CmdIO.Register[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&lt; _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
		END_CASE
		
	_STEP_EVAL_CNT:
		CASE _ParseLogicCmd.stCommand.IF_Condition_Operator OF
			E_LogicIfConditionOperator.EQU:
				IF CmdIO.Counter[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					= _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.GRE:
				IF CmdIO.Counter[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&gt;= _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.GRT:
				IF CmdIO.Counter[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&gt; _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.LEQ:
				IF CmdIO.Counter[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&lt;= _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
			E_LogicIfConditionOperator.LES:
				IF CmdIO.Counter[_ParseLogicCmd.stCommand.IF_Condition_Idx] 
					&lt; _ParseLogicCmd.stCommand.IF_Condition_Operator_Value THEN
						SUPER^._SeqMain := _STEP_PROC_THEN;
				ELSE
					SUPER^._SeqMain := _STEP_PROC_ELSE;
				END_IF
		END_CASE
		
	_STEP_PROC_THEN:
		//
		_ThenFunctionProcessed := TRUE;
		//
		CASE _ParseLogicCmd.stCommand.THEN_Function OF
			E_LogicFunction.OUTPUT:
				SUPER^._SeqMain := _STEP_PROC_OUT;
			E_LogicFunction.REGISTER:
				SUPER^._SeqMain := _STEP_PROC_REG;
			E_LogicFunction.CNTUP:
				SUPER^._SeqMain := _STEP_PROC_CNT;
			E_LogicFunction.CNTDN:
				SUPER^._SeqMain := _STEP_PROC_CNT;
			E_LogicFunction.CNTRST:
				SUPER^._SeqMain := _STEP_PROC_CNT;
			E_LogicFunction.JUMP:
				SUPER^._SeqMain := _STEP_PROC_JMP;
			E_LogicFunction.CALL:
				SUPER^._SeqMain := _STEP_PROC_CAL;
			E_LogicFunction.NOP:
				SUPER^._SeqMain := _STEP_PROC_NOP;
		END_CASE;
				
	_STEP_PROC_ELSE:
		CASE _ParseLogicCmd.stCommand.ELSE_Function OF
			E_LogicFunction.OUTPUT:
				SUPER^._SeqMain := _STEP_PROC_OUT;
			E_LogicFunction.REGISTER:
				SUPER^._SeqMain := _STEP_PROC_REG;
			E_LogicFunction.CNTUP:
				SUPER^._SeqMain := _STEP_PROC_CNT;
			E_LogicFunction.CNTDN:
				SUPER^._SeqMain := _STEP_PROC_CNT;
			E_LogicFunction.CNTRST:
				SUPER^._SeqMain := _STEP_PROC_CNT;
			E_LogicFunction.JUMP:
				SUPER^._SeqMain := _STEP_PROC_JMP;
			E_LogicFunction.CALL:
				SUPER^._SeqMain := _STEP_PROC_CAL;
			E_LogicFunction.NOP:
				SUPER^._SeqMain := _STEP_PROC_NOP;
		END_CASE;
		
	_STEP_PROC_OUT:
		IF _ThenFunctionProcessed THEN
			CmdIO.Output[_ParseLogicCmd.stCommand.THEN_Function_Idx] 
				:= UDINT_TO_BOOL(_ParseLogicCmd.stCommand.THEN_Function_Value);
		ELSE
			CmdIO.Output[_ParseLogicCmd.stCommand.ELSE_Function_Idx] 
				:= UDINT_TO_BOOL(_ParseLogicCmd.stCommand.ELSE_Function_Value);
		END_IF
		// next, please
		SUPER^._SeqMain := _STEP_DONE;
		
	_STEP_PROC_REG:
		IF _ThenFunctionProcessed THEN
			CmdIO.Register[_ParseLogicCmd.stCommand.THEN_Function_Idx] 
				:= _ParseLogicCmd.stCommand.THEN_Function_Value;
		ELSE
			CmdIO.Register[_ParseLogicCmd.stCommand.ELSE_Function_Idx] 
				:= _ParseLogicCmd.stCommand.ELSE_Function_Value;
		END_IF
		// next, please
		SUPER^._SeqMain := _STEP_DONE;
		
	_STEP_PROC_CNT:	
		IF _ThenFunctionProcessed THEN
			CASE _ParseLogicCmd.stCommand.THEN_Function OF
				E_LogicFunction.CNTUP:
					CmdIO.Counter[_ParseLogicCmd.stCommand.THEN_Function_Idx] 
						:= CmdIO.Counter[_ParseLogicCmd.stCommand.THEN_Function_Idx] + 1;
				E_LogicFunction.CNTDN:
					CmdIO.Counter[_ParseLogicCmd.stCommand.THEN_Function_Idx] 
						:= CmdIO.Counter[_ParseLogicCmd.stCommand.THEN_Function_Idx] - 1;
				E_LogicFunction.CNTRST:
					CmdIO.Counter[_ParseLogicCmd.stCommand.THEN_Function_Idx] 
						:= 0;
			END_CASE
		ELSE
			CASE _ParseLogicCmd.stCommand.ELSE_Function OF
				E_LogicFunction.CNTUP:
					CmdIO.Counter[_ParseLogicCmd.stCommand.ELSE_Function_Idx] 
						:= CmdIO.Counter[_ParseLogicCmd.stCommand.ELSE_Function_Idx] + 1;
				E_LogicFunction.CNTDN:
					CmdIO.Counter[_ParseLogicCmd.stCommand.ELSE_Function_Idx] 
						:= CmdIO.Counter[_ParseLogicCmd.stCommand.ELSE_Function_Idx] - 1;
				E_LogicFunction.CNTRST:
					CmdIO.Counter[_ParseLogicCmd.stCommand.ELSE_Function_Idx] 
						:= 0;
			END_CASE
		END_IF
		// next, please
		SUPER^._SeqMain := _STEP_DONE;
		
	_STEP_PROC_JMP:
		IF _ThenFunctionProcessed THEN
			CmdProcessor.M_SetNextCommand(CommandNumber:=INT_TO_UINT(_ParseLogicCmd.stCommand.THEN_Function_Idx));
		ELSE
			CmdProcessor.M_SetNextCommand(CommandNumber:=INT_TO_UINT(_ParseLogicCmd.stCommand.ELSE_Function_Idx));
		END_IF
		// next, please
		SUPER^._SeqMain := _STEP_DONE;
		
	_STEP_PROC_CAL:
		IF _ThenFunctionProcessed THEN
			PrgProcessor.M_CallProgram(	ProgramNumber:= INT_TO_UINT(_ParseLogicCmd.stCommand.THEN_Function_Idx), 
										ReturnProgram:= PrgProcessor.P_CurrentProgram, 
										ReturnCommand:= CmdProcessor.P_CurrentCommandIndex);
		ELSE
			PrgProcessor.M_CallProgram(	ProgramNumber:= INT_TO_UINT(_ParseLogicCmd.stCommand.ELSE_Function_Idx), 
										ReturnProgram:= PrgProcessor.P_CurrentProgram, 
										ReturnCommand:= CmdProcessor.P_CurrentCommandIndex);
		END_IF
		// next, please
		SUPER^._SeqMain := _STEP_DONE;
		
	_STEP_PROC_NOP:
		IF _ThenFunctionProcessed THEN
			//
		ELSE
			//
		END_IF
		// next, please
		SUPER^._SeqMain := _STEP_DONE;

END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="8ca4de4a-aa41-4055-81ee-9c69366d3914">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^._UnitMode(	sName := 'Logic Processor',
				eInitialState := PACK_ML.State.Idle,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="b9caab7f-1bc9-4e01-ad9e-5992be1f9d70">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="5c7eb861-0692-458a-9941-920dd2879e58">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
IF SUPER^._SeqMain =_STEP_IDLE THEN
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="aedebc1a-7039-4685-98ce-1d471deca595">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// I can consider this the "INIT" state
SUPER^._SeqMain := _STEP_COMMAND;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ef05d0a0-faef-4d26-ad80-b37bf095bfda</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="F_AddElement" pouType="function">
                <interface>
                  <inOutVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inOutVars>
                  <inputVars>
                    <variable name="Delimiter">
                      <type>
                        <string length="1" />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> default to space</xhtml>
                      </documentation>
                    </variable>
                    <variable name="Element">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//
// input
// 	Element: 'bar'
// 	Delimiter: ','
// 	Command: 'foo'
//
// output
// 	Command: 'foo,bar'
//

Command:=CONCAT(Command, Element);
Command:=CONCAT(Command, Delimiter);</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>40f6ab40-9306-42a3-9cf6-d7249218b202</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="BuildMoveCmd" pouType="function">
                <interface>
                  <returnType>
                    <string length="GVL.COMMAND_LEN" />
                  </returnType>
                  <inputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_MoveCmd" />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_Delimiter">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                    <variable name="_MoveTypeD">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'DIR'" />
                      </initialValue>
                    </variable>
                    <variable name="_MoveTypeL">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LIN'" />
                      </initialValue>
                    </variable>
                    <variable name="_MoveTypeC">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CIR'" />
                      </initialValue>
                    </variable>
                    <variable name="_ChangeTypeA">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ABS'" />
                      </initialValue>
                    </variable>
                    <variable name="_ChangeTypeR">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'REL'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemAcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ACS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemMcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'MCS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemPc1">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'PC1'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemPc2">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'PC2'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemTcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'TCS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemWcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'WCS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordSystemIcs">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'ICS'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordTypeH">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'LIT'" />
                      </initialValue>
                    </variable>
                    <variable name="_CoordTypeV">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VAR'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeS">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'STO'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeV">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'VIS'" />
                      </initialValue>
                    </variable>
                    <variable name="_ArrayTypeF">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'FLG'" />
                      </initialValue>
                    </variable>
                    <variable name="_CircleModeBor">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'BOR'" />
                      </initialValue>
                    </variable>
                    <variable name="_CircleModeCen">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CEN'" />
                      </initialValue>
                    </variable>
                    <variable name="_CircleModeRad">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'RAD'" />
                      </initialValue>
                    </variable>
                    <variable name="_PathChoiceClw">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CLW'" />
                      </initialValue>
                    </variable>
                    <variable name="_PathChoiceCcw">
                      <type>
                        <string length="3" />
                      </type>
                      <initialValue>
                        <simpleValue value="'CCW'" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// D is direct move. L is linear move. C is a circular move
// R is relative position. A is absolute position
// V is variable coordinated. H is a hardcoded coordinated
// S is stored position array. V is vision register array.
// D|L|C R|A Speed CoordSystem X0000.00 Y0000.00 Z0000.00 A0000.00 B0000.00 C0000.00 BOR|CEN|RAD CCW|CLW X0000.00 Y0000.00 Z0000.00 A0000.00 B0000.00 C0000.00
// 'D A 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
// 'C R 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
// 'D A 010 MCS V S 025'
// 'D A 010 MCS V V 033'
// 'C R 010 MCS V S 002 BOR CLW V S 005'
// 'C R 010 MCS V S 003 BOR CLW V V 006'
// 'C R 010 MCS V S 015 BOR CLW H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00'
// 'C R 010 MCS H +0250.00 +0000.00 +0500.00 +0000.00 +0045.00 +0180.00 BOR CLW V V 022'

//
_Command := '';

//
CASE stCommand.MoveType OF
	DUT_Command_MoveType.DirectMove:
		F_AddElement(_Command, _Delimiter, _MoveTypeD);
	DUT_Command_MoveType.LinearMove:
		F_AddElement(_Command, _Delimiter, _MoveTypeL);
	DUT_Command_MoveType.CircularMove:
		F_AddElement(_Command, _Delimiter, _MoveTypeC);
END_CASE

//
CASE stCommand.PositionType OF
	DUT_Command_PositionType.AbsolutePosition:
		F_AddElement(_Command, _Delimiter, _ChangeTypeA);
	DUT_Command_PositionType.RelativePosition:
		F_AddElement(_Command, _Delimiter, _ChangeTypeR);
END_CASE

//
F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.Speed));

//
CASE stCommand.CoordSystem OF
	SMC_COORD_SYSTEM.ACS:
		F_AddElement(_Command, _Delimiter, _CoordSystemAcs);
	SMC_COORD_SYSTEM.MCS:
		F_AddElement(_Command, _Delimiter, _CoordSystemMcs);
	SMC_COORD_SYSTEM.PCS_1:
		F_AddElement(_Command, _Delimiter, _CoordSystemPc1);
	SMC_COORD_SYSTEM.PCS_2:
		F_AddElement(_Command, _Delimiter, _CoordSystemPc2);
	SMC_COORD_SYSTEM.TCS:
		F_AddElement(_Command, _Delimiter, _CoordSystemTcs);
	SMC_COORD_SYSTEM.WCS:
		F_AddElement(_Command, _Delimiter, _CoordSystemWcs);
	SMC_COORD_SYSTEM.ICS:
		F_AddElement(_Command, _Delimiter, _CoordSystemIcs);
END_CASE

//
CASE stCommand.CoordinateType OF
	DUT_Command_CoordinateType.Literal:
		F_AddElement(_Command, _Delimiter, _CoordTypeH);
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef.X));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef.Y));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef.Z));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef.A));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef.B));
		F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef.C));
		
	DUT_Command_CoordinateType.Variable:
		F_AddElement(_Command, _Delimiter, _CoordTypeV);
		CASE stCommand.ArrayType OF
			DUT_Command_ArrayType.StoredPosition:
				F_AddElement(_Command, _Delimiter, _ArrayTypeS);
			DUT_Command_ArrayType.VisionRegister:
				F_AddElement(_Command, _Delimiter, _ArrayTypeV);
			DUT_Command_ArrayType.Flag:
				// on damn
		END_CASE
		F_AddElement(_Command, _Delimiter, UDINT_TO_STRING(stCommand.ArrayIndex));
		
END_CASE

// only add if move type is circle
IF stCommand.MoveType = DUT_Command_MoveType.CircularMove THEN
	//
	CASE stCommand.CircleMode OF
		SMC_CIRC_MODE.BORDER:
			F_AddElement(_Command, _Delimiter, _CircleModeBor);
		SMC_CIRC_MODE.CENTER:
			F_AddElement(_Command, _Delimiter, _CircleModeCen);
		SMC_CIRC_MODE.RADIUS:
			F_AddElement(_Command, _Delimiter, _CircleModeRad);
	END_CASE
	//
	CASE stCommand.PathChoice OF
		MC_CIRC_PATHCHOICE.CLOCKWISE:
			F_AddElement(_Command, _Delimiter, _PathChoiceClw);
		MC_CIRC_PATHCHOICE.COUNTER_CLOCKWISE:
			F_AddElement(_Command, _Delimiter, _PathChoiceCcw);
	END_CASE
	//
	CASE stCommand.CircularCoordinateType OF
		DUT_Command_CoordinateType.Literal:
			F_AddElement(_Command, _Delimiter, _CoordTypeH);
			F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef2.X));
			F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef2.Y));
			F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef2.Z));
			F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef2.A));
			F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef2.B));
			F_AddElement(_Command, _Delimiter, LREAL_TO_STRING(stCommand.CoordRef2.C));
			
		DUT_Command_CoordinateType.Variable:
			F_AddElement(_Command, _Delimiter, _CoordTypeV);
			CASE stCommand.CircularArrayType OF
				DUT_Command_ArrayType.StoredPosition:
					F_AddElement(_Command, _Delimiter, _ArrayTypeS);
				DUT_Command_ArrayType.VisionRegister:
					F_AddElement(_Command, _Delimiter, _ArrayTypeV);
				DUT_Command_ArrayType.Flag:
					// oh damn
			END_CASE
			F_AddElement(_Command, _Delimiter, UDINT_TO_STRING(stCommand.CircularArrayIndex));
			
	END_CASE

END_IF

// set function equal to command
BuildMoveCmd := _Command;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>19554b2f-3ca2-4f8d-a4a2-2e3ac3119ec0</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="F_RoundLreal" pouType="function">
                <interface>
                  <returnType>
                    <LREAL />
                  </returnType>
                  <inputVars>
                    <variable name="rIn">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="Digit">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="d1">
                      <type>
                        <DINT />
                      </type>
                    </variable>
                    <variable name="r0">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="r1">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="r2">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="Rdigit">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// https://forge.codesys.com/forge/talk/Engineering/thread/8d1ee86294/
rdigit   :=INT_TO_LREAL(Digit);
r0 := EXPT(10,rdigit); 
r1 := rIn * r0;
d1 := TRUNC(r1);
r2 := DINT_TO_LREAL(d1);
F_RoundLreal := r2 / r0;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6e4b5325-49a6-45c7-a436-b44a2066c3ea</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="ParseLogicCmd" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_LogicCmd" />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_CmdParams">
                      <type>
                        <array>
                          <dimension lower="0" upper="GVL.COMMAND_LEN" />
                          <baseType>
                            <string />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// IF PASS|INPUT|REGISTER|COUNTER &lt;index&gt; &gt;|&lt;|=|&gt;=|&lt;= &lt;value&gt;
// THEN OUTPUT|JUMP|CALL|CNTUP|CNTDN|CNTRST|REGISTER|NOP &lt;index&gt; &lt;value&gt;
// ELSE OUTPUT|JUMP|CALL|CNTUP|CNTDN|CNTRST|REGISTER|NOP &lt;index&gt; &lt;value&gt;
//
// IF_Condition
// IF_Condition_Idx
// IF_Condition_Operator
// IF_Condition_Operator_Compare
// THEN_Function
// THEN_Function_Value
// THEN_Function_Idx
// ELSE_Function
// ELSE_Function_Idx
// ELSE_Function_Value

Error:=FALSE;
ErrorDescription:='';

// split command string into commands
_CmdParams:=F_SplitCmd(Command:=Command);

//
_i := 0;

// disregard the 'IF'
_i := _i + 1;

//
IF _CmdParams[_i] = TO_STRING(E_LogicIfCondition.PASS) THEN
	stCommand.IF_Condition := E_LogicIfCondition.PASS;
ELSIF  _CmdParams[_i] = TO_STRING(E_LogicIfCondition.INPUT) THEN
	stCommand.IF_Condition := E_LogicIfCondition.INPUT;
ELSIF  _CmdParams[_i] = TO_STRING(E_LogicIfCondition.REGISTER) THEN
	stCommand.IF_Condition := E_LogicIfCondition.REGISTER;
ELSIF  _CmdParams[_i] = TO_STRING(E_LogicIfCondition.COUNTER) THEN
	stCommand.IF_Condition := E_LogicIfCondition.COUNTER;
END_IF
_i := _i + 1;

//
IF stCommand.IF_Condition &lt;&gt; E_LogicIfCondition.PASS THEN
	
	//
	stCommand.IF_Condition_Idx := STRING_TO_INT(_CmdParams[_i]);
	_i := _i + 1;
	
	//
	IF _CmdParams[_i] = TO_STRING(E_LogicIfConditionOperator.GRT) THEN
		stCommand.IF_Condition_Operator := E_LogicIfConditionOperator.GRT;
	ELSIF _CmdParams[_i] = TO_STRING(E_LogicIfConditionOperator.LES) THEN
		stCommand.IF_Condition_Operator := E_LogicIfConditionOperator.LES;                   
	ELSIF _CmdParams[_i] = TO_STRING(E_LogicIfConditionOperator.EQU) THEN
		stCommand.IF_Condition_Operator := E_LogicIfConditionOperator.EQU;
	ELSIF _CmdParams[_i] = TO_STRING(E_LogicIfConditionOperator.GRE) THEN
		stCommand.IF_Condition_Operator := E_LogicIfConditionOperator.GRE;
	ELSIF _CmdParams[_i] = TO_STRING(E_LogicIfConditionOperator.LEQ) THEN
		stCommand.IF_Condition_Operator := E_LogicIfConditionOperator.LEQ;
	END_IF
	_i := _i + 1;
	
	//
	stCommand.IF_Condition_Operator_Value := STRING_TO_UDINT(_CmdParams[_i]);
	_i := _i + 1;
	
END_IF

// disregard the 'THEN'
_i := _i + 1;

//
IF _CmdParams[_i] = TO_STRING(E_LogicFunction.OUTPUT) THEN
	stCommand.THEN_Function := E_LogicFunction.OUTPUT;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.JUMP) THEN
	stCommand.THEN_Function := E_LogicFunction.JUMP;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CALL) THEN
	stCommand.THEN_Function := E_LogicFunction.CALL;           
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CNTUP) THEN
	stCommand.THEN_Function := E_LogicFunction.CNTUP;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CNTDN) THEN
	stCommand.THEN_Function := E_LogicFunction.CNTDN;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CNTRST) THEN
	stCommand.THEN_Function := E_LogicFunction.CNTRST;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.REGISTER) THEN
	stCommand.THEN_Function := E_LogicFunction.REGISTER;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.NOP) THEN
	stCommand.THEN_Function := E_LogicFunction.NOP;
END_IF
_i := _i + 1;

//
IF stCommand.THEN_Function &lt;&gt; E_LogicFunction.NOP THEN
	stCommand.THEN_Function_Idx := STRING_TO_INT(_CmdParams[_i]);
	_i := _i + 1;
	IF stCommand.THEN_Function = E_LogicFunction.OUTPUT 
		OR stCommand.THEN_Function = E_LogicFunction.REGISTER THEN
			stCommand.THEN_Function_Value := STRING_TO_UDINT(_CmdParams[_i]);
			_i := _i + 1;
	END_IF
END_IF

// disregard the 'ELSE'
_i := _i + 1;

//
IF _CmdParams[_i] = TO_STRING(E_LogicFunction.OUTPUT) THEN
	stCommand.ELSE_Function := E_LogicFunction.OUTPUT;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.JUMP) THEN
	stCommand.ELSE_Function := E_LogicFunction.JUMP;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CALL) THEN
	stCommand.ELSE_Function := E_LogicFunction.CALL;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CNTUP) THEN
	stCommand.ELSE_Function := E_LogicFunction.CNTUP;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CNTDN) THEN
	stCommand.ELSE_Function := E_LogicFunction.CNTDN;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.CNTRST) THEN
	stCommand.ELSE_Function := E_LogicFunction.CNTRST;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.REGISTER) THEN
	stCommand.ELSE_Function := E_LogicFunction.REGISTER;
ELSIF _CmdParams[_i] = TO_STRING(E_LogicFunction.NOP) THEN
	stCommand.ELSE_Function := E_LogicFunction.NOP;
END_IF
_i := _i + 1;

//
IF stCommand.ELSE_Function &lt;&gt; E_LogicFunction.NOP THEN
	stCommand.ELSE_Function_Idx := STRING_TO_INT(_CmdParams[_i]);
	_i := _i + 1;
	IF stCommand.ELSE_Function = E_LogicFunction.OUTPUT 
		OR stCommand.ELSE_Function = E_LogicFunction.REGISTER THEN
			stCommand.ELSE_Function_Value := STRING_TO_UDINT(_CmdParams[_i]);
			_i := _i + 1;
	END_IF
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>94719e33-3b96-48b6-b30b-137cf4b2830f</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="BuildLogicCmd" pouType="function">
                <interface>
                  <returnType>
                    <string length="GVL.COMMAND_LEN" />
                  </returnType>
                  <inputVars>
                    <variable name="stCommand">
                      <type>
                        <derived name="ST_LogicCmd" />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Command">
                      <type>
                        <string length="GVL.COMMAND_LEN" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_Delimiter">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="' '" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// IF PASS|INPUT|REGISTER|COUNTER &lt;index&gt; &gt;|&lt;|=|&gt;=|&lt;= &lt;value&gt;
// THEN OUTPUT|JUMP|CNTUP|CNTDN|CNTRST|REGISTER|NOP &lt;index&gt; &lt;value&gt;
// ELSE OUTPUT|JUMP|CNTUP|CNTDN|CNTRST|REGISTER|NOP &lt;index&gt; &lt;value&gt;
//
// IF_Condition
// IF_Condition_Idx
// IF_Condition_Operator
// IF_Condition_Operator_Compare
// THEN_Function
// THEN_Function_Value
// THEN_Function_Idx
// ELSE_Function
// ELSE_Function_Idx
// ELSE_Function_Value

// clear the command
_Command:='';

// build command
F_AddElement(_Command, _Delimiter, 'IF');
F_AddElement(_Command, _Delimiter, TO_STRING(stCommand.IF_Condition));
IF stCommand.IF_Condition &lt;&gt; E_LogicIfCondition.PASS THEN
	F_AddElement(_Command, _Delimiter, INT_TO_STRING(stCommand.IF_Condition_Idx));
	F_AddElement(_Command, _Delimiter, TO_STRING(stCommand.IF_Condition_Operator));
	F_AddElement(_Command, _Delimiter, UDINT_TO_STRING(stCommand.IF_Condition_Operator_Value));
END_IF
F_AddElement(_Command, _Delimiter, 'THEN');
F_AddElement(_Command, _Delimiter, TO_STRING(stCommand.THEN_Function));
IF stCommand.THEN_Function &lt;&gt; E_LogicFunction.NOP THEN
	F_AddElement(_Command, _Delimiter, INT_TO_STRING(stCommand.THEN_Function_Idx));
	IF stCommand.THEN_Function = E_LogicFunction.OUTPUT OR 
		stCommand.THEN_Function = E_LogicFunction.REGISTER THEN
			F_AddElement(_Command, _Delimiter, UDINT_TO_STRING(stCommand.THEN_Function_Value));
	END_IF
END_IF
F_AddElement(_Command, _Delimiter, 'ELSE');
F_AddElement(_Command, _Delimiter, TO_STRING(stCommand.ELSE_Function));
IF stCommand.ELSE_Function &lt;&gt; E_LogicFunction.NOP THEN
	F_AddElement(_Command, _Delimiter, INT_TO_STRING(stCommand.ELSE_Function_Idx));
	IF stCommand.ELSE_Function = E_LogicFunction.OUTPUT 
		OR stCommand.ELSE_Function = E_LogicFunction.REGISTER THEN
			F_AddElement(_Command, _Delimiter, UDINT_TO_STRING(stCommand.ELSE_Function_Value));
	END_IF
END_IF

// set function equal to command
BuildLogicCmd := _Command;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c913c794-b56e-4d94-b465-42dec1dfd0be</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="F_HomeOffsetCalc" pouType="function">
                <interface>
                  <returnType>
                    <LREAL />
                  </returnType>
                  <inputVars>
                    <variable name="CurrentOffset">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="CurrentPosition">
                      <type>
                        <LREAL />
                      </type>
                    </variable>
                    <variable name="HomeSearchDirection">
                      <type>
                        <derived name="MC_Direction" />
                      </type>
                    </variable>
                  </inputVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">IF HomeSearchDirection = MC_Direction.positive THEN
	F_HomeOffsetCalc := -F_RoundLreal(ABS(CurrentPosition - CurrentOffset),2);
	
ELSIF HomeSearchDirection = MC_Direction.negative THEN
	F_HomeOffsetCalc := F_RoundLreal(ABS(CurrentPosition - CurrentOffset),2);
	
ELSE
	F_HomeOffsetCalc := CurrentOffset;
	
END_IF</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ad8953b8-d17f-41b2-83c9-9901a22a0b46</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_ProgramProcessor" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="Programs">
                      <type>
                        <array>
                          <dimension lower="GVL.PROG_ARR_BEG" upper="GVL.PROG_ARR_END" />
                          <baseType>
                            <derived name="DUT_Program" />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="GroupHandler">
                      <type>
                        <derived name="FB_GroupHandler" />
                      </type>
                    </variable>
                    <variable name="CmdIO">
                      <type>
                        <derived name="ST_LogicCmdIO" />
                      </type>
                    </variable>
                  </inOutVars>
                  <inputVars>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="ItfActiveProcessorUnitMode">
                      <type>
                        <derived name="PACK_ML.IUnitMode" />
                      </type>
                    </variable>
                    <variable name="ItfActiveModule">
                      <type>
                        <derived name="ItfModule" />
                      </type>
                    </variable>
                    <variable name="StatusText">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_DummyUnitMode">
                      <type>
                        <derived name="PACK_ML.UnitMode" />
                      </type>
                    </variable>
                    <variable name="_UnitModeCurrentState">
                      <type>
                        <derived name="PACK_ML.State" />
                      </type>
                    </variable>
                    <variable name="_Returning">
                      <type>
                        <array>
                          <dimension lower="GVL.PROG_ARR_BEG" upper="GVL.PROG_ARR_END" />
                          <baseType>
                            <BOOL />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_ReturnPrograms">
                      <type>
                        <array>
                          <dimension lower="GVL.PROG_ARR_BEG" upper="GVL.PROG_ARR_END" />
                          <baseType>
                            <UINT />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_ReturnCommands">
                      <type>
                        <array>
                          <dimension lower="GVL.PROG_CMDS_ARR_BEG" upper="(GVL.PROG_CMDS_ARR_END + 1)" />
                          <baseType>
                            <UINT />
                          </baseType>
                        </array>
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> +1 because we want to be able to tell if calling program was on last command</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_CurrentPrgIdx">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="_ProcessCommands">
                      <type>
                        <derived name="FB_CommandProcessor" />
                      </type>
                    </variable>
                    <variable name="_Commands">
                      <type>
                        <array>
                          <dimension lower="GVL.PROG_CMDS_ARR_BEG" upper="GVL.PROG_CMDS_ARR_END" />
                          <baseType>
                            <derived name="DUT_Command" />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_FirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="_STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_PRG">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="10" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_EXECUTE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="20" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_WAIT_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="25" />
                      </initialValue>
                    </variable>
                    <variable name="_STEP_ERR">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>Module</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//
SUPER^();

//
IF _FirstScan THEN
	// will exception if we don't set this on first scan
	_DummyUnitMode(sName := 'Active Processor', 
					eInitialState := PACK_ML.State.Idle,
					xActive := TRUE);
	ItfActiveProcessorUnitMode := _DummyUnitMode;
END_IF

// this is at best a hack and needs to be rethought out.
// we logically cant assign a process as the active unit mode 
// at start up so we use this dummy one
CASE _DummyUnitMode.CurrentState OF
	PACK_ML.State.Stopped,
	PACK_ML.State.Aborted,
	PACK_ML.State.Held,
	PACK_ML.State.Suspended,
	PACK_ML.State.Complete,
	PACK_ML.State.Idle:
		//
	PACK_ML.State.Resetting,
	PACK_ML.State.Starting,
	PACK_ML.State.Execute,
	PACK_ML.State.Suspending,
	PACK_ML.State.UnSuspending,
	PACK_ML.State.Holding,
	PACK_ML.State.UnHolding,
	PACK_ML.State.Completing,
	PACK_ML.State.Aborting,
	PACK_ML.State.Stopping,
	PACK_ML.State.Clearing:
		_DummyUnitMode.ActingStateCompleted();
END_CASE

// PackML state machine implementation
_UnitModeCurrentState := SUPER^._UnitMode.CurrentState;

//
IF _ProcessCommands.Error THEN
	SUPER^.M_Error(Description:=CONCAT('Command Processor Error: ', _ProcessCommands.ErrorDescription));
	StatusText:=SUPER^.ErrorDescription;
END_IF

//
_ProcessCommands(
	StoredPositions:=SUPER^.StoredPositions,
	VisionRegisters:=SUPER^.VisionRegisters,
	Flags:=SUPER^.Flags,
	AxisGroup:= AxisGroup,
	GroupHandler:= GroupHandler,
	CmdIO:=CmdIO,
	PrgProcessor:= THIS^,
	Enable:= Enable,
	Error=&gt; ,
	StatusText=&gt;StatusText);	

_FirstScan := FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_CallProgram" ObjectId="7ee83db1-f29b-420a-9be4-4f2ca7f272b9">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="ProgramNumber">
                            <type>
                              <UINT />
                            </type>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> program to call</xhtml>
                            </documentation>
                          </variable>
                          <variable name="ReturnProgram">
                            <type>
                              <UINT />
                            </type>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> number of the program to return to when the call program ends</xhtml>
                            </documentation>
                          </variable>
                          <variable name="ReturnCommand">
                            <type>
                              <UINT />
                            </type>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> number of the command to start from when called program ends</xhtml>
                            </documentation>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ProgramNumber &lt;= GVL.PROG_ARR_END AND_THEN ProgramNumber &gt;= GVL.PROG_ARR_BEG
	AND_THEN ReturnProgram &lt;= GVL.PROG_ARR_END AND_THEN ReturnProgram &gt;= GVL.PROG_ARR_BEG
	AND_THEN SUPER^.PropCurrentState = PACK_ML.State.Execute THEN
		IF _ProcessCommands.M_SetCommands(StartingCommand:=0, Commands:=Programs[ProgramNumber].Commands) THEN
			IF ReturnCommand &lt;= GVL.PROG_CMDS_ARR_END + 1 AND_THEN ReturnCommand &gt;= GVL.PROG_CMDS_ARR_BEG THEN // +1 because we want to be able to tell if calling program was on last command
				_Returning[ProgramNumber] := TRUE;
				_ReturnPrograms[ProgramNumber] := ReturnProgram;
				_ReturnCommands[ProgramNumber] := ReturnCommand;
			END_IF
			_CurrentPrgIdx := ProgramNumber;
			M_CallProgram := TRUE;
		ELSE
			M_CallProgram := FALSE;
		END_IF
ELSE
	M_CallProgram := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Complete" ObjectId="e0582917-521f-4b32-958a-13d96ee8a2c1">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// once complete, reset to get back to idle
SUPER^._UnitMode.Reset();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Resetting" ObjectId="b6c5fa13-19db-4fcd-816d-e9a3304a2225">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqResetting OF
	0:
		_ProcessCommands.M_Home();
		_SeqResetting := _SeqResetting + 1;
	1:
		IF _ProcessCommands.PropCurrentState = PACK_ML.State.Idle THEN
			_SeqResetting := 0;
			SUPER^.M_StateComplete();
		END_IF
		
END_CASE

SUPER^.M_Reset();

(*IF ItfActiveModule &lt;&gt; 0 THEN
	CASE _Seq OF
		0:
			IF NOT ItfActiveModule.PropCurrentState = PACK_ML.State.Idle THEN
				ItfActiveModule.M_Home();
				_Seq := 1;
			ELSE
				SUPER^.M_StateComplete();
			END_IF
		1:
			IF ItfActiveModule.PropCurrentState = PACK_ML.State.Idle THEN
				_Seq := 0;
			END_IF
			
	END_CASE
	
ELSE
	SUPER^.M_StateComplete();
	_Seq := 0;
	
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Idle" ObjectId="6d214b1c-280f-4ec0-8f28-01da6b72e176">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// in this state, we want to reset all the function blocks and hang out
FOR _i:=GVL.PROG_ARR_BEG TO GVL.PROG_ARR_END BY 1 DO
	_Returning[_i] := FALSE;
END_FOR
(*FOR _i:=GVL.PROG_ARR_BEG TO GVL.PROG_ARR_END BY 1 DO
	_ReturnPrograms[_i] := 0;
END_FOR
FOR _i:=GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	_ReturnCommands[_i] := 0;
END_FOR*)
_SeqMain := _STEP_IDLE;
_SeqAborting := 0;
_SeqClearing := 0;
_SeqResetting := 0;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPackML" ObjectId="d7e3a9d4-d0f0-4d0c-8efb-368ccde7847c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// SUPER already does this but the default is eInitialState:=PACK_ML.State.Idle 
// and we want PACK_ML.State.Aborted for the Orchestrator
SUPER^._UnitMode(sName := 'Program Processor',
				eInitialState := PACK_ML.State.Aborted,
				xActive := TRUE);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Starting" ObjectId="23554005-946f-49d9-b4ae-f96189bb2368">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to clear things and get ready for the execute state
// we can consider this the "INIT" state
(*FOR _i:=GVL.PROG_ARR_BEG TO GVL.PROG_ARR_END BY 1 DO
	_Returning[_i] := FALSE;
END_FOR
FOR _i:=GVL.PROG_ARR_BEG TO GVL.PROG_ARR_END BY 1 DO
	_ReturnPrograms[_i] := 0;
END_FOR
FOR _i:=GVL.PROG_CMDS_ARR_BEG TO GVL.PROG_CMDS_ARR_END BY 1 DO
	_ReturnCommands[_i] := 0;
END_FOR*)
//_CurrentPrgIdx := 0;
_SeqMain := _STEP_PRG;
SUPER^.M_StateComplete();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Execute" ObjectId="8d2d84b2-6e61-435c-93f3-9fa4b1f00fe9">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">// here we want to execute our commands/jobs/etc and set completed when done.
//
CASE _SeqMain OF
  	_STEP_DONE:
		_SeqMain := _STEP_IDLE;
		
	_STEP_IDLE:
		// hang out here until called to run
		_CurrentPrgIdx := 0;
		SUPER^.M_StateComplete();
		
	_STEP_PRG: //
		IF NOT Enable THEN
			_SeqMain := _STEP_DONE;
		ELSIF _CurrentPrgIdx &lt;= GVL.PROG_ARR_END AND _CurrentPrgIdx &gt;= GVL.PROG_ARR_BEG THEN
			//
			StatusText := '';
			ItfActiveModule := _ProcessCommands;
			ItfActiveProcessorUnitMode := _ProcessCommands.ItfUnitMode;
			
			IF _ProcessCommands.M_SetCommands(StartingCommand:=0, Commands:=Programs[_CurrentPrgIdx].Commands) THEN
				_ProcessCommands.M_Start();
				_SeqMain := _STEP_WAIT_EXECUTE;
			ELSE
				SUPER^.M_Error('Failed to set Command Processor. Check commands.');
				_SeqMain := _STEP_ERR;
			END_IF
			
				
		ELSE
			_SeqMain := _STEP_DONE;
		END_IF
		
	_STEP_WAIT_EXECUTE:
		IF _ProcessCommands.PropCurrentState = PACK_ML.State.Execute THEN
			_SeqMain := _STEP_WAIT_IDLE;
		END_IF
		
	_STEP_WAIT_IDLE: // wait for program to finish
		//
		IF _ProcessCommands.PropCurrentState = PACK_ML.State.Idle THEN
			IF _Returning[_CurrentPrgIdx] THEN
				_Returning[_CurrentPrgIdx] := FALSE;
				IF _ReturnPrograms[_CurrentPrgIdx] &lt;= GVL.PROG_ARR_END AND_THEN _ReturnPrograms[_CurrentPrgIdx] &gt;= GVL.PROG_ARR_BEG
					AND_THEN _ReturnCommands[_CurrentPrgIdx] &lt;= GVL.PROG_CMDS_ARR_END + 1 AND_THEN _ReturnCommands[_CurrentPrgIdx] &gt;= GVL.PROG_CMDS_ARR_BEG // +1 because we want to be able to tell if calling program was on last command
					THEN
						//
						IF _ProcessCommands.M_SetCommands(StartingCommand:=_ReturnCommands[_CurrentPrgIdx], Commands:=Programs[_ReturnPrograms[_CurrentPrgIdx]].Commands) THEN
							_CurrentPrgIdx := _ReturnPrograms[_CurrentPrgIdx];
							_ProcessCommands.M_Start();
							_SeqMain := _STEP_WAIT_EXECUTE;
						ELSE
							SUPER^.M_Error('Failed to set Command Processor. Check commands.');
							_SeqMain := _STEP_ERR;
						END_IF
				ELSE
					_SeqMain := _STEP_DONE;
				END_IF
			ELSE
				_SeqMain := _STEP_DONE;
			END_IF
		END_IF
		//
		IF _ProcessCommands.PropError THEN
			SUPER^._UnitMode.Suspend();
			_SeqMain := _STEP_ERR;
		END_IF
		
	_STEP_ERR: //
	
END_CASE

// watch for rising edge of idle state. this was done for all processors since 
// the vision processor runs in a separate task and isnt guaranteed to start in the same 
// PLC scan.
//_ProcessorDoneRtrig(clk:=ItfActiveProcessorUnitMode.CurrentState = PACK_ML.State.Idle);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Suspending" ObjectId="684fc4f2-246f-4945-8212-723c99febbb0">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ItfActiveModule &lt;&gt; 0 THEN
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Execute THEN
		ItfActiveModule.M_Hold();
		IF ItfActiveModule.PropCurrentState = PACK_ML.State.Held THEN
			SUPER^.M_StateComplete();
		END_IF
	ELSE
		SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnSuspending" ObjectId="406df145-b1cf-49d3-b830-5854ef901adb">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//
IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Start();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Execute THEN
		SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF

//
_SeqMain := _STEP_WAIT_IDLE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Holding" ObjectId="3adf8882-b7f2-4d3c-ab00-51845770b657">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Hold();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Held THEN
		SUPER^.M_StateComplete();
	END_IF
ELSE
	SUPER^.M_StateComplete();
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_UnHolding" ObjectId="db02f817-61ea-472c-a77d-74ef4b32dcbb">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//
IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Start();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Execute THEN
		SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF

//
_SeqMain := _STEP_WAIT_IDLE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Aborting" ObjectId="e99199cb-ebbe-46f4-92b7-fa122f3254aa">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE _SeqAborting OF
	0:
		_ProcessCommands.M_Abort();
		_SeqAborting := _SeqAborting + 1;
	1:
		IF _ProcessCommands.PropCurrentState = PACK_ML.State.Aborted THEN
			_SeqAborting := 0;
			SUPER^.M_StateComplete();
		END_IF
		
END_CASE

(*IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Abort();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Aborted THEN
		SUPER^.M_StateComplete();
	END_IF
ELSE
	SUPER^.M_StateComplete();
END_IF*)</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Stopping" ObjectId="8dfa3f47-4636-4136-86b1-d7e826dcf51a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ItfActiveModule &lt;&gt; 0 THEN
	ItfActiveModule.M_Stop();
	IF ItfActiveModule.PropCurrentState = PACK_ML.State.Idle 
		OR ItfActiveModule.PropCurrentState = PACK_ML.State.Stopped 
		OR ItfActiveModule.PropCurrentState = PACK_ML.State.Aborted 
		OR ItfActiveModule.PropCurrentState = PACK_ML.State.Complete THEN
			SUPER^.M_StateComplete();
	END_IF
	
ELSE
	SUPER^.M_StateComplete();
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Clearing" ObjectId="22f71b16-1005-4eeb-9083-a836421fff95">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^.M_StateComplete();

(*IF SUPER^.Flags[GVL.HOME_COMPLETE].Value THEN
	CASE _SeqClearing OF
		0:
			_ProcessMoveCommand.M_Home();
			_SeqClearing := _SeqClearing + 1;
		1:
			IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Idle THEN
				_SeqClearing := _SeqClearing + 1;
			END_IF
		2:
			IF NOT _ProcessMoveCommand.Error THEN
				_ProcessMoveCommand.Command := GVL.Pose2;
				_ProcessMoveCommand.M_Start();
				_SeqClearing := _SeqClearing + 1;
			ELSE
				SUPER^._M_Error(Description:='Move processor errored. Please reset and try again');
				_SeqClearing := -1;
			END_IF
		3:
			IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Execute THEN
				_SeqClearing := _SeqClearing + 1;
			END_IF
		4:
			IF _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Complete 
				OR _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Stopped 
				OR _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Aborted
				OR _ProcessMoveCommand.PropCurrentState = PACK_ML.State.Idle  THEN
					SUPER^.M_StateComplete();
					_SeqClearing := 0;
			END_IF
	END_CASE
ELSE
	SUPER^._M_Error(Description:='Drives are not homed. Please home and try again');
	_SeqClearing := -1;
END_IF

IF _ProcessMoveCommand.Error THEN
	SUPER^._M_Error(Description:='Move processor in error state. Please reset and try again');
	_SeqClearing := -1;
END_IF
*)

(*
IF ItfActiveModule &lt;&gt; 0 THEN
	//
	CASE _Seq OF
		0:
			IF NOT ItfActiveModule.PropCurrentState = PACK_ML.State.Stopped THEN
				ItfActiveModule.M_Abort();
				_Seq := 1;
			ELSE
				SUPER^.M_StateComplete();
			END_IF
		1:
			CASE ItfActiveModule.PropCurrentState OF
				PACK_ML.State.Aborted:
					ItfActiveModule.Clear();
				PACK_ML.State.Stopped:
					_Seq := 0;
			END_CASE
			
	END_CASE
ELSE
	_Seq := 0;
	SUPER^.M_StateComplete();
END_IF
*)
</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetProgram" ObjectId="550a9481-a813-4058-b463-a7e57508483c">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="ProgramNumber">
                            <type>
                              <UINT />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF ProgramNumber &gt;= GVL.PROG_ARR_BEG AND ProgramNumber &lt;= GVL.PROG_ARR_END THEN
	_CurrentPrgIdx := ProgramNumber;
	M_SetProgram := TRUE;
ELSE
	M_SetProgram := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_CurrentProgram" ObjectId="3e083bec-9978-4c4c-be28-89a14e02ca1c">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO UINT" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_CurrentProgram REF= _CurrentPrgIdx;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_CurrentCommand" ObjectId="a9b3f86e-c7f3-46d5-b8e5-0f2f5726a9f3">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO DUT_Command" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_CurrentCommand REF= _ProcessCommands.P_CurrentCommand;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_CurrentCommandIndex" ObjectId="281f805b-eec8-45a7-8dbb-820c1b32fafe">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO UINT" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_CurrentCommandIndex REF= _ProcessCommands.P_CurrentCommandIndex;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>efd5aca7-63df-4cd7-9f44-51095df5f331</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_Controller" pouType="functionBlock">
                <interface>
                  <localVars>
                    <variable name="Controller">
                      <type>
                        <derived name="ST_Controller" />
                      </type>
                    </variable>
                    <variable name="ControllerStates">
                      <type>
                        <array>
                          <dimension lower="0" upper="254" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="ControllerStatesTemp">
                      <type>
                        <array>
                          <dimension lower="0" upper="254" />
                          <baseType>
                            <BYTE />
                          </baseType>
                        </array>
                      </type>
                    </variable>
                    <variable name="ReadStringTemp">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="RecordLast">
                      <type>
                        <DINT />
                      </type>
                    </variable>
                    <variable name="ReconnectTimer">
                      <type>
                        <derived name="TON" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="PT">
                            <simpleValue value="TIME#5s0ms" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                    <variable name="_SetColor">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Red">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_Green">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="255" />
                      </initialValue>
                    </variable>
                    <variable name="_Blue">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="_SetMicrophoneState">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_MicrophoneState">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_SetPlayerID">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_PlayerID">
                      <type>
                        <derived name="E_ControllerPlayerID" />
                      </type>
                    </variable>
                    <variable name="_SetBrightness">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Brightness">
                      <type>
                        <derived name="E_ControllerBrightness" />
                      </type>
                    </variable>
                    <variable name="_SetMotorIntensity">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Motor">
                      <type>
                        <derived name="E_ControllerMotor" />
                      </type>
                    </variable>
                    <variable name="_MotorIntensity">
                      <type>
                        <USINT />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> 0-255</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_MotorIntensityDuration">
                      <type>
                        <REAL />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> ms</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_SetTriggerMode">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_TriggerModeTrigger">
                      <type>
                        <derived name="E_ControllerTrigger" />
                      </type>
                    </variable>
                    <variable name="_TriggerModeMode">
                      <type>
                        <derived name="E_ControllerTriggerMode" />
                      </type>
                    </variable>
                    <variable name="_SetTriggerForce">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_TriggerForceTrigger">
                      <type>
                        <derived name="E_ControllerTrigger" />
                      </type>
                    </variable>
                    <variable name="_TriggerForceParameter">
                      <type>
                        <derived name="E_ControllerTriggerForceParameter" />
                      </type>
                    </variable>
                    <variable name="_TriggerForceIntensity">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="FirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="States">
                      <type>
                        <string />
                      </type>
                      <initialValue>
                        <simpleValue value="'states: '" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
                      <Inheritance>
                        <Extends>PythonServerHandler</Extends>
                      </Inheritance>
                    </data>
                  </addData>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">SUPER^();

// copy over controller states when a new message is received
IF SUPER^.P_RecordNumber &lt;&gt; RecordLast THEN
	RecordLast := SUPER^.P_RecordNumber;
	IF FIND(SUPER^.P_RawReadString, States) &gt; 0 THEN // TODO this is getting messy. need to overhaul how this works
		ControllerStatesTemp := SUPER^.P_RawReadByteArray;
		FOR _i:=0 TO UINT_TO_INT(SIZEOF(ControllerStates)) - LEN(States) BY 1 DO
			ControllerStates[_i] := ControllerStatesTemp[_i + LEN(States)];
		END_FOR
		
	END_IF
END_IF

//
_M_EvaluateControllerStates(States:=ControllerStates);
_M_SetColor();
_M_SetMicrophoneState();
_M_SetPlayerID();
_M_SetBrightness();
_M_SetMotorIntensity();
_M_SetTriggerMode();
_M_SetTriggerForce();

// try to reconnect to the server when data stops?
// leave this commented out until we have a better condition
// the edge case is when the controller is connected via bluetooth 
// but for some reason the server is not connected to it.
// maybe work this issue out on the server side.
(*ReconnectTimer(IN:= RecordLast=SUPER^.P_RecordNumber);
IF ReconnectTimer.Q THEN
	ReconnectTimer(IN:=FALSE);
	SUPER^.M_Reconnect();
END_IF*)

FirstScan:=FALSE;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_EvaluateControllerStates" ObjectId="ec5a2389-0422-417f-bd11-588f38f08844">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="States">
                            <type>
                              <array>
                                <dimension lower="0" upper="254" />
                                <baseType>
                                  <BYTE />
                                </baseType>
                              </array>
                            </type>
                          </variable>
                        </inputVars>
                        <globalVars>
                          <variable name="_i">
                            <type>
                              <UINT />
                            </type>
                          </variable>
                          <variable name="_j">
                            <type>
                              <UINT />
                            </type>
                          </variable>
                          <variable name="_k">
                            <type>
                              <UINT />
                            </type>
                          </variable>
                          <variable name="_FirstScan">
                            <type>
                              <BOOL />
                            </type>
                            <initialValue>
                              <simpleValue value="TRUE" />
                            </initialValue>
                          </variable>
                          <variable name="_HeartbeatTimer">
                            <type>
                              <derived name="TON" />
                            </type>
                            <initialValue>
                              <structValue>
                                <value member="PT">
                                  <simpleValue value="TIME#2s0ms" />
                                </value>
                              </structValue>
                            </initialValue>
                          </variable>
                          <variable name="_Heartbeat">
                            <type>
                              <USINT />
                            </type>
                            <initialValue>
                              <simpleValue value="0" />
                            </initialValue>
                          </variable>
                          <variable name="_HeartbeatLast">
                            <type>
                              <USINT />
                            </type>
                            <initialValue>
                              <simpleValue value="0" />
                            </initialValue>
                          </variable>
                        </globalVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF _FirstScan THEN
	//
END_IF

//
_Heartbeat := States[0] OR States[7]; // States[0] appears to be bluetooth and States[7] appears to be wired
IF _Heartbeat &lt;&gt; _HeartbeatLast THEN
	_HeartbeatLast := _Heartbeat;
	_HeartbeatTimer(IN:=FALSE);
ELSE
	_HeartbeatTimer(IN:=TRUE);
END_IF
Controller.Connected S= NOT _HeartbeatTimer.IN;
Controller.Connected R= _HeartbeatTimer.Q;

// clear all the data if the controller disconnects
IF NOT Controller.Connected THEN
	//MemUtils.MemSet(pbyBuffer:=ADR(States), byValue:=0, dwSize:=SIZEOF(States)); 
	FOR _i:=1 TO 254 BY 1 DO // start at 1 so we dont overwrite the heartbeat
		States[_i] := 0;
	END_FOR
END_IF

Controller.Joysticks.Left.X					:= States[1];
Controller.Joysticks.Left.Y					:= States[2];
Controller.Joysticks.Right.X				:= States[3];
Controller.Joysticks.Right.Y				:= States[4];
Controller.Triggers.Left.Two				:= States[5];
Controller.Triggers.Right.Two				:= States[6];

//UNUSED									:= States[7];

Controller.Buttons.Triangle 				:= States[8].7;
Controller.Buttons.Circle 					:= States[8].6;
Controller.Buttons.Cross 					:= States[8].5;
Controller.Buttons.Square 					:= States[8].4;
Controller.Dpad								:= F_DpadState(States[8] AND 16#0F);

Controller.Joysticks.Right.ThreeButton 		:= States[9].7;
Controller.Joysticks.Left.ThreeButton 		:= States[9].6;
Controller.Buttons.Options 					:= States[9].5;
Controller.Buttons.Share 					:= States[9].4;
Controller.Triggers.Right.TwoButton 		:= States[9].3;
Controller.Triggers.Left.TwoButton 			:= States[9].2;
Controller.Triggers.Right.One 				:= States[9].1;
Controller.Triggers.Left.One 				:= States[9].0;

Controller.Buttons.PS						:= States[10].0;
Controller.Buttons.Touch					:= States[10].1;
Controller.Buttons.Mic						:= States[10].2;

//UNUSED									:= States[11];
//UNUSED									:= States[12];
//UNUSED									:= States[13];
//UNUSED									:= States[14];
//UNUSED									:= States[15];

Controller.Accelerometer.X					:= SHL(States[16], 8) OR States[17];
Controller.Accelerometer.Y					:= SHL(States[18], 8) OR States[19];
Controller.Accelerometer.Z					:= SHL(States[20], 8) OR States[21];

Controller.Gyroscope.Pitch					:= SHL(States[22], 8) OR States[23];
Controller.Gyroscope.Yaw					:= SHL(States[24], 8) OR States[25];
Controller.Gyroscope.Roll					:= SHL(States[26], 8) OR States[27];

//UNUSED									:= States[28];
//UNUSED									:= States[29];
//UNUSED									:= States[30];
//UNUSED									:= States[31];
//UNUSED									:= States[32];

Controller.Trackpads.One.ID					:= States[33] AND 16#7F;
Controller.Trackpads.One.Active				:= (States[33] AND 16#80) = 0;
Controller.Trackpads.One.X					:= SHL((States[35] AND 16#0F), 8) OR States[34];
Controller.Trackpads.One.Y					:= SHL(States[36], 4) OR SHR((States[35] AND 16#F0), 4);
Controller.Trackpads.Two.ID					:= States[37] AND 16#7F;
Controller.Trackpads.Two.Active				:= (States[37] AND 16#80) = 0;
Controller.Trackpads.Two.X					:= SHL((States[39] AND 16#0F), 8) OR States[38];
Controller.Trackpads.Two.Y					:= SHL(States[40], 4) OR SHR((States[39] AND 16#F0), 4);

//UNUSED									:= States[41];
//UNUSED									:= States[42];
//UNUSED									:= States[43];
//UNUSED									:= States[44];
//UNUSED									:= States[45];
//UNUSED									:= States[46];
//UNUSED									:= States[47];
//UNUSED									:= States[48];
//UNUSED									:= States[49];
//UNUSED									:= States[50];
//UNUSED									:= States[51];
//UNUSED									:= States[52];

// from kit-nya
Controller.Battery.State					:= SHR(States[53] AND 16#F0, 4);
Controller.Battery.Level					:= MIN((States[53] AND 16#0F) * 10 + 5, 100); // TODO this will show a value of 5 when controller is disconnected.

// dont put anything below this
_FirstScan := FALSE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetColor" ObjectId="eeb0100c-2915-48d1-9f36-b75c4e907a60">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Red">
                            <type>
                              <INT />
                            </type>
                            <initialValue>
                              <simpleValue value="0" />
                            </initialValue>
                          </variable>
                          <variable name="Green">
                            <type>
                              <INT />
                            </type>
                            <initialValue>
                              <simpleValue value="255" />
                            </initialValue>
                          </variable>
                          <variable name="Blue">
                            <type>
                              <INT />
                            </type>
                            <initialValue>
                              <simpleValue value="0" />
                            </initialValue>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Red&gt;=0 AND_THEN Red&lt;=255
	AND_THEN Green&gt;=0 AND_THEN Green&lt;=255
	AND_THEN Blue&gt;=0 AND_THEN Blue&lt;=255THEN
		M_SetColor := TRUE;
		_SetColor:=TRUE;
		_Red:=Red;
		_Green:=Green;
		_Blue:=Blue;
ELSE
	M_SetColor := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetPlayerID" ObjectId="fe5b8c1d-d289-45ab-8132-645bc019686a">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="PlayerID">
                            <type>
                              <derived name="E_ControllerPlayerID" />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">M_SetPlayerID := TRUE;
_PlayerID := PlayerID;
_SetPlayerID := TRUE;
</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetMicrophoneState" ObjectId="59d971f4-160d-4206-8fd6-464272a65157">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="State">
                            <type>
                              <BOOL />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">M_SetMicrophoneState := TRUE;
_MicrophoneState := State;
_SetMicrophoneState := TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetColor" ObjectId="54de39e9-a68c-4cdd-9c6b-c369236e0e6b">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT SUPER^._Busy AND_THEN _SetColor THEN
	_SetColor := FALSE;
	
	_Command := CONCAT('cmd: setColorI:', INT_TO_STRING(_Red));
	_Command := CONCAT(_Command, ',');
	_Command := CONCAT(_Command, INT_TO_STRING(_Green));
	_Command := CONCAT(_Command, ',');
	_Command := CONCAT(_Command, INT_TO_STRING(_Blue));
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=5);
	SUPER^(); // call super here so other methods see it busy.
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetMicrophoneState" ObjectId="04008bef-1240-44b8-b1a0-4148da719966">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT SUPER^._Busy AND _SetMicrophoneState THEN
	_SetMicrophoneState := FALSE;
	
	_Command := CONCAT('cmd: setMicrophoneState:', BOOL_TO_STRING(_MicrophoneState));
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=5);
	SUPER^(); // call super here so other methods see it busy.
END_IF;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetPlayerID" ObjectId="c145fd68-52c7-4142-a0ba-b1d06db0c33d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT SUPER^._Busy AND _SetPlayerID THEN
	_SetPlayerID := FALSE;
	
	_Command := CONCAT('cmd: setPlayerID:', INT_TO_STRING(_PlayerID));
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=5);
	SUPER^(); // call super here so other methods see it busy.
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetBrightness" ObjectId="90b7f945-cd7e-41a6-be53-3bd7b43fad70">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT SUPER^._Busy AND _SetBrightness THEN
	_SetBrightness := FALSE;
	
	_Command := CONCAT('cmd: setBrightness:', INT_TO_STRING(_Brightness));
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=5);
	SUPER^(); // call super here so other methods see it busy.
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetBrightness" ObjectId="ea400410-5d62-42d9-8299-464d48113d8b">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Brightness">
                            <type>
                              <derived name="E_ControllerBrightness" />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">M_SetBrightness := TRUE;
_Brightness := Brightness;
_SetBrightness := TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetMotorIntensity" ObjectId="1764fe0e-660f-4c27-8d1f-29b1674c5009">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Motor">
                            <type>
                              <derived name="E_ControllerMotor" />
                            </type>
                          </variable>
                          <variable name="Intensity">
                            <type>
                              <USINT />
                            </type>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> 0-255</xhtml>
                            </documentation>
                          </variable>
                          <variable name="Duration">
                            <type>
                              <REAL />
                            </type>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> s</xhtml>
                            </documentation>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Intensity &gt;=0 AND_THEN Intensity &lt;= 255 AND_THEN Duration &lt;= 5000 THEN
	M_SetMotorIntensity := TRUE;
	_SetMotorIntensity := TRUE;
	_Motor := Motor;
	_MotorIntensity := Intensity;
	_MotorIntensityDuration := Duration;
ELSE
	M_SetMotorIntensity := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetMotorIntensity" ObjectId="572923e8-2cd9-45a4-9f71-7169965a5b39">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT SUPER^._Busy AND _SetMotorIntensity THEN
	_SetMotorIntensity := FALSE;
	
	IF _Motor = E_ControllerMotor.Left THEN
		_Command := 'cmd: setLeftMotor:';
	ELSE
		_Command := 'cmd: setRightMotor:';
	END_IF
	_Command := CONCAT(_Command, USINT_TO_STRING(_MotorIntensity));
	_Command := CONCAT(_Command, ',');
	_Command := CONCAT(_Command, REAL_TO_STRING(_MotorIntensityDuration));
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=5);
	SUPER^(); // call super here so other methods see it busy.
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetTriggerMode" ObjectId="cc90c045-ff13-46bd-bee3-0677bb07476d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF NOT SUPER^._Busy AND _SetTriggerMode THEN
	_SetTriggerMode := FALSE;
	
	IF _TriggerModeTrigger = E_ControllerTrigger.Left THEN
		_Command := 'cmd: setLeftTriggerMode:';
	ELSE
		_Command := 'cmd: setRightTriggerMode:';
	END_IF
	_Command := CONCAT(_Command, INT_TO_STRING(_TriggerModeMode));
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=5);
	SUPER^(); // call super here so other methods see it busy.
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetTriggerMode" ObjectId="9cdabd76-e674-4c87-a86d-b3798e605bb0">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Trigger">
                            <type>
                              <derived name="E_ControllerTrigger" />
                            </type>
                          </variable>
                          <variable name="Mode">
                            <type>
                              <derived name="E_ControllerTriggerMode" />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">M_SetTriggerMode := TRUE;
_SetTriggerMode := TRUE;
_TriggerModeTrigger := Trigger;
_TriggerModeMode := Mode;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetTriggerForce" ObjectId="a4252e21-370c-45c8-a3d9-1c1fe732617d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_Command">
                            <type>
                              <string length="255" />
                            </type>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
IF NOT SUPER^._Busy AND _SetTriggerForce THEN
	_SetTriggerForce := FALSE;
	
	IF _TriggerForceTrigger = E_ControllerTrigger.Left THEN
		_Command := 'cmd: setLeftTriggerForce:';
	ELSE
		_Command := 'cmd: setRightTriggerForce:';
	END_IF
	_Command := CONCAT(_Command, INT_TO_STRING(_TriggerForceParameter));
	_Command := CONCAT(_Command, ',');
	_Command := CONCAT(_Command, USINT_TO_STRING(_TriggerForceIntensity));
	
	SUPER^._M_Execute(Command:=_Command, Timeout:=5);
	SUPER^(); // call super here so other methods see it busy.
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetTriggerForce" ObjectId="2469dbae-9da4-4cf0-aaf5-0b5c14fa7e2d">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Trigger">
                            <type>
                              <derived name="E_ControllerTrigger" />
                            </type>
                          </variable>
                          <variable name="Parameter">
                            <type>
                              <derived name="E_ControllerTriggerForceParameter" />
                            </type>
                          </variable>
                          <variable name="Intensity">
                            <type>
                              <USINT />
                            </type>
                            <documentation>
                              <xhtml xmlns="http://www.w3.org/1999/xhtml"> 0-255</xhtml>
                            </documentation>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Intensity &gt;= 0 AND Intensity &lt;= 255 THEN
	M_SetTriggerForce := TRUE;
	_SetTriggerForce:=TRUE;
	_TriggerForceTrigger := Trigger;
	_TriggerForceParameter := Parameter;
	_TriggerForceIntensity := Intensity;
ELSE
	M_SetTriggerForce := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_State" ObjectId="8f9874b7-a4ba-4163-b1b5-6ca35856054f">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO ST_Controller" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_State REF= Controller;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6c3bd905-e561-44be-a365-7f9abc521e72</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="PythonServerHandler" pouType="functionBlock">
                <interface>
                  <inputVars>
                    <variable name="sIpAddress">
                      <type>
                        <string length="19" />
                      </type>
                      <initialValue>
                        <simpleValue value="'127.0.0.1'" />
                      </initialValue>
                    </variable>
                    <variable name="uPort">
                      <type>
                        <UINT />
                      </type>
                      <initialValue>
                        <simpleValue value="50011" />
                      </initialValue>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="_Done">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Busy">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_ErrorDescription">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="_Response">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="_WorkerUid">
                      <type>
                        <string />
                      </type>
                    </variable>
                    <variable name="_Execute">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_Reset">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="FALSE" />
                      </initialValue>
                    </variable>
                    <variable name="_ResetRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_Step">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_Command">
                      <type>
                        <string length="255" />
                      </type>
                    </variable>
                    <variable name="_ReadRecordLast">
                      <type>
                        <DINT />
                      </type>
                    </variable>
                    <variable name="_TcpClient">
                      <type>
                        <derived name="TcpClient" />
                      </type>
                    </variable>
                    <variable name="_TimeoutTimer">
                      <type>
                        <derived name="TON" />
                      </type>
                      <initialValue>
                        <structValue>
                          <value member="PT">
                            <simpleValue value="TIME#2m0s0ms" />
                          </value>
                        </structValue>
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">_TimeoutTimer(IN:=_Step &gt; 0);
IF _TimeoutTimer.Q THEN
	_Step := 0;
	_Error := TRUE;
	_ErrorDescription := 'timed out waiting for response.';
END_IF

_ResetRtrig(CLK:=_Reset);
IF _ResetRtrig.Q THEN
	_Reset := FALSE;
	_Step := 0;
END_IF

_Done := _Step = 0;
_Busy := NOT _Done;

CASE _Step OF
	0: // IDLE
		IF _Execute THEN
			_Execute := FALSE;
			IF _TcpClient._M_Write(Data:=_Command) THEN
				_ReadRecordLast := _TcpClient.dRecordRead;
				_Step := _Step + 1;
			ELSE
				_Step := 0;
			END_IF
		END_IF
	
	1: // WAIT
		IF _TcpClient.dRecordRead &lt;&gt; _ReadRecordLast THEN
			_ReadRecordLast := _TcpClient.dRecordRead;
			IF find(_TcpClient.strRead, 'res: ') = 1 THEN
				MemUtils.MemSet(
					pbyBuffer:=ADR(_Response),
					byValue:=0,
					dwSize:=SIZEOF(_Response));
				_Response := _TcpClient.strRead;
				_Step := 0;
				
			ELSIF find(_TcpClient.strRead, 'worker uid: ') = 1 THEN
				MemUtils.MemSet(
					pbyBuffer:=ADR(_WorkerUid),
					byValue:=0,
					dwSize:=SIZEOF(_WorkerUid));
				_WorkerUid := DELETE(STR:=_TcpClient.strRead, LEN:=12, POS:=1);
				
			ELSIF find(_TcpClient.strRead, 'command uid: ') = 1 THEN
				MemUtils.MemSet(
					pbyBuffer:=ADR(_WorkerUid),
					byValue:=0,
					dwSize:=SIZEOF(_WorkerUid));
				_WorkerUid := DELETE(STR:=_TcpClient.strRead, LEN:=12, POS:=1);
				
			END_IF
		END_IF
		
END_CASE

_TcpClient(
	bEnable:= TRUE, 
	strIpAddress:= sIpAddress, 
	uPort:= uPort,
	bBusyWrite=&gt; , 
	bDoneWrite=&gt; , 
	bBusyRead=&gt; , 
	dRecordRead=&gt; , 
	strRead=&gt; );</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_Execute" ObjectId="1d54f7e6-4fa6-4e0f-8c65-6228efc66fc8">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="Command">
                            <type>
                              <string length="255" />
                            </type>
                            <initialValue>
                              <simpleValue value="''" />
                            </initialValue>
                          </variable>
                          <variable name="Timeout">
                            <type>
                              <UDINT />
                            </type>
                            <initialValue>
                              <simpleValue value="60" />
                            </initialValue>
                          </variable>
                        </inputVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Protected="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_Execute := TRUE;
_Command:=Command;
_TimeoutTimer.PT := UDINT_TO_TIME(Timeout * 1000);</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Cancel" ObjectId="75d216d3-a4d7-46fb-a956-69a865fd5623">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF _WorkerUid &lt;&gt; '' THEN
	M_Cancel := TRUE;
	_Command := 'kill: ';
	_Command := CONCAT(_Command, _WorkerUid);
	_WorkerUid := ''; // lets make sure to forget this uid in case its used again for something else
	_Step := 0;
	_Execute := TRUE;
	
ELSE
	M_Cancel := FALSE;
	
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Reset" ObjectId="8ff5eef9-28b5-4305-bebc-5e20570de374">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_Reset := TRUE;
_Error := FALSE;
_ErrorDescription := '';</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_Reconnect" ObjectId="731c66e4-a086-48d9-9121-30312d5080f2">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_TcpClient._M_Reconnect();</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_Done" ObjectId="708b755f-cbb5-42c0-aace-6ce4a67def1f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_Done := _Done;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_Busy" ObjectId="6d24286d-e3e1-41d7-ba8e-32c4455b87f8">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_Busy := _Busy;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_Error" ObjectId="7b9a3d13-95e9-4410-9f3b-3b6399fa6fb2">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_Error := _Error;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_ErrorDescription" ObjectId="f546bf4a-eaa1-4c6c-bb65-aa6dea22cd5e">
                      <interface>
                        <returnType>
                          <string />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_ErrorDescription := _ErrorDescription;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_Response" ObjectId="bb2ba885-657e-4ce3-9507-abb02ea1162c">
                      <interface>
                        <returnType>
                          <string length="255" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_Response := _Response;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_RawReadString" ObjectId="1f6a1927-a95b-431e-8983-0d7d73e6caa0">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO STRING(255)" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_RawReadString REF= _TcpClient.strRead;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_RawReadByteArray" ObjectId="8e5ce9ac-6249-45b2-9d47-43e3c6ae2b18">
                      <interface>
                        <returnType>
                          <array>
                            <dimension lower="0" upper="254" />
                            <baseType>
                              <BYTE />
                            </baseType>
                          </array>
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_RawReadByteArray := _TcpClient.byteArrayRead;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_RecordNumber" ObjectId="c9f5a0ac-c563-44aa-8bfd-7e4ab4c918a0">
                      <interface>
                        <returnType>
                          <DINT />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_RecordNumber := _TcpClient.dRecordRead;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_Connected" ObjectId="b5d488ec-005f-42a5-ae5d-b73e6b84cd93">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO BOOL" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_Connected REF= _TcpClient.bConnected;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>804277ad-245a-4a3c-a537-920a77a195da</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="F_DpadState" pouType="function">
                <interface>
                  <returnType>
                    <derived name="ST_Dpad" />
                  </returnType>
                  <inputVars>
                    <variable name="State">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                  </inputVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE State OF
	0:
		F_DpadState.Up := TRUE;
		F_DpadState.Down := FALSE;
		F_DpadState.Left := FALSE;
		F_DpadState.Right := FALSE;
	1:
		F_DpadState.Up := TRUE;
		F_DpadState.Down := FALSE;
		F_DpadState.Left := FALSE;
		F_DpadState.Right := TRUE;
	2:
		F_DpadState.Up := FALSE;
		F_DpadState.Down := FALSE;
		F_DpadState.Left := FALSE;
		F_DpadState.Right := TRUE;
	3:
		F_DpadState.Up := FALSE;
		F_DpadState.Down := TRUE;
		F_DpadState.Left := FALSE;
		F_DpadState.Right := TRUE;
	4:
		F_DpadState.Up := FALSE;
		F_DpadState.Down := TRUE;
		F_DpadState.Left := FALSE;
		F_DpadState.Right := FALSE;
	5:
		F_DpadState.Up := FALSE;
		F_DpadState.Down := TRUE;
		F_DpadState.Left := TRUE;
		F_DpadState.Right := FALSE;
	6:
		F_DpadState.Up := FALSE;
		F_DpadState.Down := FALSE;
		F_DpadState.Left := TRUE;
		F_DpadState.Right := FALSE;
	7:
		F_DpadState.Up := TRUE;
		F_DpadState.Down := FALSE;
		F_DpadState.Left := TRUE;
		F_DpadState.Right := FALSE;
		
ELSE
	F_DpadState.Up := FALSE;
	F_DpadState.Down := FALSE;
	F_DpadState.Left := FALSE;
	F_DpadState.Right := FALSE;
		
END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c7c6193c-9fb2-4a99-8fe9-b8b80e6ab7d7</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_GroupHandler" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                  </inOutVars>
                  <inputVars>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="StoredPositions">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.POS_ARR_BEG..GVL.POS_ARR_END] OF DUT_StoredPosition" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="Busy">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorID">
                      <type>
                        <derived name="SMC_ERROR" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="EnableFtrig">
                      <type>
                        <derived name="F_TRIG" />
                      </type>
                    </variable>
                    <variable name="_SeqEnableGroup">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqDisableGroup">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceSetKinematics">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SequenceSetCoordTrans">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SeqResetGroup">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_SMC_GroupPower">
                      <type>
                        <derived name="SMC_GroupPower" />
                      </type>
                    </variable>
                    <variable name="_GroupPower">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_MC_GroupEnable">
                      <type>
                        <derived name="MC_GroupEnable" />
                      </type>
                    </variable>
                    <variable name="_MC_GroupDisable">
                      <type>
                        <derived name="MC_GroupDisable" />
                      </type>
                    </variable>
                    <variable name="_MC_GroupReset">
                      <type>
                        <derived name="MC_GroupReset" />
                      </type>
                    </variable>
                    <variable name="_MC_GroupReadActualPosition">
                      <type>
                        <derived name="MC_GroupReadActualPosition" />
                      </type>
                    </variable>
                    <variable name="_SMC_SetKinConfiguration">
                      <type>
                        <derived name="SMC_SetKinConfiguration" />
                      </type>
                    </variable>
                    <variable name="_MC_SetCoordinateTransform">
                      <type>
                        <derived name="MC_SetCoordinateTransform" />
                      </type>
                      <documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> coordinate transforms</xhtml>
                      </documentation>
                    </variable>
                    <variable name="_SMC_GroupSetTool">
                      <type>
                        <derived name="SMC_GroupSetTool" />
                      </type>
                    </variable>
                    <variable name="_MC_COORD_REF">
                      <type>
                        <derived name="MC_COORD_REF" />
                      </type>
                    </variable>
                    <variable name="_CoordinateSystem">
                      <type>
                        <derived name="SMC_COORD_SYSTEM" />
                      </type>
                      <initialValue>
                        <simpleValue value="SMC_COORD_SYSTEM.ACS" />
                      </initialValue>
                    </variable>
                    <variable name="_EnableGroup">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_DisableGroup">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_GroupEnabled">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_ResetGroup">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_SetKinematics">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_SetCoordinates">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_KinematicsSet">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_MC_GroupReadStatus">
                      <type>
                        <derived name="MC_GroupReadStatus" />
                      </type>
                    </variable>
                    <variable name="_DUT_GroupStatus">
                      <type>
                        <derived name="DUT_GroupStatus" />
                      </type>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_GROUP_POWER_ON">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="22" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_POWER_ON">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="24" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_GROUP_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="35" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_READ_POSITION">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="40" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_POSITION">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_SET_KINEMATICS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="60" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_KINEMATICS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="70" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_SET_COORD_TRANS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="71" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_COORD_TRANS">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="72" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_GROUP_DISABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="100" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_DISABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="110" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_GROUP_POWER_OFF">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="120" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">//
Busy := _SeqEnableGroup &lt;&gt; 0
		OR _SeqDisableGroup &lt;&gt; 0
		OR _SequenceSetKinematics &lt;&gt; 0
		OR _SequenceSetCoordTrans &lt;&gt; 0
		OR _SeqResetGroup &lt;&gt; 0;
		
EnableFtrig(CLK:=Enable);
IF EnableFtrig.Q THEN
	M_DisableGroup();
END_IF

//
_M_EnableGroup();
_M_DisableGroup();
_M_SetKinematics();
_M_ResetGroup();

_MC_GroupReadStatus(
	AxisGroup:= AxisGroup, 
	Enable:= Enable, 
	Valid=&gt; _DUT_GroupStatus.Valid, 
	Busy=&gt; _DUT_GroupStatus.Busy, 
	Error=&gt; _DUT_GroupStatus.Error, 
	ErrorID=&gt; _DUT_GroupStatus.ErrorID, 
	GroupMoving=&gt; _DUT_GroupStatus.GroupMoving, 
	GroupHoming=&gt; _DUT_GroupStatus.GroupHoming, 
	GroupErrorStop=&gt; _DUT_GroupStatus.GroupErrorStop, 
	GroupStandby=&gt; _DUT_GroupStatus.GroupStandby, 
	GroupStopping=&gt; _DUT_GroupStatus.GroupStopping, 
	GroupDisabled=&gt; _DUT_GroupStatus.GroupDisabled, 
	TrackingDynamicCS=&gt; _DUT_GroupStatus.TrackingDynamicCS, 
	InSync=&gt; _DUT_GroupStatus.InSync, 
	ActiveMovementId=&gt; _DUT_GroupStatus.ActiveMovementId, 
	FirstReferencedMovementId=&gt; _DUT_GroupStatus.FirstReferencedMovementId, 
	LastAcceptedMovementId=&gt; _DUT_GroupStatus.LastAcceptedMovementId, 
	PositionLag=&gt; _DUT_GroupStatus.PositionLag, 
	OrientationLag=&gt; _DUT_GroupStatus.OrientationLag);

_MC_SetCoordinateTransform(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	CoordTransform:= _MC_COORD_REF, 
	CoordSystem:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );

_SMC_GroupSetTool(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	ToolOffset:= _MC_COORD_REF, 
	Done=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );

_SMC_GroupPower(
	AxisGroup:= AxisGroup, 
	Enable:= _GroupPower, 
	bRegulatorOn:= _GroupPower, 
	bDriveStart:= _GroupPower, 
	Status=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );

_MC_GroupEnable(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	CompatibilityOptions:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
	
_MC_GroupDisable(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );

_MC_GroupReset(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );

_MC_GroupReadActualPosition(
	AxisGroup:= AxisGroup, 
	Enable:= , 
	CoordSystem:= _CoordinateSystem, 
	Valid=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; , 
	Position=&gt; , 
	KinematicConfig=&gt; );
	
_SMC_SetKinConfiguration(
	AxisGroup:= AxisGroup, 
	Execute:= , 
	ConfigData:= _MC_GroupReadActualPosition.KinematicConfig, 
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_EnableGroup" ObjectId="e90d231e-c7b2-4663-a0b5-e03a8bc3210e">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
CASE _SeqEnableGroup OF
	0: // IDLE
		IF _EnableGroup THEN
			_EnableGroup := FALSE;
			_GroupEnabled := FALSE;
			_MC_GroupEnable.Execute := FALSE;
			_SeqEnableGroup := _SeqEnableGroup + 1;
		END_IF
		
	1:
		_GroupPower := TRUE;
		_SeqEnableGroup := _SeqEnableGroup + 1;
		
	2:
		// TODO add timeout timer here
		IF _SMC_GroupPower.Error THEN
			Error := TRUE;
			ErrorID := _SMC_GroupPower.ErrorID;
			_SeqEnableGroup := 0;
		ELSIF _SMC_GroupPower.Status THEN
			_SeqEnableGroup := _SeqEnableGroup + 1;
		END_IF
		
	3:
		_MC_GroupEnable.Execute := TRUE;
		_SeqEnableGroup := _SeqEnableGroup + 1;
		
	4:
		// TODO add timeout timer here
		IF NOT _MC_GroupEnable.Busy THEN // this is a hack. we need to figure out is the group is already enabled first
			_GroupEnabled := TRUE;
			//_MC_GroupEnable.Execute := FALSE;
			_SeqEnableGroup := 0;
		END_IF;
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_SetKinematics" ObjectId="a1a7e940-4a9a-4003-92e9-8b3905bc4ae4">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
CASE _SequenceSetKinematics OF
	0: // IDLE
		IF _SetKinematics THEN
			_SetKinematics := FALSE;
			_KinematicsSet := FALSE;
			_MC_GroupReadActualPosition.Enable := FALSE;
			_SMC_SetKinConfiguration.Execute := FALSE;
			_SequenceSetKinematics := _SequenceSetKinematics + 1;
		END_IF
		
	1: // read group position
		_MC_GroupReadActualPosition.Enable := TRUE;
		_SequenceSetKinematics := _SequenceSetKinematics + 1;
		
	2: // wait for group read position
		// TODO add timeout timer here
		IF _MC_GroupReadActualPosition.Error THEN
			Error := TRUE;
			ErrorID := _MC_GroupReadActualPosition.ErrorID;
			_SequenceSetKinematics := 0;
		ELSIF _MC_GroupReadActualPosition.Valid THEN
			_SequenceSetKinematics := _SequenceSetKinematics + 1;
		END_IF
		
	3: // set kinematics
		_SMC_SetKinConfiguration.Execute := TRUE;
		_SequenceSetKinematics := _SequenceSetKinematics + 1;
		
	4: // wait for set kinematics
		// TODO add timeout timer here
		IF _SMC_SetKinConfiguration.Error THEN
			Error := TRUE;
			ErrorID := _SMC_SetKinConfiguration.ErrorID;
			_SequenceSetKinematics := 0;
		ELSIF _SMC_SetKinConfiguration.Done THEN
			_SMC_SetKinConfiguration.Execute := FALSE;
			_SequenceSetKinematics := _SequenceSetKinematics + 1;
		END_IF
		
	5:
		_SetCoordinates := TRUE;
		_SequenceSetKinematics := _SequenceSetKinematics + 1;
	
	6:
		// TODO add timeout timer here
		IF _MC_SetCoordinateTransform.Error THEN
			Error := TRUE;
			ErrorID := _MC_SetCoordinateTransform.ErrorID;
			_SequenceSetCoordTrans := 0;
			_SequenceSetKinematics := 0;
		ELSIF _SMC_GroupSetTool.Error THEN
			Error := TRUE;
			ErrorID := _SMC_GroupSetTool.ErrorID;
			_SequenceSetCoordTrans := 0;
			_SequenceSetKinematics := 0;
		ELSIF _SequenceSetCoordTrans &lt;= 0 THEN
			_KinematicsSet := TRUE;
			_SequenceSetKinematics := 0;
		END_IF
		
END_CASE

CASE _SequenceSetCoordTrans OF
	0: //
		IF _SetCoordinates THEN
			_SetCoordinates := FALSE;
			_SMC_GroupSetTool.Execute := FALSE;
			_MC_SetCoordinateTransform.Execute := FALSE;
			_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		END_IF
	
	1: //
		_MC_COORD_REF := StoredPositions[GVL.MCS_POS_IDX].Position; // MCS
		_MC_SetCoordinateTransform.CoordSystem := SMC_COORD_SYSTEM.MCS;
		_MC_SetCoordinateTransform.Execute := TRUE;
		_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		
	2: //
		// TODO add timeout timer here
		IF _MC_SetCoordinateTransform.Error THEN
			(*SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_SetCoordinateTransform.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_SetCoordinateTransform.ErrorID,
													SMC_Language_Type.english)))));*)
			_SequenceSetCoordTrans := 10; // error step so we dont spam errors
			
		ELSIF _MC_SetCoordinateTransform.Done THEN
			_MC_SetCoordinateTransform.Execute := FALSE;
			_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		END_IF
		
	3: //
		_MC_COORD_REF := StoredPositions[GVL.PC1_POS_IDX].Position; // PCS 1
		_MC_SetCoordinateTransform.CoordSystem := SMC_COORD_SYSTEM.PCS_1;
		_MC_SetCoordinateTransform.Execute := TRUE;
		_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		
	4: //
		// TODO add timeout timer here
		IF _MC_SetCoordinateTransform.Error THEN
			(*SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_SetCoordinateTransform.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_SetCoordinateTransform.ErrorID,
													SMC_Language_Type.english)))));*)
			_SequenceSetCoordTrans := 10; // error step so we dont spam errors
			
		ELSIF _MC_SetCoordinateTransform.Done THEN
			_MC_SetCoordinateTransform.Execute := FALSE;
			_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		END_IF
		
	5: //
		_MC_COORD_REF := StoredPositions[GVL.PC2_POS_IDX].Position; // PCS 2
		_MC_SetCoordinateTransform.CoordSystem := SMC_COORD_SYSTEM.PCS_2;
		_MC_SetCoordinateTransform.Execute := TRUE;
		_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		
	6: //
		// TODO add timeout timer here
		IF _MC_SetCoordinateTransform.Error THEN
			(*SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_MC_SetCoordinateTransform.ErrorID),
										CONCAT(' ', SMC_ErrorString(_MC_SetCoordinateTransform.ErrorID,
													SMC_Language_Type.english)))));*)
			_SequenceSetCoordTrans := 10; // error step so we dont spam errors
			
		ELSIF _MC_SetCoordinateTransform.Done THEN
			_MC_SetCoordinateTransform.Execute := FALSE;
			_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		END_IF
		
	7:  // set tool offset
		_MC_COORD_REF := StoredPositions[GVL.TCP_POS_IDX].Position; // TCP
		_SMC_GroupSetTool.Execute := TRUE;
		_SequenceSetCoordTrans := _SequenceSetCoordTrans + 1;
		
	8: // monitor tool offset
		// TODO add timeout timer here
		IF _SMC_GroupSetTool.Error THEN
			(*SUPER^.M_Error(Description:=CONCAT('Move Command Error: ',
										CONCAT(TO_STRING(_SMC_GroupSetTool.ErrorID),
										CONCAT(' ', SMC_ErrorString(_SMC_GroupSetTool.ErrorID,
													SMC_Language_Type.english)))));*)
			_SequenceSetCoordTrans := 999; // error step so we dont spam errors
			
		ELSIF _SMC_GroupSetTool.Done THEN
			_SMC_GroupSetTool.Execute := FALSE;
			_SequenceSetCoordTrans := 0;
		END_IF

END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_DisableGroup" ObjectId="17aa3a99-9fea-4672-a49a-0a0b6efeb4bc">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
CASE _SeqDisableGroup OF
	0: // IDLE
		IF _DisableGroup THEN
			_DisableGroup := FALSE;
			_MC_GroupDisable.Execute := FALSE;
			_MC_GroupEnable.Execute := FALSE;
			_SeqDisableGroup := _SeqDisableGroup + 1;
		END_IF
		
	1:
		_MC_GroupDisable.Execute := TRUE;
		_SeqDisableGroup := _SeqDisableGroup + 1;
		
	2:
		// TODO add timeout timer here
		IF NOT _MC_GroupDisable.Busy THEN // this is a hack. we need to figure out is the group is already disabled first
			_SeqDisableGroup := _SeqDisableGroup + 1;;
		END_IF
		
	3:
		_MC_GroupDisable.Execute := FALSE;
		_GroupEnabled := FALSE;
		_KinematicsSet := FALSE;
		_GroupPower := FALSE;
		_SeqDisableGroup := 0;
		
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_EnableGroup" ObjectId="42afec78-5201-449e-b1b2-e5ed96e5c8b5">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable AND NOT Error THEN
	M_EnableGroup := TRUE;
	_EnableGroup := TRUE;
	_GroupEnabled := FALSE;
ELSE
	M_EnableGroup := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_ResetGroup" ObjectId="93550740-bce9-4d08-8c7b-68cd49bbfaa5">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
CASE _SeqResetGroup OF
	0: // IDLE
		IF _ResetGroup THEN
			_ResetGroup := FALSE;
			//IF Error THEN
				_SeqResetGroup := _SeqResetGroup + 1;
			//END_IF
		END_IF
		
	1:
		Error := FALSE;
		ErrorID := SMC_NO_ERROR;
		_MC_GroupReset.Execute := TRUE;
		_SeqResetGroup := _SeqResetGroup + 1;
	
	2: 
		_MC_GroupReset.Execute := FALSE;
		//
		_SeqEnableGroup := 0;
		_SeqDisableGroup := 0;
		_SequenceSetKinematics := 0;
		_SequenceSetCoordTrans := 0;
		_SeqResetGroup := 0;
	
END_CASE</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_DisableGroup" ObjectId="a0a3246f-e788-42ad-9174-44a6b0b5864f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">//IF NOT Error THEN
	M_DisableGroup := TRUE;
	_DisableGroup := TRUE;
//ELSE
	//M_DisableGroup := FALSE;
//END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetKinematics" ObjectId="c272ee22-b56a-4a21-938f-13e5df726fce">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <inputVars>
                          <variable name="CoordinateSystem">
                            <type>
                              <derived name="SMC_COORD_SYSTEM" />
                            </type>
                          </variable>
                        </inputVars>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF _GroupEnabled AND NOT Error THEN
	M_SetKinematics := TRUE;
	_CoordinateSystem := CoordinateSystem;
	_SetKinematics := TRUE;
	_KinematicsSet := FALSE;
ELSE
	M_SetKinematics := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_ResetGroup" ObjectId="f7b0fb23-a5d3-4128-86d4-545ea8eb93f8">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">_ResetGroup := TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_GroupEnabled" ObjectId="6c9aae5d-4785-4006-b6e7-a4e70fe8d11f">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_GroupEnabled := _GroupEnabled;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_KinematicsSet" ObjectId="ef1554af-fa41-4177-8dda-b53f3d39fa97">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_KinematicsSet := _KinematicsSet;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                    <Property name="P_GroupStatus" ObjectId="7660ae4b-8965-424f-b336-9965f704e650">
                      <interface>
                        <returnType>
                          <derived name="REFERENCE TO DUT_GroupStatus" />
                        </returnType>
                        <Attributes>
                          <Attribute Name="monitoring" Value="variable" />
                        </Attributes>
                      </interface>
                      <GetAccessor>
                        <interface>
                          <addData>
                            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                              <Attributes>
                                <Attribute Name="monitoring" Value="variable" />
                              </Attributes>
                            </data>
                          </addData>
                        </interface>
                        <body>
                          <ST>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml">P_GroupStatus REF= _DUT_GroupStatus;</xhtml>
                          </ST>
                        </body>
                        <addData />
                      </GetAccessor>
                      <addData />
                    </Property>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>f6416d9a-a888-4f6b-9b8f-cb306c7639e1</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="F_SetJogButtons" pouType="function">
                <interface>
                  <returnType>
                    <INT />
                  </returnType>
                  <inputVars>
                    <variable name="CoordinateSystem">
                      <type>
                        <derived name="SMC_COORD_SYSTEM" />
                      </type>
                    </variable>
                    <variable name="ABC_as_ACS">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                  </inputVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">CASE CoordinateSystem OF
	SMC_COORD_SYSTEM.ACS:
		F_SetJogButtons := 0;
	SMC_COORD_SYSTEM.MCS:
		IF ABC_as_ACS THEN
			F_SetJogButtons := 2;
		ELSE
			F_SetJogButtons := 1;
		END_IF
	SMC_COORD_SYSTEM.PCS_1:
		IF ABC_as_ACS THEN
			F_SetJogButtons:= 2;
		ELSE
			F_SetJogButtons := 1;
		END_IF
	SMC_COORD_SYSTEM.PCS_2:
		IF ABC_as_ACS THEN
			F_SetJogButtons := 2;
		ELSE
			F_SetJogButtons := 1;
		END_IF
	SMC_COORD_SYSTEM.TCS:
		IF ABC_as_ACS THEN
			F_SetJogButtons := 2;
		ELSE
			F_SetJogButtons := 1;
		END_IF
	SMC_COORD_SYSTEM.WCS:
		IF ABC_as_ACS THEN
			F_SetJogButtons := 2;
		ELSE
			F_SetJogButtons := 1;
		END_IF
	ELSE
		F_SetJogButtons := 0;
		
END_CASE</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>640ac73b-ff1c-4df1-a978-e5b05f9ea455</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="FB_HomingProcessor" pouType="functionBlock">
                <interface>
                  <inOutVars>
                    <variable name="J1">
                      <type>
                        <derived name="AXIS_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="J2">
                      <type>
                        <derived name="AXIS_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="J3">
                      <type>
                        <derived name="AXIS_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="J4">
                      <type>
                        <derived name="AXIS_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="J5">
                      <type>
                        <derived name="AXIS_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="J6">
                      <type>
                        <derived name="AXIS_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="AxisGroup">
                      <type>
                        <derived name="AXIS_GROUP_REF_SM3" />
                      </type>
                    </variable>
                    <variable name="GroupHandler">
                      <type>
                        <derived name="FB_GroupHandler" />
                      </type>
                    </variable>
                    <variable name="Controller">
                      <type>
                        <derived name="FB_Controller" />
                      </type>
                    </variable>
                  </inOutVars>
                  <inputVars>
                    <variable name="J1_Limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="J2_Limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="J3_Limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="J4_Limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="J5_Limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="J6_Limit">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Enable">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Reset">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="StoredPositions">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.POS_ARR_BEG..GVL.POS_ARR_END] OF DUT_StoredPosition" />
                      </type>
                    </variable>
                    <variable name="VisionRegisters">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.VIS_ARR_BEG..GVL.VIS_ARR_END] OF DUT_VisionRegister" />
                      </type>
                    </variable>
                    <variable name="Flags">
                      <type>
                        <derived name="REFERENCE TO ARRAY [GVL.FLG_ARR_BEG..GVL.FLG_ARR_END] OF DUT_Flags" />
                      </type>
                    </variable>
                  </inputVars>
                  <outputVars>
                    <variable name="Done">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Busy">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="Error">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="ErrorID">
                      <type>
                        <derived name="SMC_ERROR" />
                      </type>
                    </variable>
                  </outputVars>
                  <localVars>
                    <variable name="_ExecuteRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ExecuteFtrig">
                      <type>
                        <derived name="F_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ResetRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_ErrorRtrig">
                      <type>
                        <derived name="R_TRIG" />
                      </type>
                    </variable>
                    <variable name="_SequenceMain">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_StartHoming">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_SMC_Homing_J1">
                      <type>
                        <derived name="SMC_Homing" />
                      </type>
                    </variable>
                    <variable name="_SMC_Homing_J2">
                      <type>
                        <derived name="SMC_Homing" />
                      </type>
                    </variable>
                    <variable name="_SMC_Homing_J3">
                      <type>
                        <derived name="SMC_Homing" />
                      </type>
                    </variable>
                    <variable name="_SMC_Homing_J4">
                      <type>
                        <derived name="SMC_Homing" />
                      </type>
                    </variable>
                    <variable name="_SMC_Homing_J5">
                      <type>
                        <derived name="SMC_Homing" />
                      </type>
                    </variable>
                    <variable name="_SMC_Homing_J6">
                      <type>
                        <derived name="SMC_Homing" />
                      </type>
                    </variable>
                    <variable name="_MC_SetPosition_J1">
                      <type>
                        <derived name="MC_SetPosition" />
                      </type>
                    </variable>
                    <variable name="_MC_SetPosition_J2">
                      <type>
                        <derived name="MC_SetPosition" />
                      </type>
                    </variable>
                    <variable name="_MC_SetPosition_J3">
                      <type>
                        <derived name="MC_SetPosition" />
                      </type>
                    </variable>
                    <variable name="_MC_SetPosition_J4">
                      <type>
                        <derived name="MC_SetPosition" />
                      </type>
                    </variable>
                    <variable name="_MC_SetPosition_J5">
                      <type>
                        <derived name="MC_SetPosition" />
                      </type>
                    </variable>
                    <variable name="_MC_SetPosition_J6">
                      <type>
                        <derived name="MC_SetPosition" />
                      </type>
                    </variable>
                    <variable name="_HomingVelocityFast">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="10.0" />
                      </initialValue>
                    </variable>
                    <variable name="_HomingVelocitySlow">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="5.0" />
                      </initialValue>
                    </variable>
                    <variable name="_HomingVelocitySlowSlow">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="1.0" />
                      </initialValue>
                    </variable>
                    <variable name="_HomingAcceleration">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="1000.0" />
                      </initialValue>
                    </variable>
                    <variable name="_HomingJerk">
                      <type>
                        <LREAL />
                      </type>
                      <initialValue>
                        <simpleValue value="10000.0" />
                      </initialValue>
                    </variable>
                    <variable name="_MoveToPose">
                      <type>
                        <BOOL />
                      </type>
                    </variable>
                    <variable name="_MoveCommand">
                      <type>
                        <derived name="ST_MoveCmd" />
                      </type>
                    </variable>
                    <variable name="_MoveCommandProcessor">
                      <type>
                        <derived name="MoveCmdProcessor" />
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <INT />
                      </type>
                    </variable>
                    <variable name="_FirstScan">
                      <type>
                        <BOOL />
                      </type>
                      <initialValue>
                        <simpleValue value="TRUE" />
                      </initialValue>
                    </variable>
                  </localVars>
                  <localVars constant="true">
                    <variable name="STEP_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="9999" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_IDLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="0" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_GROUP_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="30" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_ENABLE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="35" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_FAST_HOME_G1">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="40" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_FAST_HOME_G1">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="45" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_SLOW_HOME_G1">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="50" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_SLOW_HOME_G1">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="55" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_FAST_HOME_G2">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="60" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_FAST_HOME_G2">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="65" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_SLOW_HOME_G2">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="70" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_SLOW_HOME_G2">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="75" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_FAST_HOME_G3">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="80" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_FAST_HOME_G3">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="85" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_SLOW_HOME_G3">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="90" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_SLOW_HOME_G3">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="95" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_MOVE_TO_POSE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1000" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_MOVE_TO_POSE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1010" />
                      </initialValue>
                    </variable>
                    <variable name="STEP_WAIT_POSE_DONE">
                      <type>
                        <INT />
                      </type>
                      <initialValue>
                        <simpleValue value="1020" />
                      </initialValue>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">_ExecuteRtrig(CLK:=);
_ExecuteFtrig(CLK:=);
_ResetRtrig(CLK:=Reset);

IF _FirstScan THEN
	//
END_IF

CASE _SequenceMain OF
	STEP_DONE: // done
		Busy := FALSE;
		Done := TRUE;
		_MoveCommandProcessor.M_Home();
		_SequenceMain := STEP_IDLE;
		
		_SMC_Homing_J1.bExecute := FALSE;
		_SMC_Homing_J2.bExecute := FALSE;
		_SMC_Homing_J3.bExecute := FALSE;
		_SMC_Homing_J4.bExecute := FALSE;
		_SMC_Homing_J5.bExecute := FALSE;
		_SMC_Homing_J6.bExecute := FALSE;
		J1.bSWLimitEnable := TRUE;
		J2.bSWLimitEnable := TRUE;
		J3.bSWLimitEnable := TRUE;
		J4.bSWLimitEnable := TRUE;
		J5.bSWLimitEnable := TRUE;
		J6.bSWLimitEnable := TRUE;
		
	STEP_IDLE: // IDLE
		IF _StartHoming AND Enable THEN
			_StartHoming := FALSE;
			Busy := TRUE;
			Done := FALSE;
			_SequenceMain := STEP_GROUP_ENABLE;
			Flags[GVL.HOME_COMPLETE].Value := FALSE;
		END_IF
		
	STEP_GROUP_ENABLE:
		IF GroupHandler.M_EnableGroup() THEN
			_SequenceMain := STEP_WAIT_ENABLE;
		ELSE
			_SequenceMain := STEP_DONE;
			Error := TRUE;
			ErrorID := GroupHandler.ErrorID;
		END_IF
		
	STEP_WAIT_ENABLE:
		// TODO add timeout timer here
		IF GroupHandler.P_GroupEnabled THEN
			_SequenceMain := STEP_FAST_HOME_G1;
		END_IF;
		
	STEP_FAST_HOME_G1:	
		_SMC_Homing_J1.bExecute := TRUE;
		_SMC_Homing_J2.bExecute := TRUE;
		_SMC_Homing_J3.bExecute := TRUE;
		_SMC_Homing_J1.bReturnToZero := FALSE;
		_SMC_Homing_J2.bReturnToZero := FALSE;
		_SMC_Homing_J3.bReturnToZero := FALSE;
		_SMC_Homing_J1.fVelocitySlow := _HomingVelocitySlow;
		_SMC_Homing_J2.fVelocitySlow := _HomingVelocitySlow;
		_SMC_Homing_J3.fVelocitySlow := _HomingVelocitySlow;
		J1.bSWLimitEnable := FALSE;
		J2.bSWLimitEnable := FALSE;
		J3.bSWLimitEnable := FALSE;
		_SequenceMain := STEP_WAIT_FAST_HOME_G1;
		
	STEP_WAIT_FAST_HOME_G1: // wait fast home group 1
		IF _SMC_Homing_J1.bDone
			AND _SMC_Homing_J2.bDone
			AND _SMC_Homing_J3.bDone THEN
				_SMC_Homing_J1.bExecute := FALSE;
				_SMC_Homing_J2.bExecute := FALSE;
				_SMC_Homing_J3.bExecute := FALSE;
				_SequenceMain := STEP_SLOW_HOME_G1;
		END_IF
		
	STEP_SLOW_HOME_G1: // slow home group 1
		_SMC_Homing_J1.bExecute := TRUE;
		_SMC_Homing_J2.bExecute := TRUE;
		_SMC_Homing_J3.bExecute := TRUE;
		_SMC_Homing_J1.bReturnToZero := TRUE;
		_SMC_Homing_J2.bReturnToZero := TRUE;
		_SMC_Homing_J3.bReturnToZero := TRUE;
		_SMC_Homing_J1.fVelocitySlow := _HomingVelocitySlowSlow;
		_SMC_Homing_J2.fVelocitySlow := _HomingVelocitySlowSlow;
		_SMC_Homing_J3.fVelocitySlow := _HomingVelocitySlowSlow;
		_SequenceMain := STEP_WAIT_SLOW_HOME_G1;
		
	STEP_WAIT_SLOW_HOME_G1:
		IF _SMC_Homing_J1.bDone
			AND _SMC_Homing_J2.bDone
			AND _SMC_Homing_J3.bDone THEN
				_SMC_Homing_J1.bExecute := FALSE;
				_SMC_Homing_J2.bExecute := FALSE;
				_SMC_Homing_J3.bExecute := FALSE;
				_SequenceMain := STEP_FAST_HOME_G2;
		END_IF
		
	STEP_FAST_HOME_G2:		
		_SMC_Homing_J4.bExecute := TRUE;
		_SMC_Homing_J5.bExecute := TRUE;
		_SMC_Homing_J4.bReturnToZero := FALSE;
		_SMC_Homing_J5.bReturnToZero := FALSE;
		_SMC_Homing_J4.fVelocitySlow := _HomingVelocitySlow;
		_SMC_Homing_J5.fVelocitySlow := _HomingVelocitySlow;
		J4.bSWLimitEnable := FALSE;
		J5.bSWLimitEnable := FALSE;
		_SequenceMain := STEP_WAIT_FAST_HOME_G2;
		
	STEP_WAIT_FAST_HOME_G2:
		IF _SMC_Homing_J4.bDone
			AND _SMC_Homing_J5.bDone THEN
				_SMC_Homing_J4.bExecute := FALSE;
				_SMC_Homing_J5.bExecute := FALSE;
				_SequenceMain := STEP_SLOW_HOME_G2;
		END_IF
		
	STEP_SLOW_HOME_G2:
		_SMC_Homing_J4.bExecute := TRUE;
		_SMC_Homing_J5.bExecute := TRUE;
		_SMC_Homing_J4.bReturnToZero := TRUE;
		_SMC_Homing_J5.bReturnToZero := TRUE;
		_SMC_Homing_J4.fVelocitySlow := _HomingVelocitySlowSlow;
		_SMC_Homing_J5.fVelocitySlow := _HomingVelocitySlowSlow;
		_SequenceMain := STEP_WAIT_SLOW_HOME_G2;
		
	STEP_WAIT_SLOW_HOME_G2:
		IF _SMC_Homing_J4.bDone
			AND _SMC_Homing_J5.bDone THEN
				_SMC_Homing_J4.bExecute := FALSE;
				_SMC_Homing_J5.bExecute := FALSE;
				_SequenceMain := STEP_FAST_HOME_G3;
		END_IF
		
	STEP_FAST_HOME_G3:
		_SMC_Homing_J6.bExecute := TRUE;
		_SMC_Homing_J6.bReturnToZero := FALSE;
		_SMC_Homing_J6.fVelocitySlow := _HomingVelocitySlow;
		J6.bSWLimitEnable := FALSE;
		_SequenceMain := STEP_WAIT_FAST_HOME_G3;
		
	STEP_WAIT_FAST_HOME_G3:
		IF _SMC_Homing_J6.bDone THEN
			_SMC_Homing_J6.bExecute := FALSE;
			_SequenceMain := STEP_SLOW_HOME_G3;
		END_IF
		
	STEP_SLOW_HOME_G3:
		_SMC_Homing_J6.bExecute := TRUE;
		_SMC_Homing_J6.bReturnToZero := TRUE;
		_SMC_Homing_J6.fVelocitySlow := _HomingVelocitySlowSlow;
		_SequenceMain := STEP_WAIT_SLOW_HOME_G3;
		
	STEP_WAIT_SLOW_HOME_G3:
		IF _SMC_Homing_J6.bDone THEN
			_SMC_Homing_J6.bExecute := FALSE;
			Flags[GVL.HOME_COMPLETE].Value := TRUE;
			IF NOT Flags[GVL.HOM_TO_POSE_IDX].Value THEN
				_SequenceMain := STEP_DONE;
			ELSE
				_SequenceMain := STEP_MOVE_TO_POSE;
			END_IF
		END_IF;
		
	STEP_MOVE_TO_POSE:
		_MoveToPose := TRUE;
		_SequenceMain := STEP_WAIT_MOVE_TO_POSE;
	
	STEP_WAIT_MOVE_TO_POSE:
		IF _MoveCommandProcessor.ItfUnitMode.CurrentState &lt;&gt; PACK_ML.State.Idle THEN
			_SequenceMain := STEP_WAIT_POSE_DONE;
		END_IF
		
	STEP_WAIT_POSE_DONE:
		IF _MoveCommandProcessor.ItfUnitMode.CurrentState = PACK_ML.State.Idle THEN
			_SequenceMain := STEP_DONE;
		END_IF
	
END_CASE

_M_HandlePose();

//
IF _ResetRtrig.Q AND Error THEN
	Error := FALSE;
	ErrorID := SMC_NO_ERROR;
	_SequenceMain := STEP_DONE;
	GroupHandler.M_ResetGroup();
	_MoveCommandProcessor.M_Home();
END_IF

//
_ErrorRtrig(CLK:=GroupHandler.Error
				OR _SMC_Homing_J1.bError
				OR _SMC_Homing_J2.bError
				OR _SMC_Homing_J3.bError
				OR _SMC_Homing_J4.bError
				OR _SMC_Homing_J5.bError
				OR _SMC_Homing_J6.bError
				OR _MoveCommandProcessor.Error);			
IF _ErrorRtrig.Q THEN
	Error := TRUE;
	IF GroupHandler.Error THEN
		ErrorID := GroupHandler.ErrorID;
	ELSIF _SMC_Homing_J1.bError THEN
		ErrorID := _SMC_Homing_J1.nErrorID;
	ELSIF _SMC_Homing_J2.bError THEN
		ErrorID := _SMC_Homing_J2.nErrorID;
	ELSIF _SMC_Homing_J3.bError THEN
		ErrorID := _SMC_Homing_J3.nErrorID;
	ELSIF _SMC_Homing_J4.bError THEN
		ErrorID := _SMC_Homing_J4.nErrorID;
	ELSIF _SMC_Homing_J5.bError THEN
		ErrorID := _SMC_Homing_J5.nErrorID;
	ELSIF _SMC_Homing_J6.bError THEN
		ErrorID := _SMC_Homing_J6.nErrorID;
	ELSIF _MoveCommandProcessor.Error THEN
		// TODO need to rework how error messages are handled (globally)
		// if the move command processor has an error, we dont know what it is.
	END_IF
END_IF

// TODO make search direction configurable for any robot
//
_SMC_Homing_J1(
	Axis:=J1 , 
	bExecute:= ,
	fHomePosition:= StoredPositions[GVL.HOM_POS_IDX].Position.X, 
	fVelocitySlow:= , 
	fVelocityFast:= _HomingVelocityFast, 
	fAcceleration:= _HomingAcceleration, 
	fDeceleration:= _HomingAcceleration, 
	fJerk:= _HomingJerk, 
	nDirection:= MC_direction.negative, 
	bReferenceSwitch:= NOT J1_Limit, 
	fSignalDelay:= , 
	nHomingMode:= , 
	bReturnToZero:= , 
	bIndexOccured:= , 
	fIndexPosition:= , 
	bIgnoreHWLimit:= TRUE, 
	bDone=&gt; , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	nErrorID=&gt; , 
	bStartLatchingIndex=&gt; );
	
_SMC_Homing_J2(
	Axis:=J2 , 
	bExecute:= , 
	fHomePosition:= StoredPositions[GVL.HOM_POS_IDX].Position.Y,  
	fVelocitySlow:= , 
	fVelocityFast:= _HomingVelocityFast, 
	fAcceleration:= _HomingAcceleration, 
	fDeceleration:= _HomingAcceleration,
	fJerk:= _HomingJerk, 
	nDirection:= MC_Direction.negative, 
	bReferenceSwitch:= NOT J2_Limit, 
	fSignalDelay:= , 
	nHomingMode:= , 
	bReturnToZero:= , 
	bIndexOccured:= , 
	fIndexPosition:= , 
	bIgnoreHWLimit:= TRUE, 
	bDone=&gt; , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	nErrorID=&gt; , 
	bStartLatchingIndex=&gt; );
	
_SMC_Homing_J3(
	Axis:=J3 , 
	bExecute:= , 
	fHomePosition:= StoredPositions[GVL.HOM_POS_IDX].Position.Z, 
	fVelocitySlow:= , 
	fVelocityFast:= _HomingVelocityFast, 
	fAcceleration:= _HomingAcceleration, 
	fDeceleration:= _HomingAcceleration,
	fJerk:= _HomingJerk, 
	nDirection:= MC_Direction.positive, 
	bReferenceSwitch:= NOT J3_Limit, 
	fSignalDelay:= , 
	nHomingMode:= , 
	bReturnToZero:= , 
	bIndexOccured:= , 
	fIndexPosition:= , 
	bIgnoreHWLimit:= TRUE, 
	bDone=&gt; , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	nErrorID=&gt; , 
	bStartLatchingIndex=&gt; );
	
_SMC_Homing_J4(
	Axis:=J4 , 
	bExecute:= ,
	fHomePosition:= StoredPositions[GVL.HOM_POS_IDX].Position.A, 
	fVelocitySlow:= , 
	fVelocityFast:= _HomingVelocityFast, 
	fAcceleration:= _HomingAcceleration, 
	fDeceleration:= _HomingAcceleration,
	fJerk:= _HomingJerk, 
	nDirection:= MC_Direction.positive, 
	bReferenceSwitch:= NOT J4_Limit, 
	fSignalDelay:= , 
	nHomingMode:= , 
	bReturnToZero:= , 
	bIndexOccured:= , 
	fIndexPosition:= , 
	bIgnoreHWLimit:= TRUE, 
	bDone=&gt; , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	nErrorID=&gt; , 
	bStartLatchingIndex=&gt; );
	
_SMC_Homing_J5(
	Axis:=J5 , 
	bExecute:= , 
	fHomePosition:= StoredPositions[GVL.HOM_POS_IDX].Position.B,  
	fVelocitySlow:= , 
	fVelocityFast:= _HomingVelocityFast, 
	fAcceleration:= _HomingAcceleration, 
	fDeceleration:= _HomingAcceleration,
	fJerk:= _HomingJerk, 
	nDirection:= MC_Direction.positive, 
	bReferenceSwitch:= NOT J5_Limit, 
	fSignalDelay:= , 
	nHomingMode:= , 
	bReturnToZero:= , 
	bIndexOccured:= , 
	fIndexPosition:= , 
	bIgnoreHWLimit:= TRUE, 
	bDone=&gt; , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	nErrorID=&gt; , 
	bStartLatchingIndex=&gt; );
	
_SMC_Homing_J6(
	Axis:=J6 , 
	bExecute:= , 
	fHomePosition:= StoredPositions[GVL.HOM_POS_IDX].Position.C, 
	fVelocitySlow:= , 
	fVelocityFast:= _HomingVelocityFast, 
	fAcceleration:= _HomingAcceleration, 
	fDeceleration:= _HomingAcceleration,
	fJerk:= _HomingJerk, 
	nDirection:= MC_Direction.negative, 
	bReferenceSwitch:= NOT J6_Limit, 
	fSignalDelay:= , 
	nHomingMode:= , 
	bReturnToZero:= , 
	bIndexOccured:= , 
	fIndexPosition:= , 
	bIgnoreHWLimit:= TRUE, 
	bDone=&gt; , 
	bBusy=&gt; , 
	bCommandAborted=&gt; , 
	bError=&gt; , 
	nErrorID=&gt; , 
	bStartLatchingIndex=&gt; );
	
//
_MC_SetPosition_J1(
	Axis:= J1, 
	Execute:= _MC_SetPosition_J1.Execute AND NOT _MC_SetPosition_J1.Done AND NOT _MC_SetPosition_J1.Error, 
	Position:= 0.0, 
	Mode:= FALSE, // true=relative false=absolute
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
_MC_SetPosition_J2(
	Axis:= J2, 
	Execute:= _MC_SetPosition_J2.Execute AND NOT _MC_SetPosition_J2.Done AND NOT _MC_SetPosition_J2.Error, 
	Position:= 0.0, 
	Mode:= FALSE, // true=relative false=absolute
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
_MC_SetPosition_J3(
	Axis:= J3, 
	Execute:= _MC_SetPosition_J3.Execute AND NOT _MC_SetPosition_J3.Done AND NOT _MC_SetPosition_J3.Error, 
	Position:= 0.0, 
	Mode:= FALSE, // true=relative false=absolute
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
_MC_SetPosition_J4(
	Axis:= J4, 
	Execute:= _MC_SetPosition_J4.Execute AND NOT _MC_SetPosition_J4.Done AND NOT _MC_SetPosition_J4.Error, 
	Position:= 0.0, 
	Mode:= FALSE, // true=relative false=absolute
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
_MC_SetPosition_J5(
	Axis:= J5, 
	Execute:= _MC_SetPosition_J5.Execute AND NOT _MC_SetPosition_J5.Done AND NOT _MC_SetPosition_J5.Error, 
	Position:= 0.0, 
	Mode:= FALSE, // true=relative false=absolute
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );
_MC_SetPosition_J6(
	Axis:= J6, 
	Execute:= _MC_SetPosition_J6.Execute AND NOT _MC_SetPosition_J6.Done AND NOT _MC_SetPosition_J6.Error, 
	Position:= 0.0, 
	Mode:= FALSE, // true=relative false=absolute
	Done=&gt; , 
	Busy=&gt; , 
	Error=&gt; , 
	ErrorID=&gt; );</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_SetHome" ObjectId="ac8ad3ff-e2e3-4571-99f3-004f0df0c316">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">
// adjust all the persistent variables to take on the calibrated values
StoredPositions[GVL.HOM_POS_IDX].Position.X := F_HomeOffsetCalc(	CurrentOffset:= PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.X, 
																				CurrentPosition:= J1.fActPosition, 
																				HomeSearchDirection:= _SMC_Homing_J1.nDirection);

StoredPositions[GVL.HOM_POS_IDX].Position.Y := F_HomeOffsetCalc(	CurrentOffset:= PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.Y, 
																				CurrentPosition:= J2.fActPosition, 
																				HomeSearchDirection:= _SMC_Homing_J2.nDirection);

StoredPositions[GVL.HOM_POS_IDX].Position.Z := F_HomeOffsetCalc(	CurrentOffset:= PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.Z, 
																				CurrentPosition:= J3.fActPosition, 
																				HomeSearchDirection:= _SMC_Homing_J3.nDirection);

StoredPositions[GVL.HOM_POS_IDX].Position.A := F_HomeOffsetCalc(	CurrentOffset:= PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.A, 
																				CurrentPosition:= J4.fActPosition, 
																				HomeSearchDirection:= _SMC_Homing_J4.nDirection);

StoredPositions[GVL.HOM_POS_IDX].Position.B := F_HomeOffsetCalc(	CurrentOffset:= PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.B, 
																				CurrentPosition:= J5.fActPosition, 
																				HomeSearchDirection:= _SMC_Homing_J5.nDirection);

StoredPositions[GVL.HOM_POS_IDX].Position.C := F_HomeOffsetCalc(	CurrentOffset:= PersistentVars.StoredPositions[GVL.HOM_POS_IDX].Position.C, 
																				CurrentPosition:= J6.fActPosition, 
																				HomeSearchDirection:= _SMC_Homing_J6.nDirection);

// this isnt totally needed but will calibrate the current session without the need to rehome
_MC_SetPosition_J1.Execute:=TRUE;
_MC_SetPosition_J2.Execute:=TRUE;
_MC_SetPosition_J3.Execute:=TRUE;
_MC_SetPosition_J4.Execute:=TRUE;
_MC_SetPosition_J5.Execute:=TRUE;
_MC_SetPosition_J6.Execute:=TRUE;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="M_StartHoming" ObjectId="1ff714ca-aba4-448a-bc01-bf0eab578f27">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF _SequenceMain = STEP_IDLE THEN
	M_StartHoming := TRUE;
	_StartHoming := TRUE;
ELSE
	M_StartHoming := FALSE;
END_IF</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                    <Method name="_M_HandlePose" ObjectId="8dbad245-108d-44dc-844d-47ebe55e9287">
                      <interface>
                        <returnType>
                          <BOOL />
                        </returnType>
                        <localVars>
                          <variable name="_MoveCommand">
                            <type>
                              <derived name="ST_MoveCmd" />
                            </type>
                          </variable>
                          <variable name="_PoseSpeed">
                            <type>
                              <LREAL />
                            </type>
                            <initialValue>
                              <simpleValue value="20.0" />
                            </initialValue>
                          </variable>
                        </localVars>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                            <AccessModifiers Private="true" />
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">IF _MoveToPose THEN
	_MoveToPose:= FALSE;
	//
	IF GVL.PowerOn 
		AND_THEN Flags[GVL.HOME_COMPLETE].Value
		AND_THEN NOT _MoveCommandProcessor.Busy
		AND_THEN NOT _MoveCommandProcessor.Error THEN
			//
			_MoveCommand.MoveType 			:= DUT_Command_MoveType.DirectMove;
			_MoveCommand.PositionType 		:= DUT_Command_PositionType.AbsolutePosition;
			_MoveCommand.CoordinateType 	:= DUT_Command_CoordinateType.Literal;
			_MoveCommand.Speed 				:= _PoseSpeed;
			_MoveCommand.CoordSystem 		:= SMC_COORD_SYSTEM.ACS;
			_MoveCommand.CoordRef 			:= StoredPositions[GVL.POSE_2_IDX].Position;
			//
			_MoveCommandProcessor.Command := BuildMoveCmd(_MoveCommand);
			_MoveCommandProcessor.M_Start();
	END_IF;
END_IF

_MoveCommandProcessor(
	StoredPositions:= StoredPositions,
	VisionRegisters:= VisionRegisters,
	Flags:= Flags,
	AxisGroup:= AxisGroup, 
	GroupHandler:= GroupHandler,
	Velocity:= StoredPositions[GVL.SPEEDS_IDX].Position.X, 
	VelFactor:= StoredPositions[GVL.SPEEDS_IDX].Position.A,
	Acceleration:= StoredPositions[GVL.SPEEDS_IDX].Position.Y, 
	AccFactor:= StoredPositions[GVL.SPEEDS_IDX].Position.B,
	Jerk:= StoredPositions[GVL.SPEEDS_IDX].Position.Z,
	JerkFactor:= StoredPositions[GVL.SPEEDS_IDX].Position.C, 
	Position=&gt; ,
	ItfUnitMode=&gt; , 
	Error=&gt; );</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </Method>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>6c30ff35-bc31-4ed8-ab4a-320ad080dc49</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
              <pou name="F_Checksum" pouType="function">
                <interface>
                  <returnType>
                    <UINT />
                  </returnType>
                  <inputVars>
                    <variable name="data">
                      <type>
                        <pointer>
                          <baseType>
                            <BYTE />
                          </baseType>
                        </pointer>
                      </type>
                    </variable>
                    <variable name="length">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                  </inputVars>
                  <localVars>
                    <variable name="curr_crc">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="sum1">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="sum2">
                      <type>
                        <USINT />
                      </type>
                    </variable>
                    <variable name="_i">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="_j">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                    <variable name="_k">
                      <type>
                        <UINT />
                      </type>
                    </variable>
                  </localVars>
                </interface>
                <body>
                  <ST>
                    <xhtml xmlns="http://www.w3.org/1999/xhtml">// https://www.tutorialspoint.com/cyclic-redundancy-check-crc-in-arduino
curr_crc := 16#0000;
sum1 := UINT_TO_USINT(curr_crc);
sum2 := UINT_TO_USINT(SHR(curr_crc, 8));
FOR _i:=0 TO length - 1 BY 1 DO
	sum1 := (sum1 + data[_i]) MOD 255;
	sum2 := (sum2 + sum1) MOD 255;
END_FOR
F_Checksum := SHL(sum2, 8) OR sum1;</xhtml>
                  </ST>
                </body>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>8c4a2130-c24f-42dc-952f-31bdbb96ab6c</ObjectId>
                  </data>
                </addData>
              </pou>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
              <union name="StringByteArray">
                <variable name="bArray">
                  <type>
                    <array>
                      <dimension lower="0" upper="254" />
                      <baseType>
                        <BYTE />
                      </baseType>
                    </array>
                  </type>
                </variable>
                <variable name="sString">
                  <type>
                    <string length="255" />
                  </type>
                </variable>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>74ac9c91-8dd0-4804-83eb-55aba09ae987</ObjectId>
                  </data>
                </addData>
              </union>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
              <Libraries>
                <Library Name="#SM3_Robotics" Namespace="SM3_Robotics" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Robotics, 4.13.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_Robotics_Visu" Namespace="SM3_Robotics_Visu" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Robotics_Visu, 4.13.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_Transformation" Namespace="TRAFO" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Transformation, 4.13.0.0 (3S - Smart Software Solutions GmbH)" />
                <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Standard, * (System)" />
                <Library Name="#SysTimeCore" Namespace="SysTimeCore" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysTimeCore, * (System)" />
                <Library Name="#CmpTraceMgr" Namespace="CmpTraceMgr" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CmpTraceMgr, 3.5.0.0 (System)" />
                <Library Name="#MemoryUtils" Namespace="MEMUtils" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="MemoryUtils, * (3S - Smart Software Solutions GmbH)" />
                <Library Name="#CAA Types" Namespace="CAA" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CAA Types Extern, * (CAA Technical Workgroup)" />
                <Library Name="#VisuDialogs" Namespace="VisuDialogs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuDialogs, * (System)" />
                <Library Name="#SM3_CNC_Visu" Namespace="SM3_CNC_Visu" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SM3_CNC_Visu, * (3S - Smart Software Solutions GmbH)" />
                <Library Name="#StringUtils" Namespace="Stu" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="StringUtils, * (System)" />
                <Library Name="#SysShm" Namespace="SysShm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysShm, * (System)" />
                <Library Name="#Util" Namespace="Util" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Util, * (System)" />
                <Library Name="SysTypes Interfaces, * (System)" Namespace="SysTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="RaspberryPiCamera, 4.6.0.0 (3S - Smart Software Solutions GmbH)" Namespace="Camera" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" />
                <Library Name="#SysFile" Namespace="SysFile" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysFile, * (System)" />
                <Library Name="#SysProcess" Namespace="SysProcess" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysProcess, * (System)" />
                <Library Name="#CmpBitmapPool" Namespace="CmpBitmapPool" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CmpBitmapPool, * (System)" />
                <Library Name="#SysSocket" Namespace="SysSocket" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysSocket, * (System)" />
                <Library Name="#NetBaseSrv" Namespace="NBS" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Net Base Services, * (3S - Smart Software Solutions GmbH)" />
                <Library Name="SysTypes2 Interfaces, * (System)" Namespace="SysTypes2" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" />
                <Library Name="#SysTimeRtc" Namespace="SysTimeRtc" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysTimeRtc, * (System)" />
                <Library Name="#VisuUtils" Namespace="VU" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="Visu Utils, * (System)" />
                <Library Name="#OMAC_PackML_State_Machine" Namespace="PACK_ML" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="OMAC PackML State Machine, * (3S - Smart Software Solutions GmbH)" />
                <Library Name="IoDrvGPIO, 4.11.0.0 (CODESYS)" Namespace="IoDrvGPIO" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" />
                <Library Name="#SysCom" Namespace="SysCom" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysCom, * (System)" />
                <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#System_VisuInputs" Namespace="VisuInputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuInputs, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
                <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
                <Library Name="#SM3_Basic" Namespace="SM3_Basic" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Basic, 4.16.0.0 (CODESYS)" />
                <Library Name="#SM3_CNC" Namespace="SM3_CNC" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_CNC, 4.16.0.0 (CODESYS)" />
                <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
                <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, * (3S - Smart Software Solutions GmbH)" />
                <Library Name="#SM3_Drive_PosControl" Namespace="SM3_Drive_PosControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="SM3_Drive_PosControl, 4.16.0.0 (CODESYS)" />
                <Library Name="#CmpDynamicText" Namespace="CmpDynamicText" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CmpDynamicText" />
                <Library Name="#Raspberry Pi Peripherals" Namespace="RasPi" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Raspberry Pi Peripherals, 4.10.0.0 (CODESYS)" />
                <Library Name="#CAA Device Diagnosis" Namespace="DED" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CAA Device Diagnosis, 3.5.19.10 (CAA Technical Workgroup)" />
                <Library Name="#IODrvEtherCAT" Namespace="IoDrvEthercatLib" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IoDrvEtherCAT, 4.1.0.0 (3S - Smart Software Solutions GmbH)" />
                <PlaceholderRedirections>
                  <PlaceholderRedirection Placeholder="System_VisuElemsAlarm" Redirection="VisuElemsAlarm, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="NetBaseSrv" Redirection="Net Base Services, 3.5.20.0 (CODESYS)" />
                  <PlaceholderRedirection Placeholder="Standard" Redirection="Standard, 3.5.18.0 (System)" />
                  <PlaceholderRedirection Placeholder="Standard64" Redirection="Standard64, 3.5.20.0 (System)" />
                  <PlaceholderRedirection Placeholder="UTF8" Redirection="UTF-8 Encoding Support, 4.0.0.0 (CODESYS)" />
                  <PlaceholderRedirection Placeholder="System_VisuElem3DPath" Redirection="VisuElem3DPath, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemTextEditor" Redirection="VisuElemTextEditor, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemCamDisplayer" Redirection="VisuElemCamDisplayer, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemBase" Redirection="VisuElemBase, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="VisuSymbols" Redirection="VisuSymbols, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="MemoryBlockManager" Redirection="Memory Block Manager, 3.5.20.0 (CODESYS)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemMeter" Redirection="VisuElemMeter, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemsSpecialControls" Redirection="VisuElemsSpecialControls, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemTrace" Redirection="VisuElemTrace, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="ElementCollections" Redirection="Element Collections, 3.5.17.0 (3S - Smart Software Solutions GmbH)" />
                  <PlaceholderRedirection Placeholder="System_VisuNativeControl" Redirection="VisuNativeControl, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="StringUtils" Redirection="StringUtils, 3.5.20.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuInputs" Redirection="VisuInputs, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="Util" Redirection="Util, 3.5.19.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemsDateTime" Redirection="VisuElemsDateTime, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="VisuUtils" Redirection="Visu Utils, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemsWinControls" Redirection="VisuElemsWinControls, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElemXYChart" Redirection="VisuElemXYChart, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="OMAC_PackML_State_Machine" Redirection="OMAC PackML State Machine, 1.0.0.4 (3S - Smart Software Solutions GmbH)" />
                  <PlaceholderRedirection Placeholder="FloatingPointUtils" Redirection="FloatingPointUtils, 3.5.17.0 (System)" />
                  <PlaceholderRedirection Placeholder="System_VisuElems" Redirection="VisuElems, 4.5.0.0 (System)" />
                  <PlaceholderRedirection Placeholder="Collections" Redirection="Collections, 3.5.17.0 (System)" />
                  <PlaceholderRedirection Placeholder="StringSegs" Redirection="Immutable String Segments, 3.5.18.0 (3S - Smart Software Solutions GmbH)" />
                  <PlaceholderRedirection Placeholder="CBML" Redirection="Common Behaviour Model, 3.5.17.0 (3S - Smart Software Solutions GmbH)" />
                </PlaceholderRedirections>
                <addData>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>80af59fb-8d62-4f6c-95b0-580a98d81b1e</ObjectId>
                  </data>
                </addData>
              </Libraries>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
              <BuildProperties>
                <CompilerDefines>GENERATE_OVERLAY_VISU,VISU_USEPROPERTYINFO</CompilerDefines>
              </BuildProperties>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>7babeec2-008b-4bd3-b402-84e2c4d6ae83</ObjectId>
            </data>
          </addData>
        </resource>
        <addData>
          <data name="Device" handleUnknown="discard">
            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
              <DeviceType>
                <DeviceIdentification>
                  <Type>4102</Type>
                  <Id>0000 0011</Id>
                  <Version>4.11.0.0</Version>
                </DeviceIdentification>
                <Connector moduleType="256" interface="Common.PCI" connectorId="0">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="1280" interface="GPIOSysfs" connectorId="1">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="1279" interface="Common.SoftMotion.General" connectorId="2">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="504" interface="Raspberry.GPIOs" connectorId="3">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="769" interface="SafetyInterface" connectorId="4">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="499" interface="Raspberry.OnewireMaster" connectorId="5">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="502" interface="Raspberry.Camera2" connectorId="6">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="497" interface="Raspberry.SPIMaster" connectorId="7">
                  <HostParameterSet />
                </Connector>
                <Connector moduleType="496" interface="Raspberry.I2CMaster" connectorId="8">
                  <HostParameterSet />
                </Connector>
                <DeviceParameterSet />
              </DeviceType>
            </Device>
          </data>
          <data name="configurations" handleUnknown="discard">
            <configurations>
              <configuration name="EtherCAT_Master_SoftMotion">
                <addData>
                  <data name="Device" handleUnknown="discard">
                    <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                      <DeviceType>
                        <DeviceIdentification>
                          <Type>64</Type>
                          <Id>0000 1002</Id>
                          <Version>4.6.1.0</Version>
                        </DeviceIdentification>
                        <Connector moduleType="257" role="child" interface="Common.PCI" connectorId="1">
                          <HostParameterSet />
                        </Connector>
                        <Connector moduleType="64" interface="Common.Ethercat" connectorId="2" hostpath="1">
                          <HostParameterSet>
                            <ParameterSection>
                              <Name>Second Network adapter</Name>
                              <Description />
                              <Parameter ParameterId="1073745920" type="std:BOOL" IndexInDevDesc="30">
                                <Attributes />
                                <Value name="_x0031_073745920" visiblename="EnableSecondAdapter" desc="Enable second network adapter">FALSE</Value>
                                <Name>EnableSecondAdapter</Name>
                                <Description>Enable second network adapter</Description>
                              </Parameter>
                              <Parameter ParameterId="1073745925" type="std:ARRAY [0..5] OF BYTE" IndexInDevDesc="31">
                                <Attributes />
                                <Value name="_x0031_073745925" visiblename="SrcAddress" desc="Source Address">[0,0,0,0,0,0]</Value>
                                <Name>SrcAddress</Name>
                                <Description>Source Address</Description>
                              </Parameter>
                              <Parameter ParameterId="1073745927" type="std:ARRAY [0..5] OF BYTE" IndexInDevDesc="32">
                                <Attributes />
                                <Value name="_x0031_073745927" visiblename="DestAddress" desc="Destination Address">[255,255,255,255,255,255]</Value>
                                <Name>DestAddress</Name>
                                <Description>Destination Address</Description>
                              </Parameter>
                              <Parameter ParameterId="1073745929" type="std:STRING(100)" IndexInDevDesc="33">
                                <Attributes />
                                <Value name="_x0031_073745929" visiblename="NetworkName" desc="Name of the network card">''</Value>
                                <Name>NetworkName</Name>
                                <Description>Name of the network card</Description>
                              </Parameter>
                              <Parameter ParameterId="1073745930" type="std:WSTRING(100)" IndexInDevDesc="34">
                                <Attributes />
                                <Value name="_x0031_073745930" visiblename="NetworkName" desc="Name of the network card">""</Value>
                                <Name>NetworkName</Name>
                                <Description>Name of the network card</Description>
                              </Parameter>
                              <Parameter ParameterId="1073745931" type="std:BOOL" IndexInDevDesc="35">
                                <Attributes />
                                <Value name="_x0031_073745931" visiblename="SelectNetworkByName" desc="Select network by name">FALSE</Value>
                                <Name>SelectNetworkByName</Name>
                                <Description>Select network by name</Description>
                              </Parameter>
                              <Parameter ParameterId="1073745932" type="std:BOOL" IndexInDevDesc="36">
                                <Attributes />
                                <Value name="_x0031_073745932" visiblename="CompareNetworkName" desc="Comapare exact network name">FALSE</Value>
                                <Name>CompareNetworkName</Name>
                                <Description>Comapare exact network name</Description>
                              </Parameter>
                            </ParameterSection>
                            <ParameterSection>
                              <Name>Diagnosis</Name>
                              <Description />
                              <Parameter ParameterId="805502976" type="localTypes:StructStatistics" IndexInDevDesc="47">
                                <Attributes channel="diag" offlineaccess="none" />
                                <Value name="_x0038_05502976" visiblename="Statistics" offlineaccess="none">
                                  <Element name="SendFrameCount" visiblename="SendFrameCount">0</Element>
                                  <Element name="FramesPerSecond" visiblename="FramesPerSecond">0</Element>
                                  <Element name="LostFrameCount" visiblename="LostFrameCount">0</Element>
                                  <Element name="TxErrorCount" visiblename="TxErrorCount">0</Element>
                                  <Element name="RxErrorCount" visiblename="RxErrorCount">0</Element>
                                  <Element name="RecvAvg_Cycle" visiblename="Recv Time (Avg)" desc="Average Time for receiving Ethernet frames per paket" />
                                  <Element name="RecvMax_Cycle" visiblename="Recv Time (Max)" desc="Max Time for receiving Ethernet frames per paket" />
                                  <Element name="SendAvg_Cycle" visiblename="Send Time (Avg)" desc="Average Time for sending Ethernet frames per paket" />
                                  <Element name="SendMax_Cycle" visiblename="Send Time (Max)" desc="Max Time for sending Ethernet frames per paket" />
                                  <Element name="LostCycleCount" visiblename="LostCycleCount" desc="Number of lost iec cycles" />
                                </Value>
                                <Name>Statistics</Name>
                              </Parameter>
                              <Parameter ParameterId="805502977" type="std:BOOL" IndexInDevDesc="48">
                                <Attributes channel="diagAck" />
                                <Value name="_x0038_05502977" visiblename="Clear Statistics" desc="Clear Statistics">FALSE</Value>
                                <Name>Clear Statistics</Name>
                                <Description>Clear Statistics</Description>
                              </Parameter>
                            </ParameterSection>
                            <Parameter ParameterId="805306368" type="std:DWORD" IndexInDevDesc="10">
                              <Attributes />
                              <Value name="_x0038_05306368" visiblename="Autoconfig" desc="Automatic configuration">1</Value>
                              <Name>Autoconfig</Name>
                              <Description>Automatic configuration</Description>
                            </Parameter>
                            <Parameter ParameterId="805306369" type="std:BOOL" IndexInDevDesc="44">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0038_05306369" visiblename="ShowLoggerPage" offlineaccess="none" desc="Show the logger page for the master">true</Value>
                              <Name>ShowLoggerPage</Name>
                              <Description>Show the logger page for the master</Description>
                            </Parameter>
                            <Parameter ParameterId="805306371" type="std:BOOL" IndexInDevDesc="45">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0038_05306371" visiblename="SupportMemoryService" offlineaccess="none" desc="Stack supports memory service">true</Value>
                              <Name>SupportMemoryService</Name>
                              <Description>Stack supports memory service</Description>
                            </Parameter>
                            <Parameter ParameterId="805306375" type="std:BOOL" IndexInDevDesc="46">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0038_05306375" visiblename="ShowSafetyChannels" offlineaccess="none" desc="if true then safety channels are shown and mappable">true</Value>
                              <Name>ShowSafetyChannels</Name>
                              <Description>if true then safety channels are shown and mappable</Description>
                            </Parameter>
                            <Parameter ParameterId="805326848" type="std:DWORD" IndexInDevDesc="11">
                              <Attributes />
                              <Value name="_x0038_05326848" visiblename="MasterCycleTime" desc="Master Cycle Time">4000</Value>
                              <Name>MasterCycleTime</Name>
                              <Description>Master Cycle Time</Description>
                            </Parameter>
                            <Parameter ParameterId="805371904" type="std:BOOL" IndexInDevDesc="12">
                              <Attributes />
                              <Value name="_x0038_05371904" visiblename="MasterUseLRW" desc="Master uses LRW command">FALSE</Value>
                              <Name>MasterUseLRW</Name>
                              <Description>Master uses LRW command</Description>
                            </Parameter>
                            <Parameter ParameterId="805392384" type="std:BOOL" IndexInDevDesc="13">
                              <Attributes />
                              <Value name="_x0038_05392384" visiblename="SlaveAutorestart" desc="Slave restarts automatically">FALSE</Value>
                              <Name>SlaveAutorestart</Name>
                              <Description>Slave restarts automatically</Description>
                            </Parameter>
                            <Parameter ParameterId="805392640" type="std:BOOL" IndexInDevDesc="41">
                              <Attributes />
                              <Value name="_x0038_05392640" visiblename="Keep last input data" desc="Keep last input data">TRUE</Value>
                              <Name>Keep last input data</Name>
                              <Description>Keep last input data</Description>
                            </Parameter>
                            <Parameter ParameterId="805392650" type="std:BOOL" IndexInDevDesc="42">
                              <Attributes />
                              <Value name="_x0038_05392650" visiblename="OnlyArpBroadcasts" desc="true: transmit only ARP broadcasts, false: transmit all broadcasts">TRUE</Value>
                              <Name>OnlyArpBroadcasts</Name>
                              <Description>true: transmit only ARP broadcasts, false: transmit all broadcasts</Description>
                            </Parameter>
                            <Parameter ParameterId="805437440" type="std:USINT" IndexInDevDesc="14">
                              <Attributes />
                              <Value name="_x0038_05437440" visiblename="SlaveCheckMode" desc="Mode for vendor product check">0</Value>
                              <Name>SlaveCheckMode</Name>
                              <Description>Mode for vendor product check</Description>
                            </Parameter>
                            <Parameter ParameterId="805437441" type="std:BOOL" IndexInDevDesc="15">
                              <Attributes />
                              <Value name="_x0038_05437441" visiblename="CheckPortStatus" desc="Check of the port status of last slave">FALSE</Value>
                              <Name>CheckPortStatus</Name>
                              <Description>Check of the port status of last slave</Description>
                            </Parameter>
                            <Parameter ParameterId="805457920" type="std:STRING(100)" IndexInDevDesc="16">
                              <Attributes />
                              <Value name="_x0038_05457920" visiblename="NetworkName" desc="Name of the network card">'eth0'</Value>
                              <Name>NetworkName</Name>
                              <Description>Name of the network card</Description>
                            </Parameter>
                            <Parameter ParameterId="805457921" type="std:WSTRING(100)" IndexInDevDesc="17">
                              <Attributes />
                              <Value name="_x0038_05457921" visiblename="NetworkName" desc="Name of the network card">"eth0"</Value>
                              <Name>NetworkName</Name>
                              <Description>Name of the network card</Description>
                            </Parameter>
                            <Parameter ParameterId="805458176" type="std:BOOL" IndexInDevDesc="18">
                              <Attributes />
                              <Value name="_x0038_05458176" visiblename="SelectNetworkByName" desc="Select network by name">False</Value>
                              <Name>SelectNetworkByName</Name>
                              <Description>Select network by name</Description>
                            </Parameter>
                            <Parameter ParameterId="805458177" type="std:BOOL" IndexInDevDesc="19">
                              <Attributes />
                              <Value name="_x0038_05458177" visiblename="CompareNetworkName" desc="Comapare exact network name">FALSE</Value>
                              <Name>CompareNetworkName</Name>
                              <Description>Comapare exact network name</Description>
                            </Parameter>
                            <Parameter ParameterId="805458432" type="std:BOOL" IndexInDevDesc="20">
                              <Attributes />
                              <Value name="_x0038_05458432" visiblename="EnableTaskMessage" desc="Enable transmission per task">FALSE</Value>
                              <Name>EnableTaskMessage</Name>
                              <Description>Enable transmission per task</Description>
                            </Parameter>
                            <Parameter ParameterId="805458688" type="std:BOOL" IndexInDevDesc="21">
                              <Attributes />
                              <Value name="_x0038_05458688" visiblename="DisableTaskGeneration" desc="Disable automatic task generation">FALSE</Value>
                              <Name>DisableTaskGeneration</Name>
                              <Description>Disable automatic task generation</Description>
                            </Parameter>
                            <Parameter ParameterId="805458944" type="std:BOOL" IndexInDevDesc="22">
                              <Attributes />
                              <Value name="_x0038_05458944" visiblename="FrameAtTaskStart" desc="Send frame at task cycle start">TRUE</Value>
                              <Name>FrameAtTaskStart</Name>
                              <Description>Send frame at task cycle start</Description>
                            </Parameter>
                            <Parameter ParameterId="805458960" type="std:BOOL" IndexInDevDesc="23">
                              <Attributes />
                              <Value name="_x0038_05458960" visiblename="WaitForPacket" desc="Wait for packets in the same cycle/ FrameAtTaskStart must be also set">FALSE</Value>
                              <Name>WaitForPacket</Name>
                              <Description>Wait for packets in the same cycle/ FrameAtTaskStart must be also set</Description>
                            </Parameter>
                            <Parameter ParameterId="805458968" type="std:BOOL" IndexInDevDesc="24">
                              <Attributes />
                              <Value name="_x0038_05458968" visiblename="SplitFrame" desc="Splits cylic frames in process data and asynchronous messages">FALSE</Value>
                              <Name>SplitFrame</Name>
                              <Description>Splits cylic frames in process data and asynchronous messages</Description>
                            </Parameter>
                            <Parameter ParameterId="805459200" type="std:BOOL" IndexInDevDesc="26">
                              <Attributes />
                              <Value name="_x0038_05459200" visiblename="ScanForAliasAddress" desc="Enables scan for alias address">TRUE</Value>
                              <Name>ScanForAliasAddress</Name>
                              <Description>Enables scan for alias address</Description>
                            </Parameter>
                            <Parameter ParameterId="805459280" type="std:WORD" IndexInDevDesc="25">
                              <Attributes />
                              <Value name="_x0038_05459280" visiblename="DCSyncInWindow" desc="sync window for xDistributedClockInSync">50</Value>
                              <Name>DCSyncInWindow</Name>
                              <Description>sync window for xDistributedClockInSync</Description>
                            </Parameter>
                            <Parameter ParameterId="805459456" type="std:SINT" IndexInDevDesc="27">
                              <Attributes />
                              <Value name="_x0038_05459456" visiblename="SyncOffset" desc="Master synchronisation offset">20</Value>
                              <Name>SyncOffset</Name>
                              <Description>Master synchronisation offset</Description>
                            </Parameter>
                            <Parameter ParameterId="805459712" type="std:UDINT" IndexInDevDesc="28">
                              <Attributes />
                              <Value name="_x0038_05459712" visiblename="SyncWindowMonitoring" desc="Slave sync window monitoring">0</Value>
                              <Name>SyncWindowMonitoring</Name>
                              <Description>Slave sync window monitoring</Description>
                            </Parameter>
                            <Parameter ParameterId="805459713" type="std:UDINT" IndexInDevDesc="29">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0038_05459713" visiblename="DCMode" offlineaccess="none" desc="Mode for distributed clock">0</Value>
                              <Name>DCMode</Name>
                              <Description>Mode for distributed clock</Description>
                            </Parameter>
                            <Parameter ParameterId="805459968" type="std:BOOL" IndexInDevDesc="37">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0038_05459968" visiblename="CustomENIExport" offlineaccess="none" desc="Export ENI file with custom settings">FALSE</Value>
                              <Name>CustomENIExport</Name>
                              <Description>Export ENI file with custom settings</Description>
                            </Parameter>
                            <Parameter ParameterId="805459969" type="std:BOOL" IndexInDevDesc="38">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0038_05459969" visiblename="IgnoreManualAddres" offlineaccess="none" desc="Ignore manual address settings in the ENI export">FALSE</Value>
                              <Name>IgnoreManualAddres</Name>
                              <Description>Ignore manual address settings in the ENI export</Description>
                            </Parameter>
                            <Parameter ParameterId="805459974" type="std:BOOL" IndexInDevDesc="39">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0038_05459974" visiblename="CreateENIFileForSimulation" offlineaccess="none" desc="Creates ENI xml file for simulation devices">TRUE</Value>
                              <Name>CreateENIFileForSimulation</Name>
                              <Description>Creates ENI xml file for simulation devices</Description>
                            </Parameter>
                            <Parameter ParameterId="805459984" type="std:BOOL" IndexInDevDesc="40">
                              <Attributes offlineaccess="none" />
                              <Value name="_x0038_05459984" visiblename="Enable sync units" offlineaccess="none" desc="Enable support for sync units">TRUE</Value>
                              <Name>Enable sync units</Name>
                              <Description>Enable support for sync units</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741826" type="std:DWORD" IndexInDevDesc="0">
                              <Attributes />
                              <Value name="_x0031_073741826" visiblename="NumberOfOutputSlaves" desc="Number of Slaves with an Output">0</Value>
                              <Name>NumberOfOutputSlaves</Name>
                              <Description>Number of Slaves with an Output</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741827" type="std:DWORD" IndexInDevDesc="1">
                              <Attributes />
                              <Value name="_x0031_073741827" visiblename="NumberOfInputSlaves" desc="Number of Slaves with an Input">0</Value>
                              <Name>NumberOfInputSlaves</Name>
                              <Description>Number of Slaves with an Input</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741829" type="std:DWORD" IndexInDevDesc="2">
                              <Attributes />
                              <Value name="_x0031_073741829" visiblename="SrcAddress1" desc="Two zero Bytes and the First Two Bytes of the Source Address">58463</Value>
                              <Name>SrcAddress1</Name>
                              <Description>Two zero Bytes and the First Two Bytes of the Source Address</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741830" type="std:DWORD" IndexInDevDesc="3">
                              <Attributes />
                              <Value name="_x0031_073741830" visiblename="SrcAddress2" desc="Lower 4 Bytes of the Source Address">20925217</Value>
                              <Name>SrcAddress2</Name>
                              <Description>Lower 4 Bytes of the Source Address</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741831" type="std:DWORD" IndexInDevDesc="4">
                              <Attributes />
                              <Value name="_x0031_073741831" visiblename="DestAddress1" desc="Two zero Bytes and the First Two Bytes of the Destination Address">65535</Value>
                              <Name>DestAddress1</Name>
                              <Description>Two zero Bytes and the First Two Bytes of the Destination Address</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741832" type="std:DWORD" IndexInDevDesc="5">
                              <Attributes />
                              <Value name="_x0031_073741832" visiblename="DestAddress2" desc="Lower 4 Bytes of the Destination Address">4294967295</Value>
                              <Name>DestAddress2</Name>
                              <Description>Lower 4 Bytes of the Destination Address</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741833" type="std:DWORD" IndexInDevDesc="6">
                              <Attributes />
                              <Value name="_x0031_073741833" visiblename="ImageOutAddress" desc="Address of the Output">33554432</Value>
                              <Name>ImageOutAddress</Name>
                              <Description>Address of the Output</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741834" type="std:DWORD" IndexInDevDesc="7">
                              <Attributes />
                              <Value name="_x0031_073741834" visiblename="ImageOutLength" desc="Length of the Output">0</Value>
                              <Name>ImageOutLength</Name>
                              <Description>Length of the Output</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741835" type="std:DWORD" IndexInDevDesc="8">
                              <Attributes />
                              <Value name="_x0031_073741835" visiblename="ImageInAddress" desc="Address of the Input">16777216</Value>
                              <Name>ImageInAddress</Name>
                              <Description>Address of the Input</Description>
                            </Parameter>
                            <Parameter ParameterId="1073741836" type="std:DWORD" IndexInDevDesc="9">
                              <Attributes />
                              <Value name="_x0031_073741836" visiblename="ImageInLength" desc="Length of the Input">0</Value>
                              <Name>ImageInLength</Name>
                              <Description>Length of the Input</Description>
                            </Parameter>
                            <Parameter ParameterId="1879052288" type="std:UDINT" IndexInDevDesc="43">
                              <Attributes download="false" offlineaccess="none" />
                              <Value name="_x0031_879052288" visiblename="Config version" offlineaccess="none" desc="Config version">50662144</Value>
                              <Name>Config version</Name>
                              <Description>Config version</Description>
                            </Parameter>
                          </HostParameterSet>
                        </Connector>
                        <DeviceParameterSet />
                      </DeviceType>
                    </Device>
                  </data>
                  <data name="configurations" handleUnknown="discard">
                    <configurations>
                      <configuration name="EasyCAT_32_32_rev_1">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>65</Type>
                                  <Id>79A_00DEFEDE00005A01</Id>
                                  <Version>Revision=16#00005A01</Version>
                                </DeviceIdentification>
                                <Connector moduleType="65" role="child" interface="Common.Ethercat" connectorId="1">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>General</Name>
                                      <Description />
                                      <Parameter ParameterId="16777216" type="std:DWORD" IndexInDevDesc="20">
                                        <Attributes />
                                        <Value name="_x0031_6777216" visiblename="Number of Outputs" desc="Number of Outputs">32</Value>
                                        <Name>Number of Outputs</Name>
                                        <Description>Number of Outputs</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554432" type="std:DWORD" IndexInDevDesc="26">
                                        <Attributes />
                                        <Value name="_x0033_3554432" visiblename="Number of Inputs" desc="Number of Inputs">32</Value>
                                        <Name>Number of Inputs</Name>
                                        <Description>Number of Inputs</Description>
                                      </Parameter>
                                      <Parameter ParameterId="268435456" type="std:DWORD" IndexInDevDesc="21">
                                        <Attributes />
                                        <Value name="_x0032_68435456" visiblename="Number of Infos about Outputs" desc="Number of Infos about Outputs">32</Value>
                                        <Name>Number of Infos about Outputs</Name>
                                        <Description>Number of Infos about Outputs</Description>
                                      </Parameter>
                                      <Parameter ParameterId="268435472" type="std:DWORD" IndexInDevDesc="22">
                                        <Attributes />
                                        <Value name="_x0032_68435472" visiblename="Physical Address of 1. Output" desc="Physical Address of 1. Output">3840</Value>
                                        <Name>Physical Address of 1. Output</Name>
                                        <Description>Physical Address of 1. Output</Description>
                                      </Parameter>
                                      <Parameter ParameterId="268435473" type="std:DWORD" IndexInDevDesc="23">
                                        <Attributes />
                                        <Value name="_x0032_68435473" visiblename="Length of the first Output" desc="Length of the first Output">1</Value>
                                        <Name>Length of the first Output</Name>
                                        <Description>Length of the first Output</Description>
                                      </Parameter>
                                      <Parameter ParameterId="268435474" type="std:DWORD" IndexInDevDesc="24">
                                        <Attributes />
                                        <Value name="_x0032_68435474" visiblename="StartBit of the first Output" desc="StartBit of the first Output">0</Value>
                                        <Name>StartBit of the first Output</Name>
                                        <Description>StartBit of the first Output</Description>
                                      </Parameter>
                                      <Parameter ParameterId="268435475" type="std:DWORD" IndexInDevDesc="25">
                                        <Attributes />
                                        <Value name="_x0032_68435475" visiblename="EndBit of the first Output" desc="EndBit of the first Output">7</Value>
                                        <Name>EndBit of the first Output</Name>
                                        <Description>EndBit of the first Output</Description>
                                      </Parameter>
                                      <Parameter ParameterId="536870912" type="std:DWORD" IndexInDevDesc="27">
                                        <Attributes />
                                        <Value name="_x0035_36870912" visiblename="Number of Infos about Inputs" desc="Number of Infos about Inputs">32</Value>
                                        <Name>Number of Infos about Inputs</Name>
                                        <Description>Number of Infos about Inputs</Description>
                                      </Parameter>
                                      <Parameter ParameterId="536870928" type="std:DWORD" IndexInDevDesc="28">
                                        <Attributes />
                                        <Value name="_x0035_36870928" visiblename="Physical Address of 1. Input" desc="Physical Address of 1. Input">3840</Value>
                                        <Name>Physical Address of 1. Input</Name>
                                        <Description>Physical Address of 1. Input</Description>
                                      </Parameter>
                                      <Parameter ParameterId="536870929" type="std:DWORD" IndexInDevDesc="29">
                                        <Attributes />
                                        <Value name="_x0035_36870929" visiblename="Length of the first Input" desc="Length of the first Input">1</Value>
                                        <Name>Length of the first Input</Name>
                                        <Description>Length of the first Input</Description>
                                      </Parameter>
                                      <Parameter ParameterId="536870930" type="std:DWORD" IndexInDevDesc="30">
                                        <Attributes />
                                        <Value name="_x0035_36870930" visiblename="StartBit of the first Input" desc="StartBit of the first Input">0</Value>
                                        <Name>StartBit of the first Input</Name>
                                        <Description>StartBit of the first Input</Description>
                                      </Parameter>
                                      <Parameter ParameterId="536870931" type="std:DWORD" IndexInDevDesc="31">
                                        <Attributes />
                                        <Value name="_x0035_36870931" visiblename="EndBit of the first Input" desc="EndBit of the first Input">7</Value>
                                        <Name>EndBit of the first Input</Name>
                                        <Description>EndBit of the first Input</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306384" type="std:BOOL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0038_05306384" visiblename="CheckProductID" desc="CheckProductID">TRUE</Value>
                                        <Name>CheckProductID</Name>
                                        <Description>CheckProductID</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306400" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0038_05306400" visiblename="CheckVendorID">TRUE</Value>
                                        <Name>CheckVendorID</Name>
                                      </Parameter>
                                      <Parameter ParameterId="805306408" type="std:BYTE" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0038_05306408" visiblename="CheckRevisionNbr" desc="CheckVendorID">1</Value>
                                        <Name>CheckRevisionNbr</Name>
                                        <Description>CheckVendorID</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306416" type="std:DWORD" IndexInDevDesc="17">
                                        <Attributes />
                                        <Value name="_x0038_05306416" visiblename="Timeout SDO Access" desc="Timeout SDO Access">1000</Value>
                                        <Name>Timeout SDO Access</Name>
                                        <Description>Timeout SDO Access</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306432" type="std:DWORD" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0038_05306432" visiblename="Timeout Init to Preop" desc="Timeout Init to Preop">3000</Value>
                                        <Name>Timeout Init to Preop</Name>
                                        <Description>Timeout Init to Preop</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306448" type="std:DWORD" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0038_05306448" visiblename="Timeout Preop to Safeop, SafeOp to Op" desc="Timeout Preop to Safeop, SafeOp to Op">10000</Value>
                                        <Name>Timeout Preop to Safeop, SafeOp to Op</Name>
                                        <Description>Timeout Preop to Safeop, SafeOp to Op</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306464" type="std:DWORD" IndexInDevDesc="18">
                                        <Attributes />
                                        <Value name="_x0038_05306464" visiblename="Timeout Back to Init" desc="Timeout Back to Init">5000</Value>
                                        <Name>Timeout Back to Init</Name>
                                        <Description>Timeout Back to Init</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306480" type="std:DWORD" IndexInDevDesc="19">
                                        <Attributes />
                                        <Value name="_x0038_05306480" visiblename="Timeout Back to SafeOp" desc="Timeout Back to SafeOp">200</Value>
                                        <Name>Timeout Back to SafeOp</Name>
                                        <Description>Timeout Back to SafeOp</Description>
                                      </Parameter>
                                      <Parameter ParameterId="805306688" type="localTypes:MailboxCapabilities" IndexInDevDesc="12">
                                        <Attributes download="false" offlineaccess="read" />
                                        <Value name="_x0038_05306688" visiblename="Mailbox capabilities" offlineaccess="read">
                                          <Element name="HasCoE" visiblename="HasCoE">False</Element>
                                          <Element name="HasSoE" visiblename="HasSoE">False</Element>
                                          <Element name="HasAoE" visiblename="HasAoE">False</Element>
                                          <Element name="HasEoE" visiblename="HasEoE">False</Element>
                                          <Element name="HasFoE" visiblename="HasFoE">False</Element>
                                          <Element name="HasVoE" visiblename="HasVoE">False</Element>
                                          <Element name="NbrChannels" visiblename="NbrChannels">0</Element>
                                        </Value>
                                        <Name>Mailbox capabilities</Name>
                                      </Parameter>
                                      <Parameter ParameterId="1074796544" type="std:DWORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_074796544" visiblename="Number of Identity Parameters" desc="Number of Identity Parameters">4</Value>
                                        <Name>Number of Identity Parameters</Name>
                                        <Description>Number of Identity Parameters</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074796545" type="std:DWORD" IndexInDevDesc="1">
                                        <Attributes />
                                        <Value name="_x0031_074796545" visiblename="Vendor Id of the Slave" desc="Vendor Id of the Slave">1946</Value>
                                        <Name>Vendor Id of the Slave</Name>
                                        <Description>Vendor Id of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074796546" type="std:DWORD" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_074796546" visiblename="Product Code of the Slave" desc="Product Code of the Slave">14614238</Value>
                                        <Name>Product Code of the Slave</Name>
                                        <Description>Product Code of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074796547" type="std:DWORD" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_074796547" visiblename="Revision Number of the Slave" desc="Revision Number of the Slave">23041</Value>
                                        <Name>Revision Number of the Slave</Name>
                                        <Description>Revision Number of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074796548" type="std:DWORD" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_074796548" visiblename="Serialnumber of the Slave" desc="Serialnumber of the Slave">0</Value>
                                        <Name>Serialnumber of the Slave</Name>
                                        <Description>Serialnumber of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074797064" type="std:STRING" IndexInDevDesc="11">
                                        <Attributes download="false" offlineaccess="read" />
                                        <Value name="_x0031_074797064" visiblename="Device URL" offlineaccess="read" desc="http://www.bausano.net/">'http://www.bausano.net/'</Value>
                                        <Name>Device URL</Name>
                                        <Description>http://www.bausano.net/</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074855936" type="std:DWORD" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_074855936" visiblename="Physical Address of the Slave" desc="Physical Address of the Slave">0</Value>
                                        <Name>Physical Address of the Slave</Name>
                                        <Description>Physical Address of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074855937" type="std:DWORD" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_074855937" visiblename="AutoIncr Address of the Slave" desc="AutoIncr Address of the Slave">0</Value>
                                        <Name>AutoIncr Address of the Slave</Name>
                                        <Description>AutoIncr Address of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1074855938" type="std:WORD">
                                        <Attributes />
                                        <Value name="_x0031_074855938" visiblename="StationAlias">0</Value>
                                        <Name>StationAlias</Name>
                                      </Parameter>
                                      <Parameter ParameterId="1074855984" type="std:STRING(255)" IndexInDevDesc="13">
                                        <Attributes channel="diag" offlineaccess="none" />
                                        <Value name="_x0031_074855984" visiblename="Diag String" offlineaccess="none" />
                                        <Name>Diag String</Name>
                                      </Parameter>
                                      <Parameter ParameterId="1074855985" type="std:BOOL" IndexInDevDesc="14">
                                        <Attributes channel="diagAck" offlineaccess="none" />
                                        <Value name="_x0031_074855985" visiblename="Diag Acknowledge" offlineaccess="none">FALSE</Value>
                                        <Name>Diag Acknowledge</Name>
                                      </Parameter>
                                      <Parameter ParameterId="1074856000" type="std:UINT" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_074856000" visiblename="LinkDelayTimeoutPortB" desc="LinkDelayTimeoutPortB">1000</Value>
                                        <Name>LinkDelayTimeoutPortB</Name>
                                        <Description>LinkDelayTimeoutPortB</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>Distributed_Clocks</Name>
                                      <Description />
                                      <Parameter ParameterId="1610633216" type="std:DWORD" IndexInDevDesc="33">
                                        <Attributes />
                                        <Value name="_x0031_610633216" visiblename="DC sync0 cycletime" desc="DC sync0 cycletime">4000</Value>
                                        <Name>DC sync0 cycletime</Name>
                                        <Description>DC sync0 cycletime</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1610678272" type="std:BOOL" IndexInDevDesc="34">
                                        <Attributes />
                                        <Value name="_x0031_610678272" visiblename="DC enable" desc="DC enable">FALSE</Value>
                                        <Name>DC enable</Name>
                                        <Description>DC enable</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1610698752" type="std:BOOL" IndexInDevDesc="35">
                                        <Attributes />
                                        <Value name="_x0031_610698752" visiblename="DC sync0 enable" desc="DC sync0 enable">FALSE</Value>
                                        <Name>DC sync0 enable</Name>
                                        <Description>DC sync0 enable</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1610764288" type="std:DWORD" IndexInDevDesc="37">
                                        <Attributes />
                                        <Value name="_x0031_610764288" visiblename="DC sync1 cycletime" desc="DC sync1 cycletime">4000</Value>
                                        <Name>DC sync1 cycletime</Name>
                                        <Description>DC sync1 cycletime</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1610809344" type="std:BOOL" IndexInDevDesc="36">
                                        <Attributes />
                                        <Value name="_x0031_610809344" visiblename="DC sync1 enable" desc="DC sync1 enable">FALSE</Value>
                                        <Name>DC sync1 enable</Name>
                                        <Description>DC sync1 enable</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1610833920" type="std:WORD" IndexInDevDesc="32">
                                        <Attributes download="false" offlineaccess="none" onlineaccess="none" />
                                        <Value name="_x0031_610833920" visiblename="DCSetting" offlineaccess="none" onlineaccess="none">0</Value>
                                        <Name>DCSetting</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>RxPDO</Name>
                                      <Description />
                                      <ParameterSection>
                                        <Name>RxPDO1</Name>
                                        <Description />
                                        <ParameterSection>
                                          <Name>Byte0</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048194" type="localTypes:Entry" IndexInDevDesc="39">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048194" visiblename="Byte0">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">1</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte0</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096770" type="localTypes:PDO_Information" IndexInDevDesc="40">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096770" visiblename="Byte0">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte0'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte0</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte1</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048195" type="localTypes:Entry" IndexInDevDesc="41">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048195" visiblename="Byte1">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">2</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte1</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096771" type="localTypes:PDO_Information" IndexInDevDesc="42">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096771" visiblename="Byte1">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte1'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte1</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte2</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048196" type="localTypes:Entry" IndexInDevDesc="43">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048196" visiblename="Byte2">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">3</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte2</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096772" type="localTypes:PDO_Information" IndexInDevDesc="44">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096772" visiblename="Byte2">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte2'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte2</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte3</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048197" type="localTypes:Entry" IndexInDevDesc="45">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048197" visiblename="Byte3">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">4</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte3</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096773" type="localTypes:PDO_Information" IndexInDevDesc="46">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096773" visiblename="Byte3">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte3'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte3</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte4</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048198" type="localTypes:Entry" IndexInDevDesc="47">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048198" visiblename="Byte4">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">5</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte4</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096774" type="localTypes:PDO_Information" IndexInDevDesc="48">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096774" visiblename="Byte4">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte4'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte4</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte5</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048199" type="localTypes:Entry" IndexInDevDesc="49">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048199" visiblename="Byte5">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">6</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte5</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096775" type="localTypes:PDO_Information" IndexInDevDesc="50">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096775" visiblename="Byte5">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte5'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte5</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte6</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048200" type="localTypes:Entry" IndexInDevDesc="51">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048200" visiblename="Byte6">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">7</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte6</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096776" type="localTypes:PDO_Information" IndexInDevDesc="52">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096776" visiblename="Byte6">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte6'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte6</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte7</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048201" type="localTypes:Entry" IndexInDevDesc="53">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048201" visiblename="Byte7">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">8</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte7</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096777" type="localTypes:PDO_Information" IndexInDevDesc="54">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096777" visiblename="Byte7">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte7'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte7</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte8</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048202" type="localTypes:Entry" IndexInDevDesc="55">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048202" visiblename="Byte8">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">9</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte8</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096778" type="localTypes:PDO_Information" IndexInDevDesc="56">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096778" visiblename="Byte8">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte8'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte8</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte9</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048203" type="localTypes:Entry" IndexInDevDesc="57">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048203" visiblename="Byte9">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">10</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte9</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096779" type="localTypes:PDO_Information" IndexInDevDesc="58">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096779" visiblename="Byte9">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte9'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte9</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte10</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048204" type="localTypes:Entry" IndexInDevDesc="59">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048204" visiblename="Byte10">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">11</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte10</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096780" type="localTypes:PDO_Information" IndexInDevDesc="60">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096780" visiblename="Byte10">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte10'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte10</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte11</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048205" type="localTypes:Entry" IndexInDevDesc="61">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048205" visiblename="Byte11">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">12</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte11</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096781" type="localTypes:PDO_Information" IndexInDevDesc="62">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096781" visiblename="Byte11">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte11'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte11</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte12</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048206" type="localTypes:Entry" IndexInDevDesc="63">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048206" visiblename="Byte12">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">13</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte12</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096782" type="localTypes:PDO_Information" IndexInDevDesc="64">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096782" visiblename="Byte12">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte12'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte12</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte13</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048207" type="localTypes:Entry" IndexInDevDesc="65">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048207" visiblename="Byte13">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">14</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte13</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096783" type="localTypes:PDO_Information" IndexInDevDesc="66">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096783" visiblename="Byte13">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte13'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte13</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte14</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048208" type="localTypes:Entry" IndexInDevDesc="67">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048208" visiblename="Byte14">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">15</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte14</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096784" type="localTypes:PDO_Information" IndexInDevDesc="68">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096784" visiblename="Byte14">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte14'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte14</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte15</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048209" type="localTypes:Entry" IndexInDevDesc="69">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048209" visiblename="Byte15">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">16</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte15</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096785" type="localTypes:PDO_Information" IndexInDevDesc="70">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096785" visiblename="Byte15">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte15'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte15</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte16</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048210" type="localTypes:Entry" IndexInDevDesc="71">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048210" visiblename="Byte16">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">17</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte16</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096786" type="localTypes:PDO_Information" IndexInDevDesc="72">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096786" visiblename="Byte16">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte16'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte16</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte17</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048211" type="localTypes:Entry" IndexInDevDesc="73">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048211" visiblename="Byte17">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">18</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte17</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096787" type="localTypes:PDO_Information" IndexInDevDesc="74">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096787" visiblename="Byte17">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte17'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte17</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte18</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048212" type="localTypes:Entry" IndexInDevDesc="75">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048212" visiblename="Byte18">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">19</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte18</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096788" type="localTypes:PDO_Information" IndexInDevDesc="76">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096788" visiblename="Byte18">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte18'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte18</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte19</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048213" type="localTypes:Entry" IndexInDevDesc="77">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048213" visiblename="Byte19">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">20</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte19</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096789" type="localTypes:PDO_Information" IndexInDevDesc="78">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096789" visiblename="Byte19">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte19'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte19</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte20</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048214" type="localTypes:Entry" IndexInDevDesc="79">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048214" visiblename="Byte20">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">21</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte20</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096790" type="localTypes:PDO_Information" IndexInDevDesc="80">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096790" visiblename="Byte20">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte20'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte20</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte21</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048215" type="localTypes:Entry" IndexInDevDesc="81">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048215" visiblename="Byte21">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">22</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte21</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096791" type="localTypes:PDO_Information" IndexInDevDesc="82">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096791" visiblename="Byte21">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte21'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte21</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte22</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048216" type="localTypes:Entry" IndexInDevDesc="83">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048216" visiblename="Byte22">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">23</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte22</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096792" type="localTypes:PDO_Information" IndexInDevDesc="84">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096792" visiblename="Byte22">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte22'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte22</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte23</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048217" type="localTypes:Entry" IndexInDevDesc="85">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048217" visiblename="Byte23">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">24</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte23</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096793" type="localTypes:PDO_Information" IndexInDevDesc="86">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096793" visiblename="Byte23">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte23'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte23</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte24</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048218" type="localTypes:Entry" IndexInDevDesc="87">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048218" visiblename="Byte24">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">25</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte24</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096794" type="localTypes:PDO_Information" IndexInDevDesc="88">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096794" visiblename="Byte24">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte24'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte24</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte25</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048219" type="localTypes:Entry" IndexInDevDesc="89">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048219" visiblename="Byte25">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">26</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte25</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096795" type="localTypes:PDO_Information" IndexInDevDesc="90">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096795" visiblename="Byte25">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte25'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte25</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte26</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048220" type="localTypes:Entry" IndexInDevDesc="91">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048220" visiblename="Byte26">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">27</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte26</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096796" type="localTypes:PDO_Information" IndexInDevDesc="92">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096796" visiblename="Byte26">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte26'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte26</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte27</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048221" type="localTypes:Entry" IndexInDevDesc="93">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048221" visiblename="Byte27">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">28</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte27</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096797" type="localTypes:PDO_Information" IndexInDevDesc="94">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096797" visiblename="Byte27">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte27'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte27</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte28</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048222" type="localTypes:Entry" IndexInDevDesc="95">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048222" visiblename="Byte28">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">29</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte28</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096798" type="localTypes:PDO_Information" IndexInDevDesc="96">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096798" visiblename="Byte28">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte28'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte28</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte29</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048223" type="localTypes:Entry" IndexInDevDesc="97">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048223" visiblename="Byte29">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">30</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte29</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096799" type="localTypes:PDO_Information" IndexInDevDesc="98">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096799" visiblename="Byte29">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte29'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte29</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte30</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048224" type="localTypes:Entry" IndexInDevDesc="99">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048224" visiblename="Byte30">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">31</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte30</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096800" type="localTypes:PDO_Information" IndexInDevDesc="100">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096800" visiblename="Byte30">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte30'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte30</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte31</Name>
                                          <Description />
                                          <Parameter ParameterId="1879048225" type="localTypes:Entry" IndexInDevDesc="101">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879048225" visiblename="Byte31">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0005</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">32</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte31</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880096801" type="localTypes:PDO_Information" IndexInDevDesc="102">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880096801" visiblename="Byte31">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte31'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'0'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte31</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <Parameter ParameterId="1879048192" type="localTypes:RxTxPdo" IndexInDevDesc="103">
                                          <Attributes download="false" />
                                          <Value name="_x0031_879048192" visiblename="RxTxPdo">
                                            <Element name="NumberofExcludes" visiblename="NumberofExcludes">0</Element>
                                            <Element name="NumberofEntries" visiblename="NumberofEntries">32</Element>
                                            <Element name="Index" visiblename="Index">16#1600</Element>
                                            <Element name="Fixed" visiblename="Fixed">True</Element>
                                            <Element name="Mandatory" visiblename="Mandatory">True</Element>
                                            <Element name="Virtual" visiblename="Virtual">False</Element>
                                            <Element name="Sm" visiblename="Sm">0</Element>
                                            <Element name="Su" visiblename="Su">0</Element>
                                            <Element name="Name" visiblename="Name">'Outputs'</Element>
                                            <Element name="DependOnSlot" visiblename="DependOnSlot">false</Element>
                                            <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup">false</Element>
                                            <Element name="OverwrittenByModule" visiblename="OverwrittenByModule">false</Element>
                                          </Value>
                                          <Name>RxTxPdo</Name>
                                        </Parameter>
                                      </ParameterSection>
                                      <Parameter ParameterId="1342504960" type="std:DWORD" IndexInDevDesc="38">
                                        <Attributes />
                                        <Value name="_x0031_342504960" visiblename="Number of RxPDOs of the Slave" desc="Number of RxPDOs of the Slave">1</Value>
                                        <Name>Number of RxPDOs of the Slave</Name>
                                        <Description>Number of RxPDOs of the Slave</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>TxPDO</Name>
                                      <Description />
                                      <ParameterSection>
                                        <Name>TxPDO1</Name>
                                        <Description />
                                        <ParameterSection>
                                          <Name>Byte0</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375874" type="localTypes:Entry" IndexInDevDesc="105">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375874" visiblename="Byte0">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">1</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte0</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424450" type="localTypes:PDO_Information" IndexInDevDesc="106">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424450" visiblename="Byte0">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte0'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte0</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte1</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375875" type="localTypes:Entry" IndexInDevDesc="107">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375875" visiblename="Byte1">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">2</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte1</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424451" type="localTypes:PDO_Information" IndexInDevDesc="108">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424451" visiblename="Byte1">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte1'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte1</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte2</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375876" type="localTypes:Entry" IndexInDevDesc="109">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375876" visiblename="Byte2">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">3</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte2</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424452" type="localTypes:PDO_Information" IndexInDevDesc="110">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424452" visiblename="Byte2">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte2'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte2</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte3</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375877" type="localTypes:Entry" IndexInDevDesc="111">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375877" visiblename="Byte3">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">4</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte3</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424453" type="localTypes:PDO_Information" IndexInDevDesc="112">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424453" visiblename="Byte3">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte3'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte3</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte4</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375878" type="localTypes:Entry" IndexInDevDesc="113">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375878" visiblename="Byte4">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">5</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte4</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424454" type="localTypes:PDO_Information" IndexInDevDesc="114">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424454" visiblename="Byte4">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte4'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte4</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte5</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375879" type="localTypes:Entry" IndexInDevDesc="115">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375879" visiblename="Byte5">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">6</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte5</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424455" type="localTypes:PDO_Information" IndexInDevDesc="116">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424455" visiblename="Byte5">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte5'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte5</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte6</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375880" type="localTypes:Entry" IndexInDevDesc="117">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375880" visiblename="Byte6">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">7</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte6</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424456" type="localTypes:PDO_Information" IndexInDevDesc="118">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424456" visiblename="Byte6">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte6'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte6</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte7</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375881" type="localTypes:Entry" IndexInDevDesc="119">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375881" visiblename="Byte7">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">8</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte7</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424457" type="localTypes:PDO_Information" IndexInDevDesc="120">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424457" visiblename="Byte7">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte7'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte7</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte8</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375882" type="localTypes:Entry" IndexInDevDesc="121">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375882" visiblename="Byte8">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">9</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte8</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424458" type="localTypes:PDO_Information" IndexInDevDesc="122">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424458" visiblename="Byte8">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte8'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte8</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte9</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375883" type="localTypes:Entry" IndexInDevDesc="123">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375883" visiblename="Byte9">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">10</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte9</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424459" type="localTypes:PDO_Information" IndexInDevDesc="124">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424459" visiblename="Byte9">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte9'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte9</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte10</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375884" type="localTypes:Entry" IndexInDevDesc="125">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375884" visiblename="Byte10">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">11</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte10</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424460" type="localTypes:PDO_Information" IndexInDevDesc="126">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424460" visiblename="Byte10">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte10'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte10</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte11</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375885" type="localTypes:Entry" IndexInDevDesc="127">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375885" visiblename="Byte11">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">12</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte11</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424461" type="localTypes:PDO_Information" IndexInDevDesc="128">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424461" visiblename="Byte11">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte11'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte11</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte12</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375886" type="localTypes:Entry" IndexInDevDesc="129">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375886" visiblename="Byte12">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">13</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte12</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424462" type="localTypes:PDO_Information" IndexInDevDesc="130">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424462" visiblename="Byte12">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte12'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte12</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte13</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375887" type="localTypes:Entry" IndexInDevDesc="131">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375887" visiblename="Byte13">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">14</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte13</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424463" type="localTypes:PDO_Information" IndexInDevDesc="132">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424463" visiblename="Byte13">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte13'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte13</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte14</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375888" type="localTypes:Entry" IndexInDevDesc="133">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375888" visiblename="Byte14">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">15</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte14</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424464" type="localTypes:PDO_Information" IndexInDevDesc="134">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424464" visiblename="Byte14">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte14'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte14</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte15</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375889" type="localTypes:Entry" IndexInDevDesc="135">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375889" visiblename="Byte15">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">16</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte15</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424465" type="localTypes:PDO_Information" IndexInDevDesc="136">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424465" visiblename="Byte15">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte15'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte15</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte16</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375890" type="localTypes:Entry" IndexInDevDesc="137">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375890" visiblename="Byte16">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">17</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte16</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424466" type="localTypes:PDO_Information" IndexInDevDesc="138">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424466" visiblename="Byte16">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte16'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte16</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte17</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375891" type="localTypes:Entry" IndexInDevDesc="139">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375891" visiblename="Byte17">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">18</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte17</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424467" type="localTypes:PDO_Information" IndexInDevDesc="140">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424467" visiblename="Byte17">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte17'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte17</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte18</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375892" type="localTypes:Entry" IndexInDevDesc="141">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375892" visiblename="Byte18">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">19</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte18</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424468" type="localTypes:PDO_Information" IndexInDevDesc="142">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424468" visiblename="Byte18">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte18'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte18</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte19</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375893" type="localTypes:Entry" IndexInDevDesc="143">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375893" visiblename="Byte19">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">20</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte19</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424469" type="localTypes:PDO_Information" IndexInDevDesc="144">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424469" visiblename="Byte19">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte19'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte19</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte20</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375894" type="localTypes:Entry" IndexInDevDesc="145">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375894" visiblename="Byte20">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">21</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte20</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424470" type="localTypes:PDO_Information" IndexInDevDesc="146">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424470" visiblename="Byte20">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte20'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte20</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte21</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375895" type="localTypes:Entry" IndexInDevDesc="147">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375895" visiblename="Byte21">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">22</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte21</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424471" type="localTypes:PDO_Information" IndexInDevDesc="148">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424471" visiblename="Byte21">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte21'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte21</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte22</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375896" type="localTypes:Entry" IndexInDevDesc="149">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375896" visiblename="Byte22">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">23</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte22</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424472" type="localTypes:PDO_Information" IndexInDevDesc="150">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424472" visiblename="Byte22">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte22'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte22</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte23</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375897" type="localTypes:Entry" IndexInDevDesc="151">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375897" visiblename="Byte23">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">24</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte23</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424473" type="localTypes:PDO_Information" IndexInDevDesc="152">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424473" visiblename="Byte23">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte23'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte23</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte24</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375898" type="localTypes:Entry" IndexInDevDesc="153">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375898" visiblename="Byte24">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">25</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte24</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424474" type="localTypes:PDO_Information" IndexInDevDesc="154">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424474" visiblename="Byte24">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte24'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte24</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte25</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375899" type="localTypes:Entry" IndexInDevDesc="155">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375899" visiblename="Byte25">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">26</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte25</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424475" type="localTypes:PDO_Information" IndexInDevDesc="156">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424475" visiblename="Byte25">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte25'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte25</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte26</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375900" type="localTypes:Entry" IndexInDevDesc="157">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375900" visiblename="Byte26">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">27</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte26</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424476" type="localTypes:PDO_Information" IndexInDevDesc="158">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424476" visiblename="Byte26">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte26'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte26</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte27</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375901" type="localTypes:Entry" IndexInDevDesc="159">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375901" visiblename="Byte27">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">28</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte27</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424477" type="localTypes:PDO_Information" IndexInDevDesc="160">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424477" visiblename="Byte27">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte27'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte27</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte28</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375902" type="localTypes:Entry" IndexInDevDesc="161">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375902" visiblename="Byte28">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">29</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte28</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424478" type="localTypes:PDO_Information" IndexInDevDesc="162">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424478" visiblename="Byte28">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte28'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte28</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte29</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375903" type="localTypes:Entry" IndexInDevDesc="163">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375903" visiblename="Byte29">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">30</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte29</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424479" type="localTypes:PDO_Information" IndexInDevDesc="164">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424479" visiblename="Byte29">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte29'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte29</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte30</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375904" type="localTypes:Entry" IndexInDevDesc="165">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375904" visiblename="Byte30">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">31</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte30</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424480" type="localTypes:PDO_Information" IndexInDevDesc="166">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424480" visiblename="Byte30">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte30'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte30</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <ParameterSection>
                                          <Name>Byte31</Name>
                                          <Description />
                                          <Parameter ParameterId="1879375905" type="localTypes:Entry" IndexInDevDesc="167">
                                            <Attributes download="false" />
                                            <Value name="_x0031_879375905" visiblename="Byte31">
                                              <Element name="Index" visiblename="Index" desc="Index">16#0006</Element>
                                              <Element name="SubIndex" visiblename="SubIndex" desc="SubIndex">32</Element>
                                              <Element name="Size" visiblename="Size" desc="Size">8</Element>
                                              <Element name="Offset" visiblename="Offset" desc="Offset" />
                                              <Element name="DependOnSlot" visiblename="DependOnSlot" desc="DependOnSlot">false</Element>
                                              <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup" desc="DependOnSlotGroup">false</Element>
                                            </Value>
                                            <Name>Byte31</Name>
                                          </Parameter>
                                          <Parameter ParameterId="1880424481" type="localTypes:PDO_Information" IndexInDevDesc="168">
                                            <Attributes download="false" />
                                            <Value name="_x0031_880424481" visiblename="Byte31">
                                              <Element name="Name" visiblename="Name" desc="Name">'Byte31'</Element>
                                              <Element name="DataType" visiblename="DataType" desc="DataType">'USINT'</Element>
                                              <Element name="Default" visiblename="Default" desc="Default">'1'</Element>
                                              <Element name="Comment" visiblename="Comment" desc="Comment">''</Element>
                                            </Value>
                                            <Name>Byte31</Name>
                                          </Parameter>
                                        </ParameterSection>
                                        <Parameter ParameterId="1879375872" type="localTypes:RxTxPdo" IndexInDevDesc="169">
                                          <Attributes download="false" />
                                          <Value name="_x0031_879375872" visiblename="RxTxPdo">
                                            <Element name="NumberofExcludes" visiblename="NumberofExcludes">0</Element>
                                            <Element name="NumberofEntries" visiblename="NumberofEntries">32</Element>
                                            <Element name="Index" visiblename="Index">16#1a00</Element>
                                            <Element name="Fixed" visiblename="Fixed">True</Element>
                                            <Element name="Mandatory" visiblename="Mandatory">True</Element>
                                            <Element name="Virtual" visiblename="Virtual">False</Element>
                                            <Element name="Sm" visiblename="Sm">1</Element>
                                            <Element name="Su" visiblename="Su">1</Element>
                                            <Element name="Name" visiblename="Name">'Inputs'</Element>
                                            <Element name="DependOnSlot" visiblename="DependOnSlot">false</Element>
                                            <Element name="DependOnSlotGroup" visiblename="DependOnSlotGroup">false</Element>
                                            <Element name="OverwrittenByModule" visiblename="OverwrittenByModule">false</Element>
                                          </Value>
                                          <Name>RxTxPdo</Name>
                                        </Parameter>
                                      </ParameterSection>
                                      <Parameter ParameterId="1342636032" type="std:DWORD" IndexInDevDesc="104">
                                        <Attributes />
                                        <Value name="_x0031_342636032" visiblename="Number of TxPDOs of the Slave" desc="Number of TxPDOs of the Slave">1</Value>
                                        <Name>Number of TxPDOs of the Slave</Name>
                                        <Description>Number of TxPDOs of the Slave</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>FMMUs</Name>
                                      <Description />
                                      <Parameter ParameterId="1342177312" type="std:DWORD" IndexInDevDesc="170">
                                        <Attributes />
                                        <Value name="_x0031_342177312" visiblename="Number of FMMUs of the Slave" desc="Number of FMMUs of the Slave">2</Value>
                                        <Name>Number of FMMUs of the Slave</Name>
                                        <Description>Number of FMMUs of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1342177313" type="localTypes:FMMU" IndexInDevDesc="171">
                                        <Attributes />
                                        <Value name="_x0031_342177313" visiblename="FMMU">
                                          <Element name="globstartadr" visiblename="Global Start Address" desc="Global Start Address">33554432</Element>
                                          <Element name="length" visiblename="Length" desc="Length">32</Element>
                                          <Element name="startbit" visiblename="StartBit" desc="StartBit">0</Element>
                                          <Element name="endbit" visiblename="EndBit" desc="EndBit">7</Element>
                                          <Element name="physstartadr" visiblename="Physical Start Address" desc="Physical Start Address">4096</Element>
                                          <Element name="logstartbit" visiblename="Logical Start Bit" desc="Logical Start Bit">0</Element>
                                          <Element name="access" visiblename="Access" desc="Access">2</Element>
                                          <Element name="flags" visiblename="Flags" desc="Flags">1</Element>
                                        </Value>
                                        <Name>FMMU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="1342177314" type="localTypes:FMMU" IndexInDevDesc="172">
                                        <Attributes />
                                        <Value name="_x0031_342177314" visiblename="FMMU">
                                          <Element name="globstartadr" visiblename="Global Start Address" desc="Global Start Address">16777216</Element>
                                          <Element name="length" visiblename="Length" desc="Length">32</Element>
                                          <Element name="startbit" visiblename="StartBit" desc="StartBit">0</Element>
                                          <Element name="endbit" visiblename="EndBit" desc="EndBit">7</Element>
                                          <Element name="physstartadr" visiblename="Physical Start Address" desc="Physical Start Address">4608</Element>
                                          <Element name="logstartbit" visiblename="Logical Start Bit" desc="Logical Start Bit">0</Element>
                                          <Element name="access" visiblename="Access" desc="Access">1</Element>
                                          <Element name="flags" visiblename="Flags" desc="Flags">1</Element>
                                        </Value>
                                        <Name>FMMU</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>SyncManager</Name>
                                      <Description />
                                      <Parameter ParameterId="1342177280" type="std:DWORD" IndexInDevDesc="173">
                                        <Attributes />
                                        <Value name="_x0031_342177280" visiblename="Number of SyncManagers of the Slave" desc="Number of SyncManagers of the Slave">2</Value>
                                        <Name>Number of SyncManagers of the Slave</Name>
                                        <Description>Number of SyncManagers of the Slave</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1342177281" type="localTypes:Sync" IndexInDevDesc="174">
                                        <Attributes />
                                        <Value name="_x0031_342177281" visiblename="Sync">
                                          <Element name="physicalAddress" visiblename="Physical Address" desc="Physical Address">4096</Element>
                                          <Element name="length" visiblename="Length" desc="Length">32</Element>
                                          <Element name="flagtypedir" visiblename="FlagTypeDir" desc="FlagTypeDir">100</Element>
                                          <Element name="flagevent" visiblename="FlagEvent" desc="FlagEvent">0</Element>
                                          <Element name="flagctrl" visiblename="FlagControl" desc="FlagControl">1</Element>
                                          <Element name="synctype" visiblename="SyncType" desc="SyncType">1</Element>
                                          <Element name="flagvirtual" visiblename="Virtual" desc="Virtual">0</Element>
                                          <Element name="oponly" visiblename="OpOnly" desc="OpOnly">0</Element>
                                        </Value>
                                        <Name>Sync</Name>
                                      </Parameter>
                                      <Parameter ParameterId="1342177282" type="localTypes:Sync" IndexInDevDesc="175">
                                        <Attributes />
                                        <Value name="_x0031_342177282" visiblename="Sync">
                                          <Element name="physicalAddress" visiblename="Physical Address" desc="Physical Address">4608</Element>
                                          <Element name="length" visiblename="Length" desc="Length">32</Element>
                                          <Element name="flagtypedir" visiblename="FlagTypeDir" desc="FlagTypeDir">32</Element>
                                          <Element name="flagevent" visiblename="FlagEvent" desc="FlagEvent">0</Element>
                                          <Element name="flagctrl" visiblename="FlagControl" desc="FlagControl">1</Element>
                                          <Element name="synctype" visiblename="SyncType" desc="SyncType">0</Element>
                                          <Element name="flagvirtual" visiblename="Virtual" desc="Virtual">0</Element>
                                          <Element name="oponly" visiblename="OpOnly" desc="OpOnly">0</Element>
                                        </Value>
                                        <Name>Sync</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>16#1600 Outputs</Name>
                                      <Description />
                                      <Parameter ParameterId="16777218" type="std:USINT" IndexInDevDesc="176">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777218" visiblename="Byte0" desc="Byte0">
                                          <Element name="_x0031_6777218_0" visiblename="Bit0" desc="Byte0">FALSE</Element>
                                          <Element name="_x0031_6777218_1" visiblename="Bit1" desc="Byte0">FALSE</Element>
                                          <Element name="_x0031_6777218_2" visiblename="Bit2" desc="Byte0">FALSE</Element>
                                          <Element name="_x0031_6777218_3" visiblename="Bit3" desc="Byte0">FALSE</Element>
                                          <Element name="_x0031_6777218_4" visiblename="Bit4" desc="Byte0">FALSE</Element>
                                          <Element name="_x0031_6777218_5" visiblename="Bit5" desc="Byte0">FALSE</Element>
                                          <Element name="_x0031_6777218_6" visiblename="Bit6" desc="Byte0">FALSE</Element>
                                          <Element name="_x0031_6777218_7" visiblename="Bit7" desc="Byte0">FALSE</Element>
                                        </Value>
                                        <Name>Byte0</Name>
                                        <Description>Byte0</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777219" type="std:USINT" IndexInDevDesc="177">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777219" visiblename="Byte1" desc="Byte1">
                                          <Element name="_x0031_6777219_0" visiblename="Bit0" desc="Byte1">FALSE</Element>
                                          <Element name="_x0031_6777219_1" visiblename="Bit1" desc="Byte1">FALSE</Element>
                                          <Element name="_x0031_6777219_2" visiblename="Bit2" desc="Byte1">FALSE</Element>
                                          <Element name="_x0031_6777219_3" visiblename="Bit3" desc="Byte1">FALSE</Element>
                                          <Element name="_x0031_6777219_4" visiblename="Bit4" desc="Byte1">FALSE</Element>
                                          <Element name="_x0031_6777219_5" visiblename="Bit5" desc="Byte1">FALSE</Element>
                                          <Element name="_x0031_6777219_6" visiblename="Bit6" desc="Byte1">FALSE</Element>
                                          <Element name="_x0031_6777219_7" visiblename="Bit7" desc="Byte1">FALSE</Element>
                                        </Value>
                                        <Name>Byte1</Name>
                                        <Description>Byte1</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777220" type="std:USINT" IndexInDevDesc="178">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777220" visiblename="Byte2" desc="Byte2">
                                          <Element name="_x0031_6777220_0" visiblename="Bit0" desc="Byte2">FALSE</Element>
                                          <Element name="_x0031_6777220_1" visiblename="Bit1" desc="Byte2">FALSE</Element>
                                          <Element name="_x0031_6777220_2" visiblename="Bit2" desc="Byte2">FALSE</Element>
                                          <Element name="_x0031_6777220_3" visiblename="Bit3" desc="Byte2">FALSE</Element>
                                          <Element name="_x0031_6777220_4" visiblename="Bit4" desc="Byte2">FALSE</Element>
                                          <Element name="_x0031_6777220_5" visiblename="Bit5" desc="Byte2">FALSE</Element>
                                          <Element name="_x0031_6777220_6" visiblename="Bit6" desc="Byte2">FALSE</Element>
                                          <Element name="_x0031_6777220_7" visiblename="Bit7" desc="Byte2">FALSE</Element>
                                        </Value>
                                        <Name>Byte2</Name>
                                        <Description>Byte2</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777221" type="std:USINT" IndexInDevDesc="179">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777221" visiblename="Byte3" desc="Byte3">
                                          <Element name="_x0031_6777221_0" visiblename="Bit0" desc="Byte3">FALSE</Element>
                                          <Element name="_x0031_6777221_1" visiblename="Bit1" desc="Byte3">FALSE</Element>
                                          <Element name="_x0031_6777221_2" visiblename="Bit2" desc="Byte3">FALSE</Element>
                                          <Element name="_x0031_6777221_3" visiblename="Bit3" desc="Byte3">FALSE</Element>
                                          <Element name="_x0031_6777221_4" visiblename="Bit4" desc="Byte3">FALSE</Element>
                                          <Element name="_x0031_6777221_5" visiblename="Bit5" desc="Byte3">FALSE</Element>
                                          <Element name="_x0031_6777221_6" visiblename="Bit6" desc="Byte3">FALSE</Element>
                                          <Element name="_x0031_6777221_7" visiblename="Bit7" desc="Byte3">FALSE</Element>
                                        </Value>
                                        <Name>Byte3</Name>
                                        <Description>Byte3</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777222" type="std:USINT" IndexInDevDesc="180">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777222" visiblename="Byte4" desc="Byte4">
                                          <Element name="_x0031_6777222_0" visiblename="Bit0" desc="Byte4">FALSE</Element>
                                          <Element name="_x0031_6777222_1" visiblename="Bit1" desc="Byte4">FALSE</Element>
                                          <Element name="_x0031_6777222_2" visiblename="Bit2" desc="Byte4">FALSE</Element>
                                          <Element name="_x0031_6777222_3" visiblename="Bit3" desc="Byte4">FALSE</Element>
                                          <Element name="_x0031_6777222_4" visiblename="Bit4" desc="Byte4">FALSE</Element>
                                          <Element name="_x0031_6777222_5" visiblename="Bit5" desc="Byte4">FALSE</Element>
                                          <Element name="_x0031_6777222_6" visiblename="Bit6" desc="Byte4">FALSE</Element>
                                          <Element name="_x0031_6777222_7" visiblename="Bit7" desc="Byte4">FALSE</Element>
                                        </Value>
                                        <Name>Byte4</Name>
                                        <Description>Byte4</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777223" type="std:USINT" IndexInDevDesc="181">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777223" visiblename="Byte5" desc="Byte5">
                                          <Element name="_x0031_6777223_0" visiblename="Bit0" desc="Byte5">FALSE</Element>
                                          <Element name="_x0031_6777223_1" visiblename="Bit1" desc="Byte5">FALSE</Element>
                                          <Element name="_x0031_6777223_2" visiblename="Bit2" desc="Byte5">FALSE</Element>
                                          <Element name="_x0031_6777223_3" visiblename="Bit3" desc="Byte5">FALSE</Element>
                                          <Element name="_x0031_6777223_4" visiblename="Bit4" desc="Byte5">FALSE</Element>
                                          <Element name="_x0031_6777223_5" visiblename="Bit5" desc="Byte5">FALSE</Element>
                                          <Element name="_x0031_6777223_6" visiblename="Bit6" desc="Byte5">FALSE</Element>
                                          <Element name="_x0031_6777223_7" visiblename="Bit7" desc="Byte5">FALSE</Element>
                                        </Value>
                                        <Name>Byte5</Name>
                                        <Description>Byte5</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777224" type="std:USINT" IndexInDevDesc="182">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777224" visiblename="Byte6" desc="Byte6">
                                          <Element name="_x0031_6777224_0" visiblename="Bit0" desc="Byte6">FALSE</Element>
                                          <Element name="_x0031_6777224_1" visiblename="Bit1" desc="Byte6">FALSE</Element>
                                          <Element name="_x0031_6777224_2" visiblename="Bit2" desc="Byte6">FALSE</Element>
                                          <Element name="_x0031_6777224_3" visiblename="Bit3" desc="Byte6">FALSE</Element>
                                          <Element name="_x0031_6777224_4" visiblename="Bit4" desc="Byte6">FALSE</Element>
                                          <Element name="_x0031_6777224_5" visiblename="Bit5" desc="Byte6">FALSE</Element>
                                          <Element name="_x0031_6777224_6" visiblename="Bit6" desc="Byte6">FALSE</Element>
                                          <Element name="_x0031_6777224_7" visiblename="Bit7" desc="Byte6">FALSE</Element>
                                        </Value>
                                        <Name>Byte6</Name>
                                        <Description>Byte6</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777225" type="std:USINT" IndexInDevDesc="183">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777225" visiblename="Byte7" desc="Byte7">
                                          <Element name="_x0031_6777225_0" visiblename="Bit0" desc="Byte7">FALSE</Element>
                                          <Element name="_x0031_6777225_1" visiblename="Bit1" desc="Byte7">FALSE</Element>
                                          <Element name="_x0031_6777225_2" visiblename="Bit2" desc="Byte7">FALSE</Element>
                                          <Element name="_x0031_6777225_3" visiblename="Bit3" desc="Byte7">FALSE</Element>
                                          <Element name="_x0031_6777225_4" visiblename="Bit4" desc="Byte7">FALSE</Element>
                                          <Element name="_x0031_6777225_5" visiblename="Bit5" desc="Byte7">FALSE</Element>
                                          <Element name="_x0031_6777225_6" visiblename="Bit6" desc="Byte7">FALSE</Element>
                                          <Element name="_x0031_6777225_7" visiblename="Bit7" desc="Byte7">FALSE</Element>
                                        </Value>
                                        <Name>Byte7</Name>
                                        <Description>Byte7</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777226" type="std:USINT" IndexInDevDesc="184">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777226" visiblename="Byte8" desc="Byte8">
                                          <Element name="_x0031_6777226_0" visiblename="Bit0" desc="Byte8">FALSE</Element>
                                          <Element name="_x0031_6777226_1" visiblename="Bit1" desc="Byte8">FALSE</Element>
                                          <Element name="_x0031_6777226_2" visiblename="Bit2" desc="Byte8">FALSE</Element>
                                          <Element name="_x0031_6777226_3" visiblename="Bit3" desc="Byte8">FALSE</Element>
                                          <Element name="_x0031_6777226_4" visiblename="Bit4" desc="Byte8">FALSE</Element>
                                          <Element name="_x0031_6777226_5" visiblename="Bit5" desc="Byte8">FALSE</Element>
                                          <Element name="_x0031_6777226_6" visiblename="Bit6" desc="Byte8">FALSE</Element>
                                          <Element name="_x0031_6777226_7" visiblename="Bit7" desc="Byte8">FALSE</Element>
                                        </Value>
                                        <Name>Byte8</Name>
                                        <Description>Byte8</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777227" type="std:USINT" IndexInDevDesc="185">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777227" visiblename="Byte9" desc="Byte9">
                                          <Element name="_x0031_6777227_0" visiblename="Bit0" desc="Byte9">FALSE</Element>
                                          <Element name="_x0031_6777227_1" visiblename="Bit1" desc="Byte9">FALSE</Element>
                                          <Element name="_x0031_6777227_2" visiblename="Bit2" desc="Byte9">FALSE</Element>
                                          <Element name="_x0031_6777227_3" visiblename="Bit3" desc="Byte9">FALSE</Element>
                                          <Element name="_x0031_6777227_4" visiblename="Bit4" desc="Byte9">FALSE</Element>
                                          <Element name="_x0031_6777227_5" visiblename="Bit5" desc="Byte9">FALSE</Element>
                                          <Element name="_x0031_6777227_6" visiblename="Bit6" desc="Byte9">FALSE</Element>
                                          <Element name="_x0031_6777227_7" visiblename="Bit7" desc="Byte9">FALSE</Element>
                                        </Value>
                                        <Name>Byte9</Name>
                                        <Description>Byte9</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777228" type="std:USINT" IndexInDevDesc="186">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777228" visiblename="Byte10" desc="Byte10">
                                          <Element name="_x0031_6777228_0" visiblename="Bit0" desc="Byte10">FALSE</Element>
                                          <Element name="_x0031_6777228_1" visiblename="Bit1" desc="Byte10">FALSE</Element>
                                          <Element name="_x0031_6777228_2" visiblename="Bit2" desc="Byte10">FALSE</Element>
                                          <Element name="_x0031_6777228_3" visiblename="Bit3" desc="Byte10">FALSE</Element>
                                          <Element name="_x0031_6777228_4" visiblename="Bit4" desc="Byte10">FALSE</Element>
                                          <Element name="_x0031_6777228_5" visiblename="Bit5" desc="Byte10">FALSE</Element>
                                          <Element name="_x0031_6777228_6" visiblename="Bit6" desc="Byte10">FALSE</Element>
                                          <Element name="_x0031_6777228_7" visiblename="Bit7" desc="Byte10">FALSE</Element>
                                        </Value>
                                        <Name>Byte10</Name>
                                        <Description>Byte10</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777229" type="std:USINT" IndexInDevDesc="187">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777229" visiblename="Byte11" desc="Byte11">
                                          <Element name="_x0031_6777229_0" visiblename="Bit0" desc="Byte11">FALSE</Element>
                                          <Element name="_x0031_6777229_1" visiblename="Bit1" desc="Byte11">FALSE</Element>
                                          <Element name="_x0031_6777229_2" visiblename="Bit2" desc="Byte11">FALSE</Element>
                                          <Element name="_x0031_6777229_3" visiblename="Bit3" desc="Byte11">FALSE</Element>
                                          <Element name="_x0031_6777229_4" visiblename="Bit4" desc="Byte11">FALSE</Element>
                                          <Element name="_x0031_6777229_5" visiblename="Bit5" desc="Byte11">FALSE</Element>
                                          <Element name="_x0031_6777229_6" visiblename="Bit6" desc="Byte11">FALSE</Element>
                                          <Element name="_x0031_6777229_7" visiblename="Bit7" desc="Byte11">FALSE</Element>
                                        </Value>
                                        <Name>Byte11</Name>
                                        <Description>Byte11</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777230" type="std:USINT" IndexInDevDesc="188">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777230" visiblename="Byte12" desc="Byte12">
                                          <Element name="_x0031_6777230_0" visiblename="Bit0" desc="Byte12">FALSE</Element>
                                          <Element name="_x0031_6777230_1" visiblename="Bit1" desc="Byte12">FALSE</Element>
                                          <Element name="_x0031_6777230_2" visiblename="Bit2" desc="Byte12">FALSE</Element>
                                          <Element name="_x0031_6777230_3" visiblename="Bit3" desc="Byte12">FALSE</Element>
                                          <Element name="_x0031_6777230_4" visiblename="Bit4" desc="Byte12">FALSE</Element>
                                          <Element name="_x0031_6777230_5" visiblename="Bit5" desc="Byte12">FALSE</Element>
                                          <Element name="_x0031_6777230_6" visiblename="Bit6" desc="Byte12">FALSE</Element>
                                          <Element name="_x0031_6777230_7" visiblename="Bit7" desc="Byte12">FALSE</Element>
                                        </Value>
                                        <Name>Byte12</Name>
                                        <Description>Byte12</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777231" type="std:USINT" IndexInDevDesc="189">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777231" visiblename="Byte13" desc="Byte13">
                                          <Element name="_x0031_6777231_0" visiblename="Bit0" desc="Byte13">FALSE</Element>
                                          <Element name="_x0031_6777231_1" visiblename="Bit1" desc="Byte13">FALSE</Element>
                                          <Element name="_x0031_6777231_2" visiblename="Bit2" desc="Byte13">FALSE</Element>
                                          <Element name="_x0031_6777231_3" visiblename="Bit3" desc="Byte13">FALSE</Element>
                                          <Element name="_x0031_6777231_4" visiblename="Bit4" desc="Byte13">FALSE</Element>
                                          <Element name="_x0031_6777231_5" visiblename="Bit5" desc="Byte13">FALSE</Element>
                                          <Element name="_x0031_6777231_6" visiblename="Bit6" desc="Byte13">FALSE</Element>
                                          <Element name="_x0031_6777231_7" visiblename="Bit7" desc="Byte13">FALSE</Element>
                                        </Value>
                                        <Name>Byte13</Name>
                                        <Description>Byte13</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777232" type="std:USINT" IndexInDevDesc="190">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777232" visiblename="Byte14" desc="Byte14">
                                          <Element name="_x0031_6777232_0" visiblename="Bit0" desc="Byte14">FALSE</Element>
                                          <Element name="_x0031_6777232_1" visiblename="Bit1" desc="Byte14">FALSE</Element>
                                          <Element name="_x0031_6777232_2" visiblename="Bit2" desc="Byte14">FALSE</Element>
                                          <Element name="_x0031_6777232_3" visiblename="Bit3" desc="Byte14">FALSE</Element>
                                          <Element name="_x0031_6777232_4" visiblename="Bit4" desc="Byte14">FALSE</Element>
                                          <Element name="_x0031_6777232_5" visiblename="Bit5" desc="Byte14">FALSE</Element>
                                          <Element name="_x0031_6777232_6" visiblename="Bit6" desc="Byte14">FALSE</Element>
                                          <Element name="_x0031_6777232_7" visiblename="Bit7" desc="Byte14">FALSE</Element>
                                        </Value>
                                        <Name>Byte14</Name>
                                        <Description>Byte14</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777233" type="std:USINT" IndexInDevDesc="191">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777233" visiblename="Byte15" desc="Byte15">
                                          <Element name="_x0031_6777233_0" visiblename="Bit0" desc="Byte15">FALSE</Element>
                                          <Element name="_x0031_6777233_1" visiblename="Bit1" desc="Byte15">FALSE</Element>
                                          <Element name="_x0031_6777233_2" visiblename="Bit2" desc="Byte15">FALSE</Element>
                                          <Element name="_x0031_6777233_3" visiblename="Bit3" desc="Byte15">FALSE</Element>
                                          <Element name="_x0031_6777233_4" visiblename="Bit4" desc="Byte15">FALSE</Element>
                                          <Element name="_x0031_6777233_5" visiblename="Bit5" desc="Byte15">FALSE</Element>
                                          <Element name="_x0031_6777233_6" visiblename="Bit6" desc="Byte15">FALSE</Element>
                                          <Element name="_x0031_6777233_7" visiblename="Bit7" desc="Byte15">FALSE</Element>
                                        </Value>
                                        <Name>Byte15</Name>
                                        <Description>Byte15</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777234" type="std:USINT" IndexInDevDesc="192">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777234" visiblename="Byte16" desc="Byte16">
                                          <Element name="_x0031_6777234_0" visiblename="Bit0" desc="Byte16">FALSE</Element>
                                          <Element name="_x0031_6777234_1" visiblename="Bit1" desc="Byte16">FALSE</Element>
                                          <Element name="_x0031_6777234_2" visiblename="Bit2" desc="Byte16">FALSE</Element>
                                          <Element name="_x0031_6777234_3" visiblename="Bit3" desc="Byte16">FALSE</Element>
                                          <Element name="_x0031_6777234_4" visiblename="Bit4" desc="Byte16">FALSE</Element>
                                          <Element name="_x0031_6777234_5" visiblename="Bit5" desc="Byte16">FALSE</Element>
                                          <Element name="_x0031_6777234_6" visiblename="Bit6" desc="Byte16">FALSE</Element>
                                          <Element name="_x0031_6777234_7" visiblename="Bit7" desc="Byte16">FALSE</Element>
                                        </Value>
                                        <Name>Byte16</Name>
                                        <Description>Byte16</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777235" type="std:USINT" IndexInDevDesc="193">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777235" visiblename="Byte17" desc="Byte17">
                                          <Element name="_x0031_6777235_0" visiblename="Bit0" desc="Byte17">FALSE</Element>
                                          <Element name="_x0031_6777235_1" visiblename="Bit1" desc="Byte17">FALSE</Element>
                                          <Element name="_x0031_6777235_2" visiblename="Bit2" desc="Byte17">FALSE</Element>
                                          <Element name="_x0031_6777235_3" visiblename="Bit3" desc="Byte17">FALSE</Element>
                                          <Element name="_x0031_6777235_4" visiblename="Bit4" desc="Byte17">FALSE</Element>
                                          <Element name="_x0031_6777235_5" visiblename="Bit5" desc="Byte17">FALSE</Element>
                                          <Element name="_x0031_6777235_6" visiblename="Bit6" desc="Byte17">FALSE</Element>
                                          <Element name="_x0031_6777235_7" visiblename="Bit7" desc="Byte17">FALSE</Element>
                                        </Value>
                                        <Name>Byte17</Name>
                                        <Description>Byte17</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777236" type="std:USINT" IndexInDevDesc="194">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777236" visiblename="Byte18" desc="Byte18">
                                          <Element name="_x0031_6777236_0" visiblename="Bit0" desc="Byte18">FALSE</Element>
                                          <Element name="_x0031_6777236_1" visiblename="Bit1" desc="Byte18">FALSE</Element>
                                          <Element name="_x0031_6777236_2" visiblename="Bit2" desc="Byte18">FALSE</Element>
                                          <Element name="_x0031_6777236_3" visiblename="Bit3" desc="Byte18">FALSE</Element>
                                          <Element name="_x0031_6777236_4" visiblename="Bit4" desc="Byte18">FALSE</Element>
                                          <Element name="_x0031_6777236_5" visiblename="Bit5" desc="Byte18">FALSE</Element>
                                          <Element name="_x0031_6777236_6" visiblename="Bit6" desc="Byte18">FALSE</Element>
                                          <Element name="_x0031_6777236_7" visiblename="Bit7" desc="Byte18">FALSE</Element>
                                        </Value>
                                        <Name>Byte18</Name>
                                        <Description>Byte18</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777237" type="std:USINT" IndexInDevDesc="195">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777237" visiblename="Byte19" desc="Byte19">
                                          <Element name="_x0031_6777237_0" visiblename="Bit0" desc="Byte19">FALSE</Element>
                                          <Element name="_x0031_6777237_1" visiblename="Bit1" desc="Byte19">FALSE</Element>
                                          <Element name="_x0031_6777237_2" visiblename="Bit2" desc="Byte19">FALSE</Element>
                                          <Element name="_x0031_6777237_3" visiblename="Bit3" desc="Byte19">FALSE</Element>
                                          <Element name="_x0031_6777237_4" visiblename="Bit4" desc="Byte19">FALSE</Element>
                                          <Element name="_x0031_6777237_5" visiblename="Bit5" desc="Byte19">FALSE</Element>
                                          <Element name="_x0031_6777237_6" visiblename="Bit6" desc="Byte19">FALSE</Element>
                                          <Element name="_x0031_6777237_7" visiblename="Bit7" desc="Byte19">FALSE</Element>
                                        </Value>
                                        <Name>Byte19</Name>
                                        <Description>Byte19</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777238" type="std:USINT" IndexInDevDesc="196">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777238" visiblename="Byte20" desc="Byte20">
                                          <Element name="_x0031_6777238_0" visiblename="Bit0" desc="Byte20">FALSE</Element>
                                          <Element name="_x0031_6777238_1" visiblename="Bit1" desc="Byte20">FALSE</Element>
                                          <Element name="_x0031_6777238_2" visiblename="Bit2" desc="Byte20">FALSE</Element>
                                          <Element name="_x0031_6777238_3" visiblename="Bit3" desc="Byte20">FALSE</Element>
                                          <Element name="_x0031_6777238_4" visiblename="Bit4" desc="Byte20">FALSE</Element>
                                          <Element name="_x0031_6777238_5" visiblename="Bit5" desc="Byte20">FALSE</Element>
                                          <Element name="_x0031_6777238_6" visiblename="Bit6" desc="Byte20">FALSE</Element>
                                          <Element name="_x0031_6777238_7" visiblename="Bit7" desc="Byte20">FALSE</Element>
                                        </Value>
                                        <Name>Byte20</Name>
                                        <Description>Byte20</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777239" type="std:USINT" IndexInDevDesc="197">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777239" visiblename="Byte21" desc="Byte21">
                                          <Element name="_x0031_6777239_0" visiblename="Bit0" desc="Byte21">FALSE</Element>
                                          <Element name="_x0031_6777239_1" visiblename="Bit1" desc="Byte21">FALSE</Element>
                                          <Element name="_x0031_6777239_2" visiblename="Bit2" desc="Byte21">FALSE</Element>
                                          <Element name="_x0031_6777239_3" visiblename="Bit3" desc="Byte21">FALSE</Element>
                                          <Element name="_x0031_6777239_4" visiblename="Bit4" desc="Byte21">FALSE</Element>
                                          <Element name="_x0031_6777239_5" visiblename="Bit5" desc="Byte21">FALSE</Element>
                                          <Element name="_x0031_6777239_6" visiblename="Bit6" desc="Byte21">FALSE</Element>
                                          <Element name="_x0031_6777239_7" visiblename="Bit7" desc="Byte21">FALSE</Element>
                                        </Value>
                                        <Name>Byte21</Name>
                                        <Description>Byte21</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777240" type="std:USINT" IndexInDevDesc="198">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777240" visiblename="Byte22" desc="Byte22">
                                          <Element name="_x0031_6777240_0" visiblename="Bit0" desc="Byte22">FALSE</Element>
                                          <Element name="_x0031_6777240_1" visiblename="Bit1" desc="Byte22">FALSE</Element>
                                          <Element name="_x0031_6777240_2" visiblename="Bit2" desc="Byte22">FALSE</Element>
                                          <Element name="_x0031_6777240_3" visiblename="Bit3" desc="Byte22">FALSE</Element>
                                          <Element name="_x0031_6777240_4" visiblename="Bit4" desc="Byte22">FALSE</Element>
                                          <Element name="_x0031_6777240_5" visiblename="Bit5" desc="Byte22">FALSE</Element>
                                          <Element name="_x0031_6777240_6" visiblename="Bit6" desc="Byte22">FALSE</Element>
                                          <Element name="_x0031_6777240_7" visiblename="Bit7" desc="Byte22">FALSE</Element>
                                        </Value>
                                        <Name>Byte22</Name>
                                        <Description>Byte22</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777241" type="std:USINT" IndexInDevDesc="199">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777241" visiblename="Byte23" desc="Byte23">
                                          <Element name="_x0031_6777241_0" visiblename="Bit0" desc="Byte23">FALSE</Element>
                                          <Element name="_x0031_6777241_1" visiblename="Bit1" desc="Byte23">FALSE</Element>
                                          <Element name="_x0031_6777241_2" visiblename="Bit2" desc="Byte23">FALSE</Element>
                                          <Element name="_x0031_6777241_3" visiblename="Bit3" desc="Byte23">FALSE</Element>
                                          <Element name="_x0031_6777241_4" visiblename="Bit4" desc="Byte23">FALSE</Element>
                                          <Element name="_x0031_6777241_5" visiblename="Bit5" desc="Byte23">FALSE</Element>
                                          <Element name="_x0031_6777241_6" visiblename="Bit6" desc="Byte23">FALSE</Element>
                                          <Element name="_x0031_6777241_7" visiblename="Bit7" desc="Byte23">FALSE</Element>
                                        </Value>
                                        <Name>Byte23</Name>
                                        <Description>Byte23</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777242" type="std:USINT" IndexInDevDesc="200">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777242" visiblename="Byte24" desc="Byte24">
                                          <Element name="_x0031_6777242_0" visiblename="Bit0" desc="Byte24">FALSE</Element>
                                          <Element name="_x0031_6777242_1" visiblename="Bit1" desc="Byte24">FALSE</Element>
                                          <Element name="_x0031_6777242_2" visiblename="Bit2" desc="Byte24">FALSE</Element>
                                          <Element name="_x0031_6777242_3" visiblename="Bit3" desc="Byte24">FALSE</Element>
                                          <Element name="_x0031_6777242_4" visiblename="Bit4" desc="Byte24">FALSE</Element>
                                          <Element name="_x0031_6777242_5" visiblename="Bit5" desc="Byte24">FALSE</Element>
                                          <Element name="_x0031_6777242_6" visiblename="Bit6" desc="Byte24">FALSE</Element>
                                          <Element name="_x0031_6777242_7" visiblename="Bit7" desc="Byte24">FALSE</Element>
                                        </Value>
                                        <Name>Byte24</Name>
                                        <Description>Byte24</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777243" type="std:USINT" IndexInDevDesc="201">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777243" visiblename="Byte25" desc="Byte25">
                                          <Element name="_x0031_6777243_0" visiblename="Bit0" desc="Byte25">FALSE</Element>
                                          <Element name="_x0031_6777243_1" visiblename="Bit1" desc="Byte25">FALSE</Element>
                                          <Element name="_x0031_6777243_2" visiblename="Bit2" desc="Byte25">FALSE</Element>
                                          <Element name="_x0031_6777243_3" visiblename="Bit3" desc="Byte25">FALSE</Element>
                                          <Element name="_x0031_6777243_4" visiblename="Bit4" desc="Byte25">FALSE</Element>
                                          <Element name="_x0031_6777243_5" visiblename="Bit5" desc="Byte25">FALSE</Element>
                                          <Element name="_x0031_6777243_6" visiblename="Bit6" desc="Byte25">FALSE</Element>
                                          <Element name="_x0031_6777243_7" visiblename="Bit7" desc="Byte25">FALSE</Element>
                                        </Value>
                                        <Name>Byte25</Name>
                                        <Description>Byte25</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777244" type="std:USINT" IndexInDevDesc="202">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777244" visiblename="Byte26" desc="Byte26">
                                          <Element name="_x0031_6777244_0" visiblename="Bit0" desc="Byte26">FALSE</Element>
                                          <Element name="_x0031_6777244_1" visiblename="Bit1" desc="Byte26">FALSE</Element>
                                          <Element name="_x0031_6777244_2" visiblename="Bit2" desc="Byte26">FALSE</Element>
                                          <Element name="_x0031_6777244_3" visiblename="Bit3" desc="Byte26">FALSE</Element>
                                          <Element name="_x0031_6777244_4" visiblename="Bit4" desc="Byte26">FALSE</Element>
                                          <Element name="_x0031_6777244_5" visiblename="Bit5" desc="Byte26">FALSE</Element>
                                          <Element name="_x0031_6777244_6" visiblename="Bit6" desc="Byte26">FALSE</Element>
                                          <Element name="_x0031_6777244_7" visiblename="Bit7" desc="Byte26">FALSE</Element>
                                        </Value>
                                        <Name>Byte26</Name>
                                        <Description>Byte26</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777245" type="std:USINT" IndexInDevDesc="203">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777245" visiblename="Byte27" desc="Byte27">
                                          <Element name="_x0031_6777245_0" visiblename="Bit0" desc="Byte27">FALSE</Element>
                                          <Element name="_x0031_6777245_1" visiblename="Bit1" desc="Byte27">FALSE</Element>
                                          <Element name="_x0031_6777245_2" visiblename="Bit2" desc="Byte27">FALSE</Element>
                                          <Element name="_x0031_6777245_3" visiblename="Bit3" desc="Byte27">FALSE</Element>
                                          <Element name="_x0031_6777245_4" visiblename="Bit4" desc="Byte27">FALSE</Element>
                                          <Element name="_x0031_6777245_5" visiblename="Bit5" desc="Byte27">FALSE</Element>
                                          <Element name="_x0031_6777245_6" visiblename="Bit6" desc="Byte27">FALSE</Element>
                                          <Element name="_x0031_6777245_7" visiblename="Bit7" desc="Byte27">FALSE</Element>
                                        </Value>
                                        <Name>Byte27</Name>
                                        <Description>Byte27</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777246" type="std:USINT" IndexInDevDesc="204">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777246" visiblename="Byte28" desc="Byte28">
                                          <Element name="_x0031_6777246_0" visiblename="Bit0" desc="Byte28">FALSE</Element>
                                          <Element name="_x0031_6777246_1" visiblename="Bit1" desc="Byte28">FALSE</Element>
                                          <Element name="_x0031_6777246_2" visiblename="Bit2" desc="Byte28">FALSE</Element>
                                          <Element name="_x0031_6777246_3" visiblename="Bit3" desc="Byte28">FALSE</Element>
                                          <Element name="_x0031_6777246_4" visiblename="Bit4" desc="Byte28">FALSE</Element>
                                          <Element name="_x0031_6777246_5" visiblename="Bit5" desc="Byte28">FALSE</Element>
                                          <Element name="_x0031_6777246_6" visiblename="Bit6" desc="Byte28">FALSE</Element>
                                          <Element name="_x0031_6777246_7" visiblename="Bit7" desc="Byte28">FALSE</Element>
                                        </Value>
                                        <Name>Byte28</Name>
                                        <Description>Byte28</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777247" type="std:USINT" IndexInDevDesc="205">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777247" visiblename="Byte29" desc="Byte29">
                                          <Element name="_x0031_6777247_0" visiblename="Bit0" desc="Byte29">FALSE</Element>
                                          <Element name="_x0031_6777247_1" visiblename="Bit1" desc="Byte29">FALSE</Element>
                                          <Element name="_x0031_6777247_2" visiblename="Bit2" desc="Byte29">FALSE</Element>
                                          <Element name="_x0031_6777247_3" visiblename="Bit3" desc="Byte29">FALSE</Element>
                                          <Element name="_x0031_6777247_4" visiblename="Bit4" desc="Byte29">FALSE</Element>
                                          <Element name="_x0031_6777247_5" visiblename="Bit5" desc="Byte29">FALSE</Element>
                                          <Element name="_x0031_6777247_6" visiblename="Bit6" desc="Byte29">FALSE</Element>
                                          <Element name="_x0031_6777247_7" visiblename="Bit7" desc="Byte29">FALSE</Element>
                                        </Value>
                                        <Name>Byte29</Name>
                                        <Description>Byte29</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777248" type="std:USINT" IndexInDevDesc="206">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777248" visiblename="Byte30" desc="Byte30">
                                          <Element name="_x0031_6777248_0" visiblename="Bit0" desc="Byte30">FALSE</Element>
                                          <Element name="_x0031_6777248_1" visiblename="Bit1" desc="Byte30">FALSE</Element>
                                          <Element name="_x0031_6777248_2" visiblename="Bit2" desc="Byte30">FALSE</Element>
                                          <Element name="_x0031_6777248_3" visiblename="Bit3" desc="Byte30">FALSE</Element>
                                          <Element name="_x0031_6777248_4" visiblename="Bit4" desc="Byte30">FALSE</Element>
                                          <Element name="_x0031_6777248_5" visiblename="Bit5" desc="Byte30">FALSE</Element>
                                          <Element name="_x0031_6777248_6" visiblename="Bit6" desc="Byte30">FALSE</Element>
                                          <Element name="_x0031_6777248_7" visiblename="Bit7" desc="Byte30">FALSE</Element>
                                        </Value>
                                        <Name>Byte30</Name>
                                        <Description>Byte30</Description>
                                      </Parameter>
                                      <Parameter ParameterId="16777249" type="std:USINT" IndexInDevDesc="207">
                                        <Attributes channel="output" />
                                        <Value name="_x0031_6777249" visiblename="Byte31" desc="Byte31">
                                          <Element name="_x0031_6777249_0" visiblename="Bit0" desc="Byte31">FALSE</Element>
                                          <Element name="_x0031_6777249_1" visiblename="Bit1" desc="Byte31">FALSE</Element>
                                          <Element name="_x0031_6777249_2" visiblename="Bit2" desc="Byte31">FALSE</Element>
                                          <Element name="_x0031_6777249_3" visiblename="Bit3" desc="Byte31">FALSE</Element>
                                          <Element name="_x0031_6777249_4" visiblename="Bit4" desc="Byte31">FALSE</Element>
                                          <Element name="_x0031_6777249_5" visiblename="Bit5" desc="Byte31">FALSE</Element>
                                          <Element name="_x0031_6777249_6" visiblename="Bit6" desc="Byte31">FALSE</Element>
                                          <Element name="_x0031_6777249_7" visiblename="Bit7" desc="Byte31">FALSE</Element>
                                        </Value>
                                        <Name>Byte31</Name>
                                        <Description>Byte31</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>16#1A00 Inputs</Name>
                                      <Description />
                                      <Parameter ParameterId="33554434" type="std:USINT" IndexInDevDesc="208">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554434" visiblename="Byte0" desc="Byte0">
                                          <Element name="_x0033_3554434_0" visiblename="Bit0" desc="Byte0">FALSE</Element>
                                          <Element name="_x0033_3554434_1" visiblename="Bit1" desc="Byte0">FALSE</Element>
                                          <Element name="_x0033_3554434_2" visiblename="Bit2" desc="Byte0">FALSE</Element>
                                          <Element name="_x0033_3554434_3" visiblename="Bit3" desc="Byte0">FALSE</Element>
                                          <Element name="_x0033_3554434_4" visiblename="Bit4" desc="Byte0">FALSE</Element>
                                          <Element name="_x0033_3554434_5" visiblename="Bit5" desc="Byte0">FALSE</Element>
                                          <Element name="_x0033_3554434_6" visiblename="Bit6" desc="Byte0">FALSE</Element>
                                          <Element name="_x0033_3554434_7" visiblename="Bit7" desc="Byte0">FALSE</Element>
                                        </Value>
                                        <Name>Byte0</Name>
                                        <Description>Byte0</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554435" type="std:USINT" IndexInDevDesc="209">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554435" visiblename="Byte1" desc="Byte1">
                                          <Element name="_x0033_3554435_0" visiblename="Bit0" desc="Byte1">FALSE</Element>
                                          <Element name="_x0033_3554435_1" visiblename="Bit1" desc="Byte1">FALSE</Element>
                                          <Element name="_x0033_3554435_2" visiblename="Bit2" desc="Byte1">FALSE</Element>
                                          <Element name="_x0033_3554435_3" visiblename="Bit3" desc="Byte1">FALSE</Element>
                                          <Element name="_x0033_3554435_4" visiblename="Bit4" desc="Byte1">FALSE</Element>
                                          <Element name="_x0033_3554435_5" visiblename="Bit5" desc="Byte1">FALSE</Element>
                                          <Element name="_x0033_3554435_6" visiblename="Bit6" desc="Byte1">FALSE</Element>
                                          <Element name="_x0033_3554435_7" visiblename="Bit7" desc="Byte1">FALSE</Element>
                                        </Value>
                                        <Name>Byte1</Name>
                                        <Description>Byte1</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554436" type="std:USINT" IndexInDevDesc="210">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554436" visiblename="Byte2" desc="Byte2">
                                          <Element name="_x0033_3554436_0" visiblename="Bit0" desc="Byte2">FALSE</Element>
                                          <Element name="_x0033_3554436_1" visiblename="Bit1" desc="Byte2">FALSE</Element>
                                          <Element name="_x0033_3554436_2" visiblename="Bit2" desc="Byte2">FALSE</Element>
                                          <Element name="_x0033_3554436_3" visiblename="Bit3" desc="Byte2">FALSE</Element>
                                          <Element name="_x0033_3554436_4" visiblename="Bit4" desc="Byte2">FALSE</Element>
                                          <Element name="_x0033_3554436_5" visiblename="Bit5" desc="Byte2">FALSE</Element>
                                          <Element name="_x0033_3554436_6" visiblename="Bit6" desc="Byte2">FALSE</Element>
                                          <Element name="_x0033_3554436_7" visiblename="Bit7" desc="Byte2">FALSE</Element>
                                        </Value>
                                        <Name>Byte2</Name>
                                        <Description>Byte2</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554437" type="std:USINT" IndexInDevDesc="211">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554437" visiblename="Byte3" desc="Byte3">
                                          <Element name="_x0033_3554437_0" visiblename="Bit0" desc="Byte3">FALSE</Element>
                                          <Element name="_x0033_3554437_1" visiblename="Bit1" desc="Byte3">FALSE</Element>
                                          <Element name="_x0033_3554437_2" visiblename="Bit2" desc="Byte3">FALSE</Element>
                                          <Element name="_x0033_3554437_3" visiblename="Bit3" desc="Byte3">FALSE</Element>
                                          <Element name="_x0033_3554437_4" visiblename="Bit4" desc="Byte3">FALSE</Element>
                                          <Element name="_x0033_3554437_5" visiblename="Bit5" desc="Byte3">FALSE</Element>
                                          <Element name="_x0033_3554437_6" visiblename="Bit6" desc="Byte3">FALSE</Element>
                                          <Element name="_x0033_3554437_7" visiblename="Bit7" desc="Byte3">FALSE</Element>
                                        </Value>
                                        <Name>Byte3</Name>
                                        <Description>Byte3</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554438" type="std:USINT" IndexInDevDesc="212">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554438" visiblename="Byte4" desc="Byte4">
                                          <Element name="_x0033_3554438_0" visiblename="Bit0" desc="Byte4">FALSE</Element>
                                          <Element name="_x0033_3554438_1" visiblename="Bit1" desc="Byte4">FALSE</Element>
                                          <Element name="_x0033_3554438_2" visiblename="Bit2" desc="Byte4">FALSE</Element>
                                          <Element name="_x0033_3554438_3" visiblename="Bit3" desc="Byte4">FALSE</Element>
                                          <Element name="_x0033_3554438_4" visiblename="Bit4" desc="Byte4">FALSE</Element>
                                          <Element name="_x0033_3554438_5" visiblename="Bit5" desc="Byte4">FALSE</Element>
                                          <Element name="_x0033_3554438_6" visiblename="Bit6" desc="Byte4">FALSE</Element>
                                          <Element name="_x0033_3554438_7" visiblename="Bit7" desc="Byte4">FALSE</Element>
                                        </Value>
                                        <Name>Byte4</Name>
                                        <Description>Byte4</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554439" type="std:USINT" IndexInDevDesc="213">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554439" visiblename="Byte5" desc="Byte5">
                                          <Element name="_x0033_3554439_0" visiblename="Bit0" desc="Byte5">FALSE</Element>
                                          <Element name="_x0033_3554439_1" visiblename="Bit1" desc="Byte5">FALSE</Element>
                                          <Element name="_x0033_3554439_2" visiblename="Bit2" desc="Byte5">FALSE</Element>
                                          <Element name="_x0033_3554439_3" visiblename="Bit3" desc="Byte5">FALSE</Element>
                                          <Element name="_x0033_3554439_4" visiblename="Bit4" desc="Byte5">FALSE</Element>
                                          <Element name="_x0033_3554439_5" visiblename="Bit5" desc="Byte5">FALSE</Element>
                                          <Element name="_x0033_3554439_6" visiblename="Bit6" desc="Byte5">FALSE</Element>
                                          <Element name="_x0033_3554439_7" visiblename="Bit7" desc="Byte5">FALSE</Element>
                                        </Value>
                                        <Name>Byte5</Name>
                                        <Description>Byte5</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554440" type="std:USINT" IndexInDevDesc="214">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554440" visiblename="Byte6" desc="Byte6">
                                          <Element name="_x0033_3554440_0" visiblename="Bit0" desc="Byte6">FALSE</Element>
                                          <Element name="_x0033_3554440_1" visiblename="Bit1" desc="Byte6">FALSE</Element>
                                          <Element name="_x0033_3554440_2" visiblename="Bit2" desc="Byte6">FALSE</Element>
                                          <Element name="_x0033_3554440_3" visiblename="Bit3" desc="Byte6">FALSE</Element>
                                          <Element name="_x0033_3554440_4" visiblename="Bit4" desc="Byte6">FALSE</Element>
                                          <Element name="_x0033_3554440_5" visiblename="Bit5" desc="Byte6">FALSE</Element>
                                          <Element name="_x0033_3554440_6" visiblename="Bit6" desc="Byte6">FALSE</Element>
                                          <Element name="_x0033_3554440_7" visiblename="Bit7" desc="Byte6">FALSE</Element>
                                        </Value>
                                        <Name>Byte6</Name>
                                        <Description>Byte6</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554441" type="std:USINT" IndexInDevDesc="215">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554441" visiblename="Byte7" desc="Byte7">
                                          <Element name="_x0033_3554441_0" visiblename="Bit0" desc="Byte7">FALSE</Element>
                                          <Element name="_x0033_3554441_1" visiblename="Bit1" desc="Byte7">FALSE</Element>
                                          <Element name="_x0033_3554441_2" visiblename="Bit2" desc="Byte7">FALSE</Element>
                                          <Element name="_x0033_3554441_3" visiblename="Bit3" desc="Byte7">FALSE</Element>
                                          <Element name="_x0033_3554441_4" visiblename="Bit4" desc="Byte7">FALSE</Element>
                                          <Element name="_x0033_3554441_5" visiblename="Bit5" desc="Byte7">FALSE</Element>
                                          <Element name="_x0033_3554441_6" visiblename="Bit6" desc="Byte7">FALSE</Element>
                                          <Element name="_x0033_3554441_7" visiblename="Bit7" desc="Byte7">FALSE</Element>
                                        </Value>
                                        <Name>Byte7</Name>
                                        <Description>Byte7</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554442" type="std:USINT" IndexInDevDesc="216">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554442" visiblename="Byte8" desc="Byte8">
                                          <Element name="_x0033_3554442_0" visiblename="Bit0" desc="Byte8">FALSE</Element>
                                          <Element name="_x0033_3554442_1" visiblename="Bit1" desc="Byte8">FALSE</Element>
                                          <Element name="_x0033_3554442_2" visiblename="Bit2" desc="Byte8">FALSE</Element>
                                          <Element name="_x0033_3554442_3" visiblename="Bit3" desc="Byte8">FALSE</Element>
                                          <Element name="_x0033_3554442_4" visiblename="Bit4" desc="Byte8">FALSE</Element>
                                          <Element name="_x0033_3554442_5" visiblename="Bit5" desc="Byte8">FALSE</Element>
                                          <Element name="_x0033_3554442_6" visiblename="Bit6" desc="Byte8">FALSE</Element>
                                          <Element name="_x0033_3554442_7" visiblename="Bit7" desc="Byte8">FALSE</Element>
                                        </Value>
                                        <Name>Byte8</Name>
                                        <Description>Byte8</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554443" type="std:USINT" IndexInDevDesc="217">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554443" visiblename="Byte9" desc="Byte9">
                                          <Element name="_x0033_3554443_0" visiblename="Bit0" desc="Byte9">FALSE</Element>
                                          <Element name="_x0033_3554443_1" visiblename="Bit1" desc="Byte9">FALSE</Element>
                                          <Element name="_x0033_3554443_2" visiblename="Bit2" desc="Byte9">FALSE</Element>
                                          <Element name="_x0033_3554443_3" visiblename="Bit3" desc="Byte9">FALSE</Element>
                                          <Element name="_x0033_3554443_4" visiblename="Bit4" desc="Byte9">FALSE</Element>
                                          <Element name="_x0033_3554443_5" visiblename="Bit5" desc="Byte9">FALSE</Element>
                                          <Element name="_x0033_3554443_6" visiblename="Bit6" desc="Byte9">FALSE</Element>
                                          <Element name="_x0033_3554443_7" visiblename="Bit7" desc="Byte9">FALSE</Element>
                                        </Value>
                                        <Name>Byte9</Name>
                                        <Description>Byte9</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554444" type="std:USINT" IndexInDevDesc="218">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554444" visiblename="Byte10" desc="Byte10">
                                          <Element name="_x0033_3554444_0" visiblename="Bit0" desc="Byte10">FALSE</Element>
                                          <Element name="_x0033_3554444_1" visiblename="Bit1" desc="Byte10">FALSE</Element>
                                          <Element name="_x0033_3554444_2" visiblename="Bit2" desc="Byte10">FALSE</Element>
                                          <Element name="_x0033_3554444_3" visiblename="Bit3" desc="Byte10">FALSE</Element>
                                          <Element name="_x0033_3554444_4" visiblename="Bit4" desc="Byte10">FALSE</Element>
                                          <Element name="_x0033_3554444_5" visiblename="Bit5" desc="Byte10">FALSE</Element>
                                          <Element name="_x0033_3554444_6" visiblename="Bit6" desc="Byte10">FALSE</Element>
                                          <Element name="_x0033_3554444_7" visiblename="Bit7" desc="Byte10">FALSE</Element>
                                        </Value>
                                        <Name>Byte10</Name>
                                        <Description>Byte10</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554445" type="std:USINT" IndexInDevDesc="219">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554445" visiblename="Byte11" desc="Byte11">
                                          <Element name="_x0033_3554445_0" visiblename="Bit0" desc="Byte11">FALSE</Element>
                                          <Element name="_x0033_3554445_1" visiblename="Bit1" desc="Byte11">FALSE</Element>
                                          <Element name="_x0033_3554445_2" visiblename="Bit2" desc="Byte11">FALSE</Element>
                                          <Element name="_x0033_3554445_3" visiblename="Bit3" desc="Byte11">FALSE</Element>
                                          <Element name="_x0033_3554445_4" visiblename="Bit4" desc="Byte11">FALSE</Element>
                                          <Element name="_x0033_3554445_5" visiblename="Bit5" desc="Byte11">FALSE</Element>
                                          <Element name="_x0033_3554445_6" visiblename="Bit6" desc="Byte11">FALSE</Element>
                                          <Element name="_x0033_3554445_7" visiblename="Bit7" desc="Byte11">FALSE</Element>
                                        </Value>
                                        <Name>Byte11</Name>
                                        <Description>Byte11</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554446" type="std:USINT" IndexInDevDesc="220">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554446" visiblename="Byte12" desc="Byte12">
                                          <Element name="_x0033_3554446_0" visiblename="Bit0" desc="Byte12">FALSE</Element>
                                          <Element name="_x0033_3554446_1" visiblename="Bit1" desc="Byte12">FALSE</Element>
                                          <Element name="_x0033_3554446_2" visiblename="Bit2" desc="Byte12">FALSE</Element>
                                          <Element name="_x0033_3554446_3" visiblename="Bit3" desc="Byte12">FALSE</Element>
                                          <Element name="_x0033_3554446_4" visiblename="Bit4" desc="Byte12">FALSE</Element>
                                          <Element name="_x0033_3554446_5" visiblename="Bit5" desc="Byte12">FALSE</Element>
                                          <Element name="_x0033_3554446_6" visiblename="Bit6" desc="Byte12">FALSE</Element>
                                          <Element name="_x0033_3554446_7" visiblename="Bit7" desc="Byte12">FALSE</Element>
                                        </Value>
                                        <Name>Byte12</Name>
                                        <Description>Byte12</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554447" type="std:USINT" IndexInDevDesc="221">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554447" visiblename="Byte13" desc="Byte13">
                                          <Element name="_x0033_3554447_0" visiblename="Bit0" desc="Byte13">FALSE</Element>
                                          <Element name="_x0033_3554447_1" visiblename="Bit1" desc="Byte13">FALSE</Element>
                                          <Element name="_x0033_3554447_2" visiblename="Bit2" desc="Byte13">FALSE</Element>
                                          <Element name="_x0033_3554447_3" visiblename="Bit3" desc="Byte13">FALSE</Element>
                                          <Element name="_x0033_3554447_4" visiblename="Bit4" desc="Byte13">FALSE</Element>
                                          <Element name="_x0033_3554447_5" visiblename="Bit5" desc="Byte13">FALSE</Element>
                                          <Element name="_x0033_3554447_6" visiblename="Bit6" desc="Byte13">FALSE</Element>
                                          <Element name="_x0033_3554447_7" visiblename="Bit7" desc="Byte13">FALSE</Element>
                                        </Value>
                                        <Name>Byte13</Name>
                                        <Description>Byte13</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554448" type="std:USINT" IndexInDevDesc="222">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554448" visiblename="Byte14" desc="Byte14">
                                          <Element name="_x0033_3554448_0" visiblename="Bit0" desc="Byte14">FALSE</Element>
                                          <Element name="_x0033_3554448_1" visiblename="Bit1" desc="Byte14">FALSE</Element>
                                          <Element name="_x0033_3554448_2" visiblename="Bit2" desc="Byte14">FALSE</Element>
                                          <Element name="_x0033_3554448_3" visiblename="Bit3" desc="Byte14">FALSE</Element>
                                          <Element name="_x0033_3554448_4" visiblename="Bit4" desc="Byte14">FALSE</Element>
                                          <Element name="_x0033_3554448_5" visiblename="Bit5" desc="Byte14">FALSE</Element>
                                          <Element name="_x0033_3554448_6" visiblename="Bit6" desc="Byte14">FALSE</Element>
                                          <Element name="_x0033_3554448_7" visiblename="Bit7" desc="Byte14">FALSE</Element>
                                        </Value>
                                        <Name>Byte14</Name>
                                        <Description>Byte14</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554449" type="std:USINT" IndexInDevDesc="223">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554449" visiblename="Byte15" desc="Byte15">
                                          <Element name="_x0033_3554449_0" visiblename="Bit0" desc="Byte15">FALSE</Element>
                                          <Element name="_x0033_3554449_1" visiblename="Bit1" desc="Byte15">FALSE</Element>
                                          <Element name="_x0033_3554449_2" visiblename="Bit2" desc="Byte15">FALSE</Element>
                                          <Element name="_x0033_3554449_3" visiblename="Bit3" desc="Byte15">FALSE</Element>
                                          <Element name="_x0033_3554449_4" visiblename="Bit4" desc="Byte15">FALSE</Element>
                                          <Element name="_x0033_3554449_5" visiblename="Bit5" desc="Byte15">FALSE</Element>
                                          <Element name="_x0033_3554449_6" visiblename="Bit6" desc="Byte15">FALSE</Element>
                                          <Element name="_x0033_3554449_7" visiblename="Bit7" desc="Byte15">FALSE</Element>
                                        </Value>
                                        <Name>Byte15</Name>
                                        <Description>Byte15</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554450" type="std:USINT" IndexInDevDesc="224">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554450" visiblename="Byte16" desc="Byte16">
                                          <Element name="_x0033_3554450_0" visiblename="Bit0" desc="Byte16">FALSE</Element>
                                          <Element name="_x0033_3554450_1" visiblename="Bit1" desc="Byte16">FALSE</Element>
                                          <Element name="_x0033_3554450_2" visiblename="Bit2" desc="Byte16">FALSE</Element>
                                          <Element name="_x0033_3554450_3" visiblename="Bit3" desc="Byte16">FALSE</Element>
                                          <Element name="_x0033_3554450_4" visiblename="Bit4" desc="Byte16">FALSE</Element>
                                          <Element name="_x0033_3554450_5" visiblename="Bit5" desc="Byte16">FALSE</Element>
                                          <Element name="_x0033_3554450_6" visiblename="Bit6" desc="Byte16">FALSE</Element>
                                          <Element name="_x0033_3554450_7" visiblename="Bit7" desc="Byte16">FALSE</Element>
                                        </Value>
                                        <Name>Byte16</Name>
                                        <Description>Byte16</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554451" type="std:USINT" IndexInDevDesc="225">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554451" visiblename="Byte17" desc="Byte17">
                                          <Element name="_x0033_3554451_0" visiblename="Bit0" desc="Byte17">FALSE</Element>
                                          <Element name="_x0033_3554451_1" visiblename="Bit1" desc="Byte17">FALSE</Element>
                                          <Element name="_x0033_3554451_2" visiblename="Bit2" desc="Byte17">FALSE</Element>
                                          <Element name="_x0033_3554451_3" visiblename="Bit3" desc="Byte17">FALSE</Element>
                                          <Element name="_x0033_3554451_4" visiblename="Bit4" desc="Byte17">FALSE</Element>
                                          <Element name="_x0033_3554451_5" visiblename="Bit5" desc="Byte17">FALSE</Element>
                                          <Element name="_x0033_3554451_6" visiblename="Bit6" desc="Byte17">FALSE</Element>
                                          <Element name="_x0033_3554451_7" visiblename="Bit7" desc="Byte17">FALSE</Element>
                                        </Value>
                                        <Name>Byte17</Name>
                                        <Description>Byte17</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554452" type="std:USINT" IndexInDevDesc="226">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554452" visiblename="Byte18" desc="Byte18">
                                          <Element name="_x0033_3554452_0" visiblename="Bit0" desc="Byte18">FALSE</Element>
                                          <Element name="_x0033_3554452_1" visiblename="Bit1" desc="Byte18">FALSE</Element>
                                          <Element name="_x0033_3554452_2" visiblename="Bit2" desc="Byte18">FALSE</Element>
                                          <Element name="_x0033_3554452_3" visiblename="Bit3" desc="Byte18">FALSE</Element>
                                          <Element name="_x0033_3554452_4" visiblename="Bit4" desc="Byte18">FALSE</Element>
                                          <Element name="_x0033_3554452_5" visiblename="Bit5" desc="Byte18">FALSE</Element>
                                          <Element name="_x0033_3554452_6" visiblename="Bit6" desc="Byte18">FALSE</Element>
                                          <Element name="_x0033_3554452_7" visiblename="Bit7" desc="Byte18">FALSE</Element>
                                        </Value>
                                        <Name>Byte18</Name>
                                        <Description>Byte18</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554453" type="std:USINT" IndexInDevDesc="227">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554453" visiblename="Byte19" desc="Byte19">
                                          <Element name="_x0033_3554453_0" visiblename="Bit0" desc="Byte19">FALSE</Element>
                                          <Element name="_x0033_3554453_1" visiblename="Bit1" desc="Byte19">FALSE</Element>
                                          <Element name="_x0033_3554453_2" visiblename="Bit2" desc="Byte19">FALSE</Element>
                                          <Element name="_x0033_3554453_3" visiblename="Bit3" desc="Byte19">FALSE</Element>
                                          <Element name="_x0033_3554453_4" visiblename="Bit4" desc="Byte19">FALSE</Element>
                                          <Element name="_x0033_3554453_5" visiblename="Bit5" desc="Byte19">FALSE</Element>
                                          <Element name="_x0033_3554453_6" visiblename="Bit6" desc="Byte19">FALSE</Element>
                                          <Element name="_x0033_3554453_7" visiblename="Bit7" desc="Byte19">FALSE</Element>
                                        </Value>
                                        <Name>Byte19</Name>
                                        <Description>Byte19</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554454" type="std:USINT" IndexInDevDesc="228">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554454" visiblename="Byte20" desc="Byte20">
                                          <Element name="_x0033_3554454_0" visiblename="Bit0" desc="Byte20">FALSE</Element>
                                          <Element name="_x0033_3554454_1" visiblename="Bit1" desc="Byte20">FALSE</Element>
                                          <Element name="_x0033_3554454_2" visiblename="Bit2" desc="Byte20">FALSE</Element>
                                          <Element name="_x0033_3554454_3" visiblename="Bit3" desc="Byte20">FALSE</Element>
                                          <Element name="_x0033_3554454_4" visiblename="Bit4" desc="Byte20">FALSE</Element>
                                          <Element name="_x0033_3554454_5" visiblename="Bit5" desc="Byte20">FALSE</Element>
                                          <Element name="_x0033_3554454_6" visiblename="Bit6" desc="Byte20">FALSE</Element>
                                          <Element name="_x0033_3554454_7" visiblename="Bit7" desc="Byte20">FALSE</Element>
                                        </Value>
                                        <Name>Byte20</Name>
                                        <Description>Byte20</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554455" type="std:USINT" IndexInDevDesc="229">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554455" visiblename="Byte21" desc="Byte21">
                                          <Element name="_x0033_3554455_0" visiblename="Bit0" desc="Byte21">FALSE</Element>
                                          <Element name="_x0033_3554455_1" visiblename="Bit1" desc="Byte21">FALSE</Element>
                                          <Element name="_x0033_3554455_2" visiblename="Bit2" desc="Byte21">FALSE</Element>
                                          <Element name="_x0033_3554455_3" visiblename="Bit3" desc="Byte21">FALSE</Element>
                                          <Element name="_x0033_3554455_4" visiblename="Bit4" desc="Byte21">FALSE</Element>
                                          <Element name="_x0033_3554455_5" visiblename="Bit5" desc="Byte21">FALSE</Element>
                                          <Element name="_x0033_3554455_6" visiblename="Bit6" desc="Byte21">FALSE</Element>
                                          <Element name="_x0033_3554455_7" visiblename="Bit7" desc="Byte21">FALSE</Element>
                                        </Value>
                                        <Name>Byte21</Name>
                                        <Description>Byte21</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554456" type="std:USINT" IndexInDevDesc="230">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554456" visiblename="Byte22" desc="Byte22">
                                          <Element name="_x0033_3554456_0" visiblename="Bit0" desc="Byte22">FALSE</Element>
                                          <Element name="_x0033_3554456_1" visiblename="Bit1" desc="Byte22">FALSE</Element>
                                          <Element name="_x0033_3554456_2" visiblename="Bit2" desc="Byte22">FALSE</Element>
                                          <Element name="_x0033_3554456_3" visiblename="Bit3" desc="Byte22">FALSE</Element>
                                          <Element name="_x0033_3554456_4" visiblename="Bit4" desc="Byte22">FALSE</Element>
                                          <Element name="_x0033_3554456_5" visiblename="Bit5" desc="Byte22">FALSE</Element>
                                          <Element name="_x0033_3554456_6" visiblename="Bit6" desc="Byte22">FALSE</Element>
                                          <Element name="_x0033_3554456_7" visiblename="Bit7" desc="Byte22">FALSE</Element>
                                        </Value>
                                        <Name>Byte22</Name>
                                        <Description>Byte22</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554457" type="std:USINT" IndexInDevDesc="231">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554457" visiblename="Byte23" desc="Byte23">
                                          <Element name="_x0033_3554457_0" visiblename="Bit0" desc="Byte23">FALSE</Element>
                                          <Element name="_x0033_3554457_1" visiblename="Bit1" desc="Byte23">FALSE</Element>
                                          <Element name="_x0033_3554457_2" visiblename="Bit2" desc="Byte23">FALSE</Element>
                                          <Element name="_x0033_3554457_3" visiblename="Bit3" desc="Byte23">FALSE</Element>
                                          <Element name="_x0033_3554457_4" visiblename="Bit4" desc="Byte23">FALSE</Element>
                                          <Element name="_x0033_3554457_5" visiblename="Bit5" desc="Byte23">FALSE</Element>
                                          <Element name="_x0033_3554457_6" visiblename="Bit6" desc="Byte23">FALSE</Element>
                                          <Element name="_x0033_3554457_7" visiblename="Bit7" desc="Byte23">FALSE</Element>
                                        </Value>
                                        <Name>Byte23</Name>
                                        <Description>Byte23</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554458" type="std:USINT" IndexInDevDesc="232">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554458" visiblename="Byte24" desc="Byte24">
                                          <Element name="_x0033_3554458_0" visiblename="Bit0" desc="Byte24">FALSE</Element>
                                          <Element name="_x0033_3554458_1" visiblename="Bit1" desc="Byte24">FALSE</Element>
                                          <Element name="_x0033_3554458_2" visiblename="Bit2" desc="Byte24">FALSE</Element>
                                          <Element name="_x0033_3554458_3" visiblename="Bit3" desc="Byte24">FALSE</Element>
                                          <Element name="_x0033_3554458_4" visiblename="Bit4" desc="Byte24">FALSE</Element>
                                          <Element name="_x0033_3554458_5" visiblename="Bit5" desc="Byte24">FALSE</Element>
                                          <Element name="_x0033_3554458_6" visiblename="Bit6" desc="Byte24">FALSE</Element>
                                          <Element name="_x0033_3554458_7" visiblename="Bit7" desc="Byte24">FALSE</Element>
                                        </Value>
                                        <Name>Byte24</Name>
                                        <Description>Byte24</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554459" type="std:USINT" IndexInDevDesc="233">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554459" visiblename="Byte25" desc="Byte25">
                                          <Element name="_x0033_3554459_0" visiblename="Bit0" desc="Byte25">FALSE</Element>
                                          <Element name="_x0033_3554459_1" visiblename="Bit1" desc="Byte25">FALSE</Element>
                                          <Element name="_x0033_3554459_2" visiblename="Bit2" desc="Byte25">FALSE</Element>
                                          <Element name="_x0033_3554459_3" visiblename="Bit3" desc="Byte25">FALSE</Element>
                                          <Element name="_x0033_3554459_4" visiblename="Bit4" desc="Byte25">FALSE</Element>
                                          <Element name="_x0033_3554459_5" visiblename="Bit5" desc="Byte25">FALSE</Element>
                                          <Element name="_x0033_3554459_6" visiblename="Bit6" desc="Byte25">FALSE</Element>
                                          <Element name="_x0033_3554459_7" visiblename="Bit7" desc="Byte25">FALSE</Element>
                                        </Value>
                                        <Name>Byte25</Name>
                                        <Description>Byte25</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554460" type="std:USINT" IndexInDevDesc="234">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554460" visiblename="Byte26" desc="Byte26">
                                          <Element name="_x0033_3554460_0" visiblename="Bit0" desc="Byte26">FALSE</Element>
                                          <Element name="_x0033_3554460_1" visiblename="Bit1" desc="Byte26">FALSE</Element>
                                          <Element name="_x0033_3554460_2" visiblename="Bit2" desc="Byte26">FALSE</Element>
                                          <Element name="_x0033_3554460_3" visiblename="Bit3" desc="Byte26">FALSE</Element>
                                          <Element name="_x0033_3554460_4" visiblename="Bit4" desc="Byte26">FALSE</Element>
                                          <Element name="_x0033_3554460_5" visiblename="Bit5" desc="Byte26">FALSE</Element>
                                          <Element name="_x0033_3554460_6" visiblename="Bit6" desc="Byte26">FALSE</Element>
                                          <Element name="_x0033_3554460_7" visiblename="Bit7" desc="Byte26">FALSE</Element>
                                        </Value>
                                        <Name>Byte26</Name>
                                        <Description>Byte26</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554461" type="std:USINT" IndexInDevDesc="235">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554461" visiblename="Byte27" desc="Byte27">
                                          <Element name="_x0033_3554461_0" visiblename="Bit0" desc="Byte27">FALSE</Element>
                                          <Element name="_x0033_3554461_1" visiblename="Bit1" desc="Byte27">FALSE</Element>
                                          <Element name="_x0033_3554461_2" visiblename="Bit2" desc="Byte27">FALSE</Element>
                                          <Element name="_x0033_3554461_3" visiblename="Bit3" desc="Byte27">FALSE</Element>
                                          <Element name="_x0033_3554461_4" visiblename="Bit4" desc="Byte27">FALSE</Element>
                                          <Element name="_x0033_3554461_5" visiblename="Bit5" desc="Byte27">FALSE</Element>
                                          <Element name="_x0033_3554461_6" visiblename="Bit6" desc="Byte27">FALSE</Element>
                                          <Element name="_x0033_3554461_7" visiblename="Bit7" desc="Byte27">FALSE</Element>
                                        </Value>
                                        <Name>Byte27</Name>
                                        <Description>Byte27</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554462" type="std:USINT" IndexInDevDesc="236">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554462" visiblename="Byte28" desc="Byte28">
                                          <Element name="_x0033_3554462_0" visiblename="Bit0" desc="Byte28">FALSE</Element>
                                          <Element name="_x0033_3554462_1" visiblename="Bit1" desc="Byte28">FALSE</Element>
                                          <Element name="_x0033_3554462_2" visiblename="Bit2" desc="Byte28">FALSE</Element>
                                          <Element name="_x0033_3554462_3" visiblename="Bit3" desc="Byte28">FALSE</Element>
                                          <Element name="_x0033_3554462_4" visiblename="Bit4" desc="Byte28">FALSE</Element>
                                          <Element name="_x0033_3554462_5" visiblename="Bit5" desc="Byte28">FALSE</Element>
                                          <Element name="_x0033_3554462_6" visiblename="Bit6" desc="Byte28">FALSE</Element>
                                          <Element name="_x0033_3554462_7" visiblename="Bit7" desc="Byte28">FALSE</Element>
                                        </Value>
                                        <Name>Byte28</Name>
                                        <Description>Byte28</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554463" type="std:USINT" IndexInDevDesc="237">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554463" visiblename="Byte29" desc="Byte29">
                                          <Element name="_x0033_3554463_0" visiblename="Bit0" desc="Byte29">FALSE</Element>
                                          <Element name="_x0033_3554463_1" visiblename="Bit1" desc="Byte29">FALSE</Element>
                                          <Element name="_x0033_3554463_2" visiblename="Bit2" desc="Byte29">FALSE</Element>
                                          <Element name="_x0033_3554463_3" visiblename="Bit3" desc="Byte29">FALSE</Element>
                                          <Element name="_x0033_3554463_4" visiblename="Bit4" desc="Byte29">FALSE</Element>
                                          <Element name="_x0033_3554463_5" visiblename="Bit5" desc="Byte29">FALSE</Element>
                                          <Element name="_x0033_3554463_6" visiblename="Bit6" desc="Byte29">FALSE</Element>
                                          <Element name="_x0033_3554463_7" visiblename="Bit7" desc="Byte29">FALSE</Element>
                                        </Value>
                                        <Name>Byte29</Name>
                                        <Description>Byte29</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554464" type="std:USINT" IndexInDevDesc="238">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554464" visiblename="Byte30" desc="Byte30">
                                          <Element name="_x0033_3554464_0" visiblename="Bit0" desc="Byte30">FALSE</Element>
                                          <Element name="_x0033_3554464_1" visiblename="Bit1" desc="Byte30">FALSE</Element>
                                          <Element name="_x0033_3554464_2" visiblename="Bit2" desc="Byte30">FALSE</Element>
                                          <Element name="_x0033_3554464_3" visiblename="Bit3" desc="Byte30">FALSE</Element>
                                          <Element name="_x0033_3554464_4" visiblename="Bit4" desc="Byte30">FALSE</Element>
                                          <Element name="_x0033_3554464_5" visiblename="Bit5" desc="Byte30">FALSE</Element>
                                          <Element name="_x0033_3554464_6" visiblename="Bit6" desc="Byte30">FALSE</Element>
                                          <Element name="_x0033_3554464_7" visiblename="Bit7" desc="Byte30">FALSE</Element>
                                        </Value>
                                        <Name>Byte30</Name>
                                        <Description>Byte30</Description>
                                      </Parameter>
                                      <Parameter ParameterId="33554465" type="std:USINT" IndexInDevDesc="239">
                                        <Attributes channel="input" />
                                        <Value name="_x0033_3554465" visiblename="Byte31" desc="Byte31">
                                          <Element name="_x0033_3554465_0" visiblename="Bit0" desc="Byte31">FALSE</Element>
                                          <Element name="_x0033_3554465_1" visiblename="Bit1" desc="Byte31">FALSE</Element>
                                          <Element name="_x0033_3554465_2" visiblename="Bit2" desc="Byte31">FALSE</Element>
                                          <Element name="_x0033_3554465_3" visiblename="Bit3" desc="Byte31">FALSE</Element>
                                          <Element name="_x0033_3554465_4" visiblename="Bit4" desc="Byte31">FALSE</Element>
                                          <Element name="_x0033_3554465_5" visiblename="Bit5" desc="Byte31">FALSE</Element>
                                          <Element name="_x0033_3554465_6" visiblename="Bit6" desc="Byte31">FALSE</Element>
                                          <Element name="_x0033_3554465_7" visiblename="Bit7" desc="Byte31">FALSE</Element>
                                        </Value>
                                        <Name>Byte31</Name>
                                        <Description>Byte31</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <Parameter ParameterId="805306368" type="std:BOOL">
                                      <Attributes download="false" offlineaccess="none" onlineaccess="none" />
                                      <Value name="_x0038_05306368" visiblename="EnableExpertSettings" offlineaccess="none" onlineaccess="none">True</Value>
                                      <Name>EnableExpertSettings</Name>
                                    </Parameter>
                                  </HostParameterSet>
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>005b56d9-737f-4834-ad56-d9e484e05e19</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                    </configurations>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>09718da8-6762-4b3c-a790-897818c154e9</ObjectId>
                  </data>
                </addData>
              </configuration>
              <configuration name="SoftMotion General Axis Pool">
                <addData>
                  <data name="ExplicitConnector" handleUnknown="discard">
                    <ExplicitConnector connectorID="2" />
                  </data>
                  <data name="configurations" handleUnknown="discard">
                    <configurations>
                      <configuration name="SM_Drive_PosControl_J1">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1025</Type>
                                  <Id>0000 0001</Id>
                                  <Version>4.16.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1025" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">0</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes />
                                        <Value name="_x0031_040" visiblename="bVirtual" desc="Whether the drive is simulated">FALSE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>Whether the drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">200</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">172</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-120</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1207" type="std:INT" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_207" visiblename="eCheckPositionLag" desc="Position lag mode">0</Value>
                                        <Name>eCheckPositionLag</Name>
                                        <Description>Position lag mode</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1208" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_208" visiblename="fMaxPositionLag" desc="Maximum position lag (magnitude) [u]">1.0</Value>
                                        <Name>fMaxPositionLag</Name>
                                        <Description>Maximum position lag (magnitude) [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Scalings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="17">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">4000</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="18">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">9</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="5000" type="std:DINT" IndexInDevDesc="19">
                                        <Attributes />
                                        <Value name="_x0035_000" visiblename="ScalingIncs">160000</Value>
                                        <Name>ScalingIncs</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5001" type="std:DINT" IndexInDevDesc="20">
                                        <Attributes />
                                        <Value name="_x0035_001" visiblename="ScalingMotorTurns1">1</Value>
                                        <Name>ScalingMotorTurns1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5002" type="std:DINT" IndexInDevDesc="21">
                                        <Attributes />
                                        <Value name="_x0035_002" visiblename="ScalingMotorTurns2">1</Value>
                                        <Name>ScalingMotorTurns2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5003" type="std:DINT" IndexInDevDesc="22">
                                        <Attributes />
                                        <Value name="_x0035_003" visiblename="ScalingGearOutput1">1</Value>
                                        <Name>ScalingGearOutput1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5004" type="std:DINT" IndexInDevDesc="23">
                                        <Attributes />
                                        <Value name="_x0035_004" visiblename="ScalingGearOutput2">1</Value>
                                        <Name>ScalingGearOutput2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5005" type="std:DINT" IndexInDevDesc="24">
                                        <Attributes />
                                        <Value name="_x0035_005" visiblename="ScalingUnits">360</Value>
                                        <Name>ScalingUnits</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5006" type="std:BOOL" IndexInDevDesc="25">
                                        <Attributes />
                                        <Value name="_x0035_006" visiblename="InvertDirection">FALSE</Value>
                                        <Name>InvertDirection</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Input</Name>
                                      <Description />
                                      <Parameter ParameterId="10000" type="std:USINT" IndexInDevDesc="26">
                                        <Attributes />
                                        <Value name="_x0031_0000" visiblename="EncoderBitWidth">32</Value>
                                        <Name>EncoderBitWidth</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Output</Name>
                                      <Description />
                                      <Parameter ParameterId="10100" type="std:DINT" IndexInDevDesc="27">
                                        <Attributes />
                                        <Value name="_x0031_0100" visiblename="MaximumOutputVelocityInt">16#03E8</Value>
                                        <Name>MaximumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10101" type="std:LREAL" IndexInDevDesc="28">
                                        <Attributes />
                                        <Value name="_x0031_0101" visiblename="MaximumOutputVelocityTU">1000.0</Value>
                                        <Name>MaximumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10102" type="std:DINT" IndexInDevDesc="29">
                                        <Attributes />
                                        <Value name="_x0031_0102" visiblename="MinimumOutputVelocityInt">-16#03E8</Value>
                                        <Name>MinimumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10103" type="std:LREAL" IndexInDevDesc="30">
                                        <Attributes />
                                        <Value name="_x0031_0103" visiblename="MinimumOutputVelocityTU">-1000.0</Value>
                                        <Name>MinimumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10104" type="std:DINT" IndexInDevDesc="31">
                                        <Attributes />
                                        <Value name="_x0031_0104" visiblename="ZeroVelocityInt">0</Value>
                                        <Name>ZeroVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10105" type="std:BOOL" IndexInDevDesc="32">
                                        <Attributes />
                                        <Value name="_x0031_0105" visiblename="DirectionInverted">FALSE</Value>
                                        <Name>DirectionInverted</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Controller</Name>
                                      <Description />
                                      <Parameter ParameterId="10200" type="std:LREAL" IndexInDevDesc="33">
                                        <Attributes />
                                        <Value name="_x0031_0200" visiblename="Kp" desc="Proportional gain for lag error">0.05</Value>
                                        <Name>Kp</Name>
                                        <Description>Proportional gain for lag error</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10202" type="std:LREAL" IndexInDevDesc="34">
                                        <Attributes />
                                        <Value name="_x0031_0202" visiblename="MaxFollowingError" desc="Maximum position lag">0.0</Value>
                                        <Name>MaxFollowingError</Name>
                                        <Description>Maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10203" type="std:BOOL" IndexInDevDesc="35">
                                        <Attributes />
                                        <Value name="_x0031_0203" visiblename="EnableFollowingErrorCheck" desc="Switch on checking of maximum position lag">FALSE</Value>
                                        <Name>EnableFollowingErrorCheck</Name>
                                        <Description>Switch on checking of maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10204" type="std:LREAL" IndexInDevDesc="36">
                                        <Attributes />
                                        <Value name="_x0031_0204" visiblename="PartVelocityPilotControl" desc="Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)">1</Value>
                                        <Name>PartVelocityPilotControl</Name>
                                        <Description>Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10205" type="std:LREAL" IndexInDevDesc="37">
                                        <Attributes />
                                        <Value name="_x0031_0205" visiblename="DeadTime" desc="Time lag in cycles between fSetPosition and fActPosition">1200</Value>
                                        <Name>DeadTime</Name>
                                        <Description>Time lag in cycles between fSetPosition and fActPosition</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <Parameter ParameterId="5007" type="std:BOOL">
                                      <Attributes onlineaccess="read" />
                                      <Value name="_x0035_007" visiblename="IsLinearMotor" onlineaccess="read">FALSE</Value>
                                      <Name>IsLinearMotor</Name>
                                    </Parameter>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>ea5425f8-6865-4929-8ce6-5dc4d6d3dc5e</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="SM_Drive_PosControl_J2">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1025</Type>
                                  <Id>0000 0001</Id>
                                  <Version>4.16.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1025" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">1</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes />
                                        <Value name="_x0031_040" visiblename="bVirtual" desc="Whether the drive is simulated">FALSE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>Whether the drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">250</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">200</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">200</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">800</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">43</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-90</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1207" type="std:INT" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_207" visiblename="eCheckPositionLag" desc="Position lag mode">0</Value>
                                        <Name>eCheckPositionLag</Name>
                                        <Description>Position lag mode</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1208" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_208" visiblename="fMaxPositionLag" desc="Maximum position lag (magnitude) [u]">1.0</Value>
                                        <Name>fMaxPositionLag</Name>
                                        <Description>Maximum position lag (magnitude) [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Scalings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="17">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">5000</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="18">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">9</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="5000" type="std:DINT" IndexInDevDesc="19">
                                        <Attributes />
                                        <Value name="_x0035_000" visiblename="ScalingIncs">200000</Value>
                                        <Name>ScalingIncs</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5001" type="std:DINT" IndexInDevDesc="20">
                                        <Attributes />
                                        <Value name="_x0035_001" visiblename="ScalingMotorTurns1">1</Value>
                                        <Name>ScalingMotorTurns1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5002" type="std:DINT" IndexInDevDesc="21">
                                        <Attributes />
                                        <Value name="_x0035_002" visiblename="ScalingMotorTurns2">1</Value>
                                        <Name>ScalingMotorTurns2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5003" type="std:DINT" IndexInDevDesc="22">
                                        <Attributes />
                                        <Value name="_x0035_003" visiblename="ScalingGearOutput1">1</Value>
                                        <Name>ScalingGearOutput1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5004" type="std:DINT" IndexInDevDesc="23">
                                        <Attributes />
                                        <Value name="_x0035_004" visiblename="ScalingGearOutput2">1</Value>
                                        <Name>ScalingGearOutput2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5005" type="std:DINT" IndexInDevDesc="24">
                                        <Attributes />
                                        <Value name="_x0035_005" visiblename="ScalingUnits">360</Value>
                                        <Name>ScalingUnits</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5006" type="std:BOOL" IndexInDevDesc="25">
                                        <Attributes />
                                        <Value name="_x0035_006" visiblename="InvertDirection">FALSE</Value>
                                        <Name>InvertDirection</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Input</Name>
                                      <Description />
                                      <Parameter ParameterId="10000" type="std:USINT" IndexInDevDesc="26">
                                        <Attributes />
                                        <Value name="_x0031_0000" visiblename="EncoderBitWidth">32</Value>
                                        <Name>EncoderBitWidth</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Output</Name>
                                      <Description />
                                      <Parameter ParameterId="10100" type="std:DINT" IndexInDevDesc="27">
                                        <Attributes />
                                        <Value name="_x0031_0100" visiblename="MaximumOutputVelocityInt">16#03E8</Value>
                                        <Name>MaximumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10101" type="std:LREAL" IndexInDevDesc="28">
                                        <Attributes />
                                        <Value name="_x0031_0101" visiblename="MaximumOutputVelocityTU">1000.0</Value>
                                        <Name>MaximumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10102" type="std:DINT" IndexInDevDesc="29">
                                        <Attributes />
                                        <Value name="_x0031_0102" visiblename="MinimumOutputVelocityInt">-16#03E8</Value>
                                        <Name>MinimumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10103" type="std:LREAL" IndexInDevDesc="30">
                                        <Attributes />
                                        <Value name="_x0031_0103" visiblename="MinimumOutputVelocityTU">-1000.0</Value>
                                        <Name>MinimumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10104" type="std:DINT" IndexInDevDesc="31">
                                        <Attributes />
                                        <Value name="_x0031_0104" visiblename="ZeroVelocityInt">0</Value>
                                        <Name>ZeroVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10105" type="std:BOOL" IndexInDevDesc="32">
                                        <Attributes />
                                        <Value name="_x0031_0105" visiblename="DirectionInverted">FALSE</Value>
                                        <Name>DirectionInverted</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Controller</Name>
                                      <Description />
                                      <Parameter ParameterId="10200" type="std:LREAL" IndexInDevDesc="33">
                                        <Attributes />
                                        <Value name="_x0031_0200" visiblename="Kp" desc="Proportional gain for lag error">0.02</Value>
                                        <Name>Kp</Name>
                                        <Description>Proportional gain for lag error</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10202" type="std:LREAL" IndexInDevDesc="34">
                                        <Attributes />
                                        <Value name="_x0031_0202" visiblename="MaxFollowingError" desc="Maximum position lag">0.0</Value>
                                        <Name>MaxFollowingError</Name>
                                        <Description>Maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10203" type="std:BOOL" IndexInDevDesc="35">
                                        <Attributes />
                                        <Value name="_x0031_0203" visiblename="EnableFollowingErrorCheck" desc="Switch on checking of maximum position lag">FALSE</Value>
                                        <Name>EnableFollowingErrorCheck</Name>
                                        <Description>Switch on checking of maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10204" type="std:LREAL" IndexInDevDesc="36">
                                        <Attributes />
                                        <Value name="_x0031_0204" visiblename="PartVelocityPilotControl" desc="Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)">1</Value>
                                        <Name>PartVelocityPilotControl</Name>
                                        <Description>Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10205" type="std:LREAL" IndexInDevDesc="37">
                                        <Attributes />
                                        <Value name="_x0031_0205" visiblename="DeadTime" desc="Time lag in cycles between fSetPosition and fActPosition">1000</Value>
                                        <Name>DeadTime</Name>
                                        <Description>Time lag in cycles between fSetPosition and fActPosition</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>f766e900-5390-4dbe-b5d5-456b0a97d174</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="SM_Drive_PosControl_J3">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1025</Type>
                                  <Id>0000 0001</Id>
                                  <Version>4.16.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1025" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">2</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes />
                                        <Value name="_x0031_040" visiblename="bVirtual" desc="Whether the drive is simulated">FALSE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>Whether the drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">700</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">350</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">350</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">4000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">90</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-58</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1207" type="std:INT" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_207" visiblename="eCheckPositionLag" desc="Position lag mode">0</Value>
                                        <Name>eCheckPositionLag</Name>
                                        <Description>Position lag mode</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1208" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_208" visiblename="fMaxPositionLag" desc="Maximum position lag (magnitude) [u]">1.0</Value>
                                        <Name>fMaxPositionLag</Name>
                                        <Description>Maximum position lag (magnitude) [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Scalings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="17">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">5000</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="18">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">9</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="5000" type="std:DINT" IndexInDevDesc="19">
                                        <Attributes />
                                        <Value name="_x0035_000" visiblename="ScalingIncs">200000</Value>
                                        <Name>ScalingIncs</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5001" type="std:DINT" IndexInDevDesc="20">
                                        <Attributes />
                                        <Value name="_x0035_001" visiblename="ScalingMotorTurns1">1</Value>
                                        <Name>ScalingMotorTurns1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5002" type="std:DINT" IndexInDevDesc="21">
                                        <Attributes />
                                        <Value name="_x0035_002" visiblename="ScalingMotorTurns2">1</Value>
                                        <Name>ScalingMotorTurns2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5003" type="std:DINT" IndexInDevDesc="22">
                                        <Attributes />
                                        <Value name="_x0035_003" visiblename="ScalingGearOutput1">1</Value>
                                        <Name>ScalingGearOutput1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5004" type="std:DINT" IndexInDevDesc="23">
                                        <Attributes />
                                        <Value name="_x0035_004" visiblename="ScalingGearOutput2">1</Value>
                                        <Name>ScalingGearOutput2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5005" type="std:DINT" IndexInDevDesc="24">
                                        <Attributes />
                                        <Value name="_x0035_005" visiblename="ScalingUnits">360</Value>
                                        <Name>ScalingUnits</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5006" type="std:BOOL" IndexInDevDesc="25">
                                        <Attributes />
                                        <Value name="_x0035_006" visiblename="InvertDirection">FALSE</Value>
                                        <Name>InvertDirection</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Input</Name>
                                      <Description />
                                      <Parameter ParameterId="10000" type="std:USINT" IndexInDevDesc="26">
                                        <Attributes />
                                        <Value name="_x0031_0000" visiblename="EncoderBitWidth">32</Value>
                                        <Name>EncoderBitWidth</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Output</Name>
                                      <Description />
                                      <Parameter ParameterId="10100" type="std:DINT" IndexInDevDesc="27">
                                        <Attributes />
                                        <Value name="_x0031_0100" visiblename="MaximumOutputVelocityInt">16#03E8</Value>
                                        <Name>MaximumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10101" type="std:LREAL" IndexInDevDesc="28">
                                        <Attributes />
                                        <Value name="_x0031_0101" visiblename="MaximumOutputVelocityTU">1000.0</Value>
                                        <Name>MaximumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10102" type="std:DINT" IndexInDevDesc="29">
                                        <Attributes />
                                        <Value name="_x0031_0102" visiblename="MinimumOutputVelocityInt">-16#03E8</Value>
                                        <Name>MinimumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10103" type="std:LREAL" IndexInDevDesc="30">
                                        <Attributes />
                                        <Value name="_x0031_0103" visiblename="MinimumOutputVelocityTU">-1000.0</Value>
                                        <Name>MinimumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10104" type="std:DINT" IndexInDevDesc="31">
                                        <Attributes />
                                        <Value name="_x0031_0104" visiblename="ZeroVelocityInt">0</Value>
                                        <Name>ZeroVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10105" type="std:BOOL" IndexInDevDesc="32">
                                        <Attributes />
                                        <Value name="_x0031_0105" visiblename="DirectionInverted">FALSE</Value>
                                        <Name>DirectionInverted</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Controller</Name>
                                      <Description />
                                      <Parameter ParameterId="10200" type="std:LREAL" IndexInDevDesc="33">
                                        <Attributes />
                                        <Value name="_x0031_0200" visiblename="Kp" desc="Proportional gain for lag error">0.05</Value>
                                        <Name>Kp</Name>
                                        <Description>Proportional gain for lag error</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10202" type="std:LREAL" IndexInDevDesc="34">
                                        <Attributes />
                                        <Value name="_x0031_0202" visiblename="MaxFollowingError" desc="Maximum position lag">0.0</Value>
                                        <Name>MaxFollowingError</Name>
                                        <Description>Maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10203" type="std:BOOL" IndexInDevDesc="35">
                                        <Attributes />
                                        <Value name="_x0031_0203" visiblename="EnableFollowingErrorCheck" desc="Switch on checking of maximum position lag">FALSE</Value>
                                        <Name>EnableFollowingErrorCheck</Name>
                                        <Description>Switch on checking of maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10204" type="std:LREAL" IndexInDevDesc="36">
                                        <Attributes />
                                        <Value name="_x0031_0204" visiblename="PartVelocityPilotControl" desc="Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)">1</Value>
                                        <Name>PartVelocityPilotControl</Name>
                                        <Description>Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10205" type="std:LREAL" IndexInDevDesc="37">
                                        <Attributes />
                                        <Value name="_x0031_0205" visiblename="DeadTime" desc="Time lag in cycles between fSetPosition and fActPosition">1200</Value>
                                        <Name>DeadTime</Name>
                                        <Description>Time lag in cycles between fSetPosition and fActPosition</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>fac32d5d-3aea-4666-a5e5-5873ea0cd436</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="SM_Drive_PosControl_J4">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1025</Type>
                                  <Id>0000 0001</Id>
                                  <Version>4.16.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1025" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">6</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes />
                                        <Value name="_x0031_040" visiblename="bVirtual" desc="Whether the drive is simulated">FALSE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>Whether the drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">600</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">600</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">800</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">110</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-160</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1207" type="std:INT" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_207" visiblename="eCheckPositionLag" desc="Position lag mode">0</Value>
                                        <Name>eCheckPositionLag</Name>
                                        <Description>Position lag mode</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1208" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_208" visiblename="fMaxPositionLag" desc="Maximum position lag (magnitude) [u]">1.0</Value>
                                        <Name>fMaxPositionLag</Name>
                                        <Description>Maximum position lag (magnitude) [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Scalings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="17">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">4480</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="18">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">9</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="5000" type="std:DINT" IndexInDevDesc="19">
                                        <Attributes />
                                        <Value name="_x0035_000" visiblename="ScalingIncs">4000</Value>
                                        <Name>ScalingIncs</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5001" type="std:DINT" IndexInDevDesc="20">
                                        <Attributes />
                                        <Value name="_x0035_001" visiblename="ScalingMotorTurns1">1</Value>
                                        <Name>ScalingMotorTurns1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5002" type="std:DINT" IndexInDevDesc="21">
                                        <Attributes />
                                        <Value name="_x0035_002" visiblename="ScalingMotorTurns2">224</Value>
                                        <Name>ScalingMotorTurns2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5003" type="std:DINT" IndexInDevDesc="22">
                                        <Attributes />
                                        <Value name="_x0035_003" visiblename="ScalingGearOutput1">5</Value>
                                        <Name>ScalingGearOutput1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5004" type="std:DINT" IndexInDevDesc="23">
                                        <Attributes />
                                        <Value name="_x0035_004" visiblename="ScalingGearOutput2">1</Value>
                                        <Name>ScalingGearOutput2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5005" type="std:DINT" IndexInDevDesc="24">
                                        <Attributes />
                                        <Value name="_x0035_005" visiblename="ScalingUnits">360</Value>
                                        <Name>ScalingUnits</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5006" type="std:BOOL" IndexInDevDesc="25">
                                        <Attributes />
                                        <Value name="_x0035_006" visiblename="InvertDirection">FALSE</Value>
                                        <Name>InvertDirection</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Input</Name>
                                      <Description />
                                      <Parameter ParameterId="10000" type="std:USINT" IndexInDevDesc="26">
                                        <Attributes />
                                        <Value name="_x0031_0000" visiblename="EncoderBitWidth">32</Value>
                                        <Name>EncoderBitWidth</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Output</Name>
                                      <Description />
                                      <Parameter ParameterId="10100" type="std:DINT" IndexInDevDesc="27">
                                        <Attributes />
                                        <Value name="_x0031_0100" visiblename="MaximumOutputVelocityInt">16#03E8</Value>
                                        <Name>MaximumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10101" type="std:LREAL" IndexInDevDesc="28">
                                        <Attributes />
                                        <Value name="_x0031_0101" visiblename="MaximumOutputVelocityTU">1000.0</Value>
                                        <Name>MaximumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10102" type="std:DINT" IndexInDevDesc="29">
                                        <Attributes />
                                        <Value name="_x0031_0102" visiblename="MinimumOutputVelocityInt">-16#03E8</Value>
                                        <Name>MinimumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10103" type="std:LREAL" IndexInDevDesc="30">
                                        <Attributes />
                                        <Value name="_x0031_0103" visiblename="MinimumOutputVelocityTU">-1000.0</Value>
                                        <Name>MinimumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10104" type="std:DINT" IndexInDevDesc="31">
                                        <Attributes />
                                        <Value name="_x0031_0104" visiblename="ZeroVelocityInt">0</Value>
                                        <Name>ZeroVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10105" type="std:BOOL" IndexInDevDesc="32">
                                        <Attributes />
                                        <Value name="_x0031_0105" visiblename="DirectionInverted">TRUE</Value>
                                        <Name>DirectionInverted</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Controller</Name>
                                      <Description />
                                      <Parameter ParameterId="10200" type="std:LREAL" IndexInDevDesc="33">
                                        <Attributes />
                                        <Value name="_x0031_0200" visiblename="Kp" desc="Proportional gain for lag error">0.008</Value>
                                        <Name>Kp</Name>
                                        <Description>Proportional gain for lag error</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10202" type="std:LREAL" IndexInDevDesc="34">
                                        <Attributes />
                                        <Value name="_x0031_0202" visiblename="MaxFollowingError" desc="Maximum position lag">0.0</Value>
                                        <Name>MaxFollowingError</Name>
                                        <Description>Maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10203" type="std:BOOL" IndexInDevDesc="35">
                                        <Attributes />
                                        <Value name="_x0031_0203" visiblename="EnableFollowingErrorCheck" desc="Switch on checking of maximum position lag">FALSE</Value>
                                        <Name>EnableFollowingErrorCheck</Name>
                                        <Description>Switch on checking of maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10204" type="std:LREAL" IndexInDevDesc="36">
                                        <Attributes />
                                        <Value name="_x0031_0204" visiblename="PartVelocityPilotControl" desc="Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)">1</Value>
                                        <Name>PartVelocityPilotControl</Name>
                                        <Description>Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10205" type="std:LREAL" IndexInDevDesc="37">
                                        <Attributes />
                                        <Value name="_x0031_0205" visiblename="DeadTime" desc="Time lag in cycles between fSetPosition and fActPosition">1500</Value>
                                        <Name>DeadTime</Name>
                                        <Description>Time lag in cycles between fSetPosition and fActPosition</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>da228668-0441-4fbf-bc36-c60a4adec10a</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="SM_Drive_PosControl_J5">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1025</Type>
                                  <Id>0000 0001</Id>
                                  <Version>4.16.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1025" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">4</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes />
                                        <Value name="_x0031_040" visiblename="bVirtual" desc="Whether the drive is simulated">FALSE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>Whether the drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">5000</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">5000</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">15000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">110</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-105</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1207" type="std:INT" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_207" visiblename="eCheckPositionLag" desc="Position lag mode">0</Value>
                                        <Name>eCheckPositionLag</Name>
                                        <Description>Position lag mode</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1208" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_208" visiblename="fMaxPositionLag" desc="Maximum position lag (magnitude) [u]">1.0</Value>
                                        <Name>fMaxPositionLag</Name>
                                        <Description>Maximum position lag (magnitude) [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Scalings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="17">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">3827</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="18">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">-36</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="5000" type="std:DINT" IndexInDevDesc="19">
                                        <Attributes />
                                        <Value name="_x0035_000" visiblename="ScalingIncs">38270</Value>
                                        <Name>ScalingIncs</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5001" type="std:DINT" IndexInDevDesc="20">
                                        <Attributes />
                                        <Value name="_x0035_001" visiblename="ScalingMotorTurns1">1</Value>
                                        <Name>ScalingMotorTurns1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5002" type="std:DINT" IndexInDevDesc="21">
                                        <Attributes />
                                        <Value name="_x0035_002" visiblename="ScalingMotorTurns2">1</Value>
                                        <Name>ScalingMotorTurns2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5003" type="std:DINT" IndexInDevDesc="22">
                                        <Attributes />
                                        <Value name="_x0035_003" visiblename="ScalingGearOutput1">1</Value>
                                        <Name>ScalingGearOutput1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5004" type="std:DINT" IndexInDevDesc="23">
                                        <Attributes />
                                        <Value name="_x0035_004" visiblename="ScalingGearOutput2">1</Value>
                                        <Name>ScalingGearOutput2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5005" type="std:DINT" IndexInDevDesc="24">
                                        <Attributes />
                                        <Value name="_x0035_005" visiblename="ScalingUnits">360</Value>
                                        <Name>ScalingUnits</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5006" type="std:BOOL" IndexInDevDesc="25">
                                        <Attributes />
                                        <Value name="_x0035_006" visiblename="InvertDirection">TRUE</Value>
                                        <Name>InvertDirection</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Input</Name>
                                      <Description />
                                      <Parameter ParameterId="10000" type="std:USINT" IndexInDevDesc="26">
                                        <Attributes />
                                        <Value name="_x0031_0000" visiblename="EncoderBitWidth">32</Value>
                                        <Name>EncoderBitWidth</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Output</Name>
                                      <Description />
                                      <Parameter ParameterId="10100" type="std:DINT" IndexInDevDesc="27">
                                        <Attributes />
                                        <Value name="_x0031_0100" visiblename="MaximumOutputVelocityInt">16#03E8</Value>
                                        <Name>MaximumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10101" type="std:LREAL" IndexInDevDesc="28">
                                        <Attributes />
                                        <Value name="_x0031_0101" visiblename="MaximumOutputVelocityTU">1000.0</Value>
                                        <Name>MaximumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10102" type="std:DINT" IndexInDevDesc="29">
                                        <Attributes />
                                        <Value name="_x0031_0102" visiblename="MinimumOutputVelocityInt">-16#03E8</Value>
                                        <Name>MinimumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10103" type="std:LREAL" IndexInDevDesc="30">
                                        <Attributes />
                                        <Value name="_x0031_0103" visiblename="MinimumOutputVelocityTU">-1000.0</Value>
                                        <Name>MinimumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10104" type="std:DINT" IndexInDevDesc="31">
                                        <Attributes />
                                        <Value name="_x0031_0104" visiblename="ZeroVelocityInt">0</Value>
                                        <Name>ZeroVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10105" type="std:BOOL" IndexInDevDesc="32">
                                        <Attributes />
                                        <Value name="_x0031_0105" visiblename="DirectionInverted">FALSE</Value>
                                        <Name>DirectionInverted</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Controller</Name>
                                      <Description />
                                      <Parameter ParameterId="10200" type="std:LREAL" IndexInDevDesc="33">
                                        <Attributes />
                                        <Value name="_x0031_0200" visiblename="Kp" desc="Proportional gain for lag error">0.2</Value>
                                        <Name>Kp</Name>
                                        <Description>Proportional gain for lag error</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10202" type="std:LREAL" IndexInDevDesc="34">
                                        <Attributes />
                                        <Value name="_x0031_0202" visiblename="MaxFollowingError" desc="Maximum position lag">0.0</Value>
                                        <Name>MaxFollowingError</Name>
                                        <Description>Maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10203" type="std:BOOL" IndexInDevDesc="35">
                                        <Attributes />
                                        <Value name="_x0031_0203" visiblename="EnableFollowingErrorCheck" desc="Switch on checking of maximum position lag">FALSE</Value>
                                        <Name>EnableFollowingErrorCheck</Name>
                                        <Description>Switch on checking of maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10204" type="std:LREAL" IndexInDevDesc="36">
                                        <Attributes />
                                        <Value name="_x0031_0204" visiblename="PartVelocityPilotControl" desc="Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)">1</Value>
                                        <Name>PartVelocityPilotControl</Name>
                                        <Description>Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10205" type="std:LREAL" IndexInDevDesc="37">
                                        <Attributes />
                                        <Value name="_x0031_0205" visiblename="DeadTime" desc="Time lag in cycles between fSetPosition and fActPosition">750</Value>
                                        <Name>DeadTime</Name>
                                        <Description>Time lag in cycles between fSetPosition and fActPosition</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>8e6e96ef-66e6-4d72-a717-6ed80b7f1646</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="SM_Drive_PosControl_J6">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>1025</Type>
                                  <Id>0000 0001</Id>
                                  <Version>4.16.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="1025" role="child" interface="Common.SoftMotion.General" connectorId="0">
                                  <HostParameterSet>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Standard</Name>
                                      <Description />
                                      <Parameter ParameterId="1021" type="std:WORD" IndexInDevDesc="0">
                                        <Attributes />
                                        <Value name="_x0031_021" visiblename="wDriveID" desc="Unique ID of the drive">5</Value>
                                        <Name>wDriveID</Name>
                                        <Description>Unique ID of the drive</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1040" type="std:BOOL" IndexInDevDesc="1">
                                        <Attributes />
                                        <Value name="_x0031_040" visiblename="bVirtual" desc="Whether the drive is simulated">FALSE</Value>
                                        <Name>bVirtual</Name>
                                        <Description>Whether the drive is simulated</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1060" type="std:INT" IndexInDevDesc="2">
                                        <Attributes />
                                        <Value name="_x0031_060" visiblename="iMovementType" desc="Movement type: 0: modulo, 1: finite">1</Value>
                                        <Name>iMovementType</Name>
                                        <Description>Movement type: 0: modulo, 1: finite</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1061" type="std:LREAL" IndexInDevDesc="3">
                                        <Attributes />
                                        <Value name="_x0031_061" visiblename="fPositionPeriod" desc="Modulo period value for modulo drives [u]">360.0</Value>
                                        <Name>fPositionPeriod</Name>
                                        <Description>Modulo period value for modulo drives [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1062" type="std:INT" IndexInDevDesc="7">
                                        <Attributes />
                                        <Value name="_x0031_062" visiblename="eRampType" desc="The velocity ramp used for trajectories.">2</Value>
                                        <Name>eRampType</Name>
                                        <Description>The velocity ramp used for trajectories.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1113" type="std:LREAL" IndexInDevDesc="9">
                                        <Attributes />
                                        <Value name="_x0031_113" visiblename="fSWMaxVelocity" desc="Maximum velocity magnitude (software limit)">1000</Value>
                                        <Name>fSWMaxVelocity</Name>
                                        <Description>Maximum velocity magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1123" type="std:LREAL" IndexInDevDesc="10">
                                        <Attributes />
                                        <Value name="_x0031_123" visiblename="fSWMaxAcceleration" desc="Maximum acceleration magnitude (software limit)">1500</Value>
                                        <Name>fSWMaxAcceleration</Name>
                                        <Description>Maximum acceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1133" type="std:LREAL" IndexInDevDesc="11">
                                        <Attributes />
                                        <Value name="_x0031_133" visiblename="fSWMaxDeceleration" desc="Maximum deceleration magnitude (software limit)">1500</Value>
                                        <Name>fSWMaxDeceleration</Name>
                                        <Description>Maximum deceleration magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1143" type="std:LREAL" IndexInDevDesc="12">
                                        <Attributes />
                                        <Value name="_x0031_143" visiblename="fSWMaxJerk" desc="Maximum jerk magnitude (software limit)">10000</Value>
                                        <Name>fSWMaxJerk</Name>
                                        <Description>Maximum jerk magnitude (software limit)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1144" type="std:LREAL" IndexInDevDesc="8">
                                        <Attributes />
                                        <Value name="_x0031_144" visiblename="fRampJerk" desc="Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.">0</Value>
                                        <Name>fRampJerk</Name>
                                        <Description>Jerk used for bringing acceleration to 0 when sin² ramp is interrupted.</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1200" type="std:LREAL" IndexInDevDesc="6">
                                        <Attributes />
                                        <Value name="_x0031_200" visiblename="fSWLimitPositive" desc="Software limit in positive direction">165</Value>
                                        <Name>fSWLimitPositive</Name>
                                        <Description>Software limit in positive direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1201" type="std:LREAL" IndexInDevDesc="5">
                                        <Attributes />
                                        <Value name="_x0031_201" visiblename="fSWLimitNegative" desc="Software limit in negative direction">-180</Value>
                                        <Name>fSWLimitNegative</Name>
                                        <Description>Software limit in negative direction</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1203" type="std:LREAL" IndexInDevDesc="15">
                                        <Attributes />
                                        <Value name="_x0031_203" visiblename="fSWLimitDeceleration" desc="Deceleration for  stop on software error [u/s²]">0</Value>
                                        <Name>fSWLimitDeceleration</Name>
                                        <Description>Deceleration for  stop on software error [u/s²]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1205" type="std:BOOL" IndexInDevDesc="4">
                                        <Attributes />
                                        <Value name="_x0031_205" visiblename="bSWLimitEnable" desc="Activate/deactivate software limits">TRUE</Value>
                                        <Name>bSWLimitEnable</Name>
                                        <Description>Activate/deactivate software limits</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1207" type="std:INT" IndexInDevDesc="13">
                                        <Attributes />
                                        <Value name="_x0031_207" visiblename="eCheckPositionLag" desc="Position lag mode">0</Value>
                                        <Name>eCheckPositionLag</Name>
                                        <Description>Position lag mode</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1208" type="std:LREAL" IndexInDevDesc="14">
                                        <Attributes />
                                        <Value name="_x0031_208" visiblename="fMaxPositionLag" desc="Maximum position lag (magnitude) [u]">1.0</Value>
                                        <Name>fMaxPositionLag</Name>
                                        <Description>Maximum position lag (magnitude) [u]</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1250" type="std:LREAL" IndexInDevDesc="16">
                                        <Attributes />
                                        <Value name="_x0031_250" visiblename="fSWErrorMaxDistance" desc="Maximum distance that may be travelled for ramping down after a software error has been detected [u]">0</Value>
                                        <Name>fSWErrorMaxDistance</Name>
                                        <Description>Maximum distance that may be travelled for ramping down after a software error has been detected [u]</Description>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF: Scalings</Name>
                                      <Description />
                                      <Parameter ParameterId="1051" type="std:DWORD" IndexInDevDesc="17">
                                        <Attributes />
                                        <Value name="_x0031_051" visiblename="dwRatioTechUnitsDenom" desc="conversion inc./tech.units denominator">10775</Value>
                                        <Name>dwRatioTechUnitsDenom</Name>
                                        <Description>conversion inc./tech.units denominator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="1052" type="std:DINT" IndexInDevDesc="18">
                                        <Attributes />
                                        <Value name="_x0031_052" visiblename="iRatioTechUnitsNum" desc="conversion inc./tech.units numerator">48</Value>
                                        <Name>iRatioTechUnitsNum</Name>
                                        <Description>conversion inc./tech.units numerator</Description>
                                      </Parameter>
                                      <Parameter ParameterId="5000" type="std:DINT" IndexInDevDesc="19">
                                        <Attributes />
                                        <Value name="_x0035_000" visiblename="ScalingIncs">4000</Value>
                                        <Name>ScalingIncs</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5001" type="std:DINT" IndexInDevDesc="20">
                                        <Attributes />
                                        <Value name="_x0035_001" visiblename="ScalingMotorTurns1">1</Value>
                                        <Name>ScalingMotorTurns1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5002" type="std:DINT" IndexInDevDesc="21">
                                        <Attributes />
                                        <Value name="_x0035_002" visiblename="ScalingMotorTurns2">1293</Value>
                                        <Name>ScalingMotorTurns2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5003" type="std:DINT" IndexInDevDesc="22">
                                        <Attributes />
                                        <Value name="_x0035_003" visiblename="ScalingGearOutput1">64</Value>
                                        <Name>ScalingGearOutput1</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5004" type="std:DINT" IndexInDevDesc="23">
                                        <Attributes />
                                        <Value name="_x0035_004" visiblename="ScalingGearOutput2">1</Value>
                                        <Name>ScalingGearOutput2</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5005" type="std:DINT" IndexInDevDesc="24">
                                        <Attributes />
                                        <Value name="_x0035_005" visiblename="ScalingUnits">360</Value>
                                        <Name>ScalingUnits</Name>
                                      </Parameter>
                                      <Parameter ParameterId="5006" type="std:BOOL" IndexInDevDesc="25">
                                        <Attributes />
                                        <Value name="_x0035_006" visiblename="InvertDirection">FALSE</Value>
                                        <Name>InvertDirection</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Input</Name>
                                      <Description />
                                      <Parameter ParameterId="10000" type="std:USINT" IndexInDevDesc="26">
                                        <Attributes />
                                        <Value name="_x0031_0000" visiblename="EncoderBitWidth">32</Value>
                                        <Name>EncoderBitWidth</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Output</Name>
                                      <Description />
                                      <Parameter ParameterId="10100" type="std:DINT" IndexInDevDesc="27">
                                        <Attributes />
                                        <Value name="_x0031_0100" visiblename="MaximumOutputVelocityInt">16#03E8</Value>
                                        <Name>MaximumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10101" type="std:LREAL" IndexInDevDesc="28">
                                        <Attributes />
                                        <Value name="_x0031_0101" visiblename="MaximumOutputVelocityTU">1000.0</Value>
                                        <Name>MaximumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10102" type="std:DINT" IndexInDevDesc="29">
                                        <Attributes />
                                        <Value name="_x0031_0102" visiblename="MinimumOutputVelocityInt">-16#03E8</Value>
                                        <Name>MinimumOutputVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10103" type="std:LREAL" IndexInDevDesc="30">
                                        <Attributes />
                                        <Value name="_x0031_0103" visiblename="MinimumOutputVelocityTU">-1000.0</Value>
                                        <Name>MinimumOutputVelocityTU</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10104" type="std:DINT" IndexInDevDesc="31">
                                        <Attributes />
                                        <Value name="_x0031_0104" visiblename="ZeroVelocityInt">0</Value>
                                        <Name>ZeroVelocityInt</Name>
                                      </Parameter>
                                      <Parameter ParameterId="10105" type="std:BOOL" IndexInDevDesc="32">
                                        <Attributes />
                                        <Value name="_x0031_0105" visiblename="DirectionInverted">TRUE</Value>
                                        <Name>DirectionInverted</Name>
                                      </Parameter>
                                    </ParameterSection>
                                    <ParameterSection>
                                      <Name>AXIS_REF_PosControl: Controller</Name>
                                      <Description />
                                      <Parameter ParameterId="10200" type="std:LREAL" IndexInDevDesc="33">
                                        <Attributes />
                                        <Value name="_x0031_0200" visiblename="Kp" desc="Proportional gain for lag error">0.1</Value>
                                        <Name>Kp</Name>
                                        <Description>Proportional gain for lag error</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10202" type="std:LREAL" IndexInDevDesc="34">
                                        <Attributes />
                                        <Value name="_x0031_0202" visiblename="MaxFollowingError" desc="Maximum position lag">0.0</Value>
                                        <Name>MaxFollowingError</Name>
                                        <Description>Maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10203" type="std:BOOL" IndexInDevDesc="35">
                                        <Attributes />
                                        <Value name="_x0031_0203" visiblename="EnableFollowingErrorCheck" desc="Switch on checking of maximum position lag">FALSE</Value>
                                        <Name>EnableFollowingErrorCheck</Name>
                                        <Description>Switch on checking of maximum position lag</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10204" type="std:LREAL" IndexInDevDesc="36">
                                        <Attributes />
                                        <Value name="_x0031_0204" visiblename="PartVelocityPilotControl" desc="Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)">1</Value>
                                        <Name>PartVelocityPilotControl</Name>
                                        <Description>Factor for velocity pilot control with fSetVelocity (0 means no velocity pilot control, 1 means direct output of fSetVelocity)</Description>
                                      </Parameter>
                                      <Parameter ParameterId="10205" type="std:LREAL" IndexInDevDesc="37">
                                        <Attributes />
                                        <Value name="_x0031_0205" visiblename="DeadTime" desc="Time lag in cycles between fSetPosition and fActPosition">1500</Value>
                                        <Name>DeadTime</Name>
                                        <Description>Time lag in cycles between fSetPosition and fActPosition</Description>
                                      </Parameter>
                                    </ParameterSection>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="1248" interface="Common.SoftMotion.Logical" connectorId="1" hostpath="0">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>90c3ab61-cd9a-4b37-bdc1-631c2a20f394</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                    </configurations>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>fc630667-0317-4bc3-b02d-1f3af074bcd7</ObjectId>
                  </data>
                </addData>
              </configuration>
              <configuration name="&lt;Empty&gt;">
                <addData>
                  <data name="Device" handleUnknown="discard" />
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>1d76930d-dbe3-4129-812f-57306b665b04</ObjectId>
                  </data>
                </addData>
              </configuration>
              <configuration name="Onewire">
                <addData>
                  <data name="ExplicitConnector" handleUnknown="discard">
                    <ExplicitConnector connectorID="5" />
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>aeb0c6fd-1757-44be-b1c8-b73c4e8df34b</ObjectId>
                  </data>
                </addData>
              </configuration>
              <configuration name="Camera device">
                <addData>
                  <data name="ExplicitConnector" handleUnknown="discard">
                    <ExplicitConnector connectorID="6" />
                  </data>
                  <data name="configurations" handleUnknown="discard">
                    <configurations>
                      <configuration name="&lt;Empty&gt;">
                        <addData>
                          <data name="Device" handleUnknown="discard" />
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>b91cf46f-75cf-4d77-9b22-4d133d910165</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                    </configurations>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>4da383cb-6693-45c8-bc67-395a66a39986</ObjectId>
                  </data>
                </addData>
              </configuration>
              <configuration name="SPI">
                <addData>
                  <data name="ExplicitConnector" handleUnknown="discard">
                    <ExplicitConnector connectorID="7" />
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>ab0b7e43-88f3-412a-8ad5-c024c7dfcf48</ObjectId>
                  </data>
                </addData>
              </configuration>
              <configuration name="I²C">
                <addData>
                  <data name="ExplicitConnector" handleUnknown="discard">
                    <ExplicitConnector connectorID="8" />
                  </data>
                  <data name="configurations" handleUnknown="discard">
                    <configurations>
                      <configuration name="I2C_master_Bus1">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>496</Type>
                                  <Id>0000 0000</Id>
                                  <Version>4.11.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="496" role="child" interface="Raspberry.I2CMaster" connectorId="1">
                                  <HostParameterSet>
                                    <Parameter ParameterId="1" type="std:BOOL" IndexInDevDesc="0">
                                      <Attributes offlineaccess="none" />
                                      <Value name="_x0031_" visiblename="HiddenPointerToOwnInstance" offlineaccess="none" desc="HiddenPointerToOwnInstance">FALSE</Value>
                                      <Name>HiddenPointerToOwnInstance</Name>
                                      <Description>HiddenPointerToOwnInstance</Description>
                                    </Parameter>
                                    <Parameter ParameterId="10" type="std:STRING" IndexInDevDesc="1">
                                      <Attributes onlineaccess="read" />
                                      <Value name="_x0031_0" visiblename="I²C port" onlineaccess="read" desc="file path of the I²C port">'/dev/i2c-1'</Value>
                                      <Name>I²C port</Name>
                                      <Description>file path of the I²C port</Description>
                                    </Parameter>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="500" interface="Raspberry.I2C" connectorId="2" hostpath="1">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>2f7094b9-7865-4f98-a9e2-a6d1ff9d1660</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                      <configuration name="I2C_master_Bus2">
                        <addData>
                          <data name="Device" handleUnknown="discard">
                            <Device xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="">
                              <DeviceType>
                                <DeviceIdentification>
                                  <Type>496</Type>
                                  <Id>0000 0000</Id>
                                  <Version>4.11.0.0</Version>
                                </DeviceIdentification>
                                <Connector moduleType="496" role="child" interface="Raspberry.I2CMaster" connectorId="1">
                                  <HostParameterSet>
                                    <Parameter ParameterId="1" type="std:BOOL" IndexInDevDesc="0">
                                      <Attributes offlineaccess="none" />
                                      <Value name="_x0031_" visiblename="HiddenPointerToOwnInstance" offlineaccess="none" desc="HiddenPointerToOwnInstance">FALSE</Value>
                                      <Name>HiddenPointerToOwnInstance</Name>
                                      <Description>HiddenPointerToOwnInstance</Description>
                                    </Parameter>
                                    <Parameter ParameterId="10" type="std:STRING" IndexInDevDesc="1">
                                      <Attributes onlineaccess="read" />
                                      <Value name="_x0031_0" visiblename="I²C port" onlineaccess="read" desc="file path of the I²C port">'/dev/i2c-2'</Value>
                                      <Name>I²C port</Name>
                                      <Description>file path of the I²C port</Description>
                                    </Parameter>
                                  </HostParameterSet>
                                </Connector>
                                <Connector moduleType="500" interface="Raspberry.I2C" connectorId="2" hostpath="1">
                                  <HostParameterSet />
                                </Connector>
                                <DeviceParameterSet />
                              </DeviceType>
                            </Device>
                          </data>
                          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                            <ObjectId>6e09b7f1-4bf2-4519-b661-20c2fd8e38e7</ObjectId>
                          </data>
                        </addData>
                      </configuration>
                    </configurations>
                  </data>
                  <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                    <ObjectId>c2edcee5-4e0d-445e-b13d-3228dc92e777</ObjectId>
                  </data>
                </addData>
              </configuration>
            </configurations>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>883e7752-fd50-4d5b-bb87-a92a505c0d55</ObjectId>
          </data>
        </addData>
      </configuration>
    </configurations>
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
      <Libraries>
        <Library Name="#VisuSymbols" Namespace="VisuSymbols" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="VisuSymbols, 4.1.0.0 (System)" />
        <Library Name="#System_VisuElems" Namespace="VisuElems" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElems, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemMeter" Namespace="VisuElemMeter" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemMeter, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsSpecialControls" Namespace="VisuElemsSpecialControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsSpecialControls, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsWinControls" Namespace="VisuElemsWinControls" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsWinControls, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTextEditor" Namespace="VisuElemTextEditor" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTextEditor, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemTrace" Namespace="VisuElemTrace" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemTrace, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuNativeControl" Namespace="VisuNativeControl" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuNativeControl, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsAlarm" Namespace="VisuElemsAlarm" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsAlarm, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemCamDisplayer" Namespace="VisuElemCamDisplayer" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemCamDisplayer, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElem3DPath" Namespace="VisuElem3DPath" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElem3DPath, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemsDateTime" Namespace="VisuElemsDateTime" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemsDateTime, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuElemXYChart" Namespace="VisuElemXYChart" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuElemXYChart, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <Library Name="#System_VisuInputs" Namespace="VisuInputs" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="VisuInputs, 4.5.0.0 (System)" ResolverGuid="2717eb6a-dd07-4c66-8d8d-cacebd7b18ae" />
        <PlaceholderRedirections>
          <PlaceholderRedirection Placeholder="CmpTraceMgr" Redirection="CmpTraceMgr, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="FloatingPointUtils" Redirection="FloatingPointUtils, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="Standard" Redirection="Standard, 3.5.18.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpDynamicText" Redirection="CmpDynamicText, 3.5.20.0 (System)" />
          <PlaceholderRedirection Placeholder="Standard64" Redirection="Standard64, 3.5.20.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElems" Redirection="VisuElems, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpVisuHandler" Redirection="CmpVisuHandler, 3.5.19.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElem3DPath" Redirection="VisuElem3DPath, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="SysTimeCore" Redirection="SysTimeCore, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElemTextEditor" Redirection="VisuElemTextEditor, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElemCamDisplayer" Redirection="VisuElemCamDisplayer, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="SysTarget" Redirection="SysTarget, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CAA ResMan" Redirection="CAA Ressource Manager Extern, 3.5.17.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="CmpSchedule" Redirection="CmpSchedule, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpBinTagUtilIec" Redirection="CmpBinTagUtilIec, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpIecTask" Redirection="CmpIecTask, 3.5.20.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpApp" Redirection="CmpApp, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="SysSem" Redirection="SysSem, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CAA Behaviour Model" Redirection="CAA Behaviour Model, 3.5.19.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="SysProcess" Redirection="SysProcess, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpUserMgr Implementation" Redirection="CmpUserMgr Implementation, 3.5.19.0 (System)" />
          <PlaceholderRedirection Placeholder="SysTask" Redirection="SysTask, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElemsSpecialControls" Redirection="VisuElemsSpecialControls, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="SysShm Implementation" Redirection="SysShm Implementation, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="ElementCollections" Redirection="Element Collections, 3.5.17.0 (3S - Smart Software Solutions GmbH)" />
          <PlaceholderRedirection Placeholder="SysSem Implementation" Redirection="SysSem Implementation, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CAA Tick" Redirection="CAA Tick Extern, 3.5.17.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="CAA TickUtil" Redirection="CAA TickUtil Extern, 3.5.17.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="System_VisuNativeControl" Redirection="VisuNativeControl, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="SysFile" Redirection="SysFile, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="VisuSymbols" Redirection="VisuSymbols, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="SysTime" Redirection="SysTime, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="SysProcess Implementation" Redirection="SysProcess Implementation, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CAA Storage Imp" Redirection="3S Storage, 3.5.17.0 (3S - Smart Software Solutions GmbH)" />
          <PlaceholderRedirection Placeholder="CAA Storage" Redirection="CAA Storage, 3.5.17.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="StringUtils" Redirection="StringUtils, 3.5.20.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpSrv" Redirection="CmpSrv, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="SysShm" Redirection="SysShm, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElemsWinControls" Redirection="VisuElemsWinControls, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="CAA Types" Redirection="CAA Types Extern, 3.5.17.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="CmpLog" Redirection="CmpLog, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuInputs" Redirection="VisuInputs, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="Util" Redirection="Util, 3.5.19.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpBitmapPool" Redirection="CmpBitmapPool, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CmpEventMgr" Redirection="CmpEventMgr, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElemsDateTime" Redirection="VisuElemsDateTime, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="SysTimeRtc" Redirection="SysTimeRtc, 3.5.20.0 (System)" />
          <PlaceholderRedirection Placeholder="System_VisuElemMeter" Redirection="VisuElemMeter, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="CAA FB Factory" Redirection="CAA FB Factory, 3.5.19.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="System_VisuElemsAlarm" Redirection="VisuElemsAlarm, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="Rts Service Handler" Redirection="Rts Service Handler, 3.5.17.0 (3S - Smart Software Solutions GmbH)" />
          <PlaceholderRedirection Placeholder="System_VisuElemXYChart" Redirection="VisuElemXYChart, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="CAA Callback" Redirection="CAA Callback Extern, 3.5.17.0 (CAA Technical Workgroup)" />
          <PlaceholderRedirection Placeholder="System_VisuElemTrace" Redirection="VisuElemTrace, 4.5.0.0 (System)" />
          <PlaceholderRedirection Placeholder="Component Manager" Redirection="Component Manager, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="Collections" Redirection="Collections, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="CBML" Redirection="Common Behaviour Model, 3.5.17.0 (3S - Smart Software Solutions GmbH)" />
          <PlaceholderRedirection Placeholder="SysCpuHandling" Redirection="SysCpuHandling, 3.5.17.0 (System)" />
          <PlaceholderRedirection Placeholder="SysMem" Redirection="SysMem, 3.5.17.0 (System)" />
        </PlaceholderRedirections>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>7947b9f0-2ec0-46cb-a7e5-f8f763be16e6</ObjectId>
          </data>
        </addData>
      </Libraries>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Device" ObjectId="883e7752-fd50-4d5b-bb87-a92a505c0d55">
          <Object Name="Application" ObjectId="7babeec2-008b-4bd3-b402-84e2c4d6ae83">
            <Object Name="Library Manager" ObjectId="80af59fb-8d62-4f6c-95b0-580a98d81b1e" />
            <Folder Name="POU">
              <Object Name="_00_Main" ObjectId="f495872a-eb99-4e62-a111-ca71535b5152">
                <Folder Name="public">
                  <Object Name="M_Init" ObjectId="229ed790-05b4-4c75-a8a2-65170cb5046e" />
                  <Object Name="M_BuildTests" ObjectId="9a5607a2-ed23-4572-beb3-b80fd95846d5" />
                </Folder>
                <Folder Name="private">
                  <Object Name="_M_Homing" ObjectId="bf4b7640-1df3-46ff-b6ca-dc416adad7e8" />
                  <Object Name="_M_Processor" ObjectId="d0cb92ac-a65b-4a94-99d2-d1aa2daea05c" />
                  <Object Name="_M_Cnc" ObjectId="c97e4850-18dd-453d-978c-2cd37627fe3a" />
                  <Object Name="_M_Jogging" ObjectId="0244d8b9-9bfb-4b7e-b2e7-dffe5ddef546" />
                  <Object Name="_M_Controller" ObjectId="111d7557-61e1-48d4-ad0f-48b4ac517334" />
                  <Object Name="_M_Tuning" ObjectId="7bc5b496-9c33-4d9b-b0d8-4ee9652747d2" />
                  <Object Name="_M_GroupHandler" ObjectId="39e1494b-f21b-4425-b5e3-86e0f472492e" />
                </Folder>
              </Object>
              <Object Name="_10_Drives" ObjectId="3256c2f0-e8a8-4738-aa1a-395ceff25c60">
                <Folder Name="private">
                  <Object Name="_M_HandleDriveIO" ObjectId="1f105a3e-ae48-4de4-9cd3-fada08b1a872" />
                  <Object Name="_M_Init" ObjectId="9031c730-57b8-48ca-b284-2770517ca6ee" />
                </Folder>
                <Folder Name="public">
                  <Object Name="M_Init" ObjectId="aea6e4c3-5f5a-4eff-ae8a-2de4fd010b88" />
                </Folder>
              </Object>
              <Object Name="_20_Io" ObjectId="c3b19a06-6020-44bc-8c83-cb31670bfa1a">
                <Folder Name="private">
                  <Object Name="_M_HandleRemoteIO" ObjectId="95e27eb3-1cc7-4783-8f9f-46fca05a221d" />
                </Folder>
              </Object>
              <Object Name="_30_Visu" ObjectId="9462f316-faa5-42b7-be46-708f3ef2e1f0" />
              <Object Name="_40_Vision" ObjectId="168c2bce-5a06-487a-a077-28448e10fa0d" />
            </Folder>
            <Object Name="MainTask" ObjectId="eafe4677-fa00-4970-b015-251c89fffd79" />
            <Object Name="SoftMotion_PlanningTask" ObjectId="5a42e1b4-5f13-4f3e-9a38-abed03da7807" />
            <Object Name="VISU_TASK" ObjectId="7d686a67-c501-4ade-ac77-336899e42115" />
            <Object Name="EtherCAT_Task" ObjectId="7ed10bf7-6aec-4271-9633-681eae31fe92" />
            <Folder Name="FUN">
              <Folder Name="move">
                <Object Name="ParseMoveCmd" ObjectId="35e49e9e-292d-48d5-910d-e69db317cc55" />
                <Object Name="MoveCmdProcessor" ObjectId="8f4275d6-46b8-4b53-89d9-00cb2bff4683">
                  <Folder Name="protected">
                    <Object Name="M_Starting" ObjectId="ce3be291-42fd-4d66-9e0a-0e5bf023807b" />
                    <Object Name="M_Resetting" ObjectId="95f46e6e-26ec-450c-948d-d902314a1d4d" />
                    <Object Name="M_Idle" ObjectId="387dbba7-203a-4514-9198-3038b8e4b5dc" />
                    <Object Name="M_Holding" ObjectId="67eb5664-2a5b-4455-8b32-aeda1b99b743" />
                    <Object Name="M_Execute" ObjectId="a682ac1d-71f4-44e2-9664-b97db23d1386" />
                    <Object Name="M_Aborting" ObjectId="4e26ece5-3a6a-4b95-a5a2-0147c1e26a3d" />
                    <Object Name="M_Complete" ObjectId="5915b6b9-5c4b-4cff-a92a-a70dfd02e351" />
                    <Object Name="M_UnHolding" ObjectId="388ca3d8-559e-4364-ae71-180c399a068a" />
                    <Object Name="M_SetPackML" ObjectId="09bb9e0c-557b-4db9-8574-c3a1036b476e" />
                    <Object Name="M_Clearing" ObjectId="2e7feb23-d083-4537-94b3-cdf41be2bdfa" />
                  </Folder>
                </Object>
                <Object Name="ST_MoveCmd" ObjectId="f71cc9b7-cb4b-485a-9aed-2944bbd084ca" />
                <Object Name="BuildMoveCmd" ObjectId="19554b2f-3ca2-4f8d-a4a2-2e3ac3119ec0" />
              </Folder>
              <Folder Name="home">
                <Object Name="FB_HomingProcessor" ObjectId="6c30ff35-bc31-4ed8-ab4a-320ad080dc49">
                  <Folder Name="public">
                    <Object Name="M_SetHome" ObjectId="ac8ad3ff-e2e3-4571-99f3-004f0df0c316" />
                    <Object Name="M_StartHoming" ObjectId="1ff714ca-aba4-448a-bc01-bf0eab578f27" />
                  </Folder>
                  <Folder Name="private">
                    <Object Name="_M_HandlePose" ObjectId="8dbad245-108d-44dc-844d-47ebe55e9287" />
                  </Folder>
                </Object>
                <Object Name="F_HomeOffsetCalc" ObjectId="ad8953b8-d17f-41b2-83c9-9901a22a0b46" />
              </Folder>
              <Folder Name="jog">
                <Object Name="FB_JogProcessor" ObjectId="9ad0dd5a-e160-4345-8eee-ad9cf9bfb3eb">
                  <Folder Name="private">
                    <Object Name="_M_HandleController" ObjectId="dcf131a0-32b4-4630-a728-b085ba029110" />
                    <Object Name="_M_CheckOffsets" ObjectId="347358c3-2be2-4bfb-955f-c6b01631848c" />
                    <Object Name="_M_HandlePose" ObjectId="043b4f3b-61e5-44ea-8800-b568d3612acd" />
                  </Folder>
                  <Folder Name="public">
                    <Object Name="M_ClearOffsets" ObjectId="5b18153f-c32f-4189-9485-f501f275c7f5" />
                  </Folder>
                  <Object Name="M_MoveToPose" ObjectId="5971868c-619e-47a6-ac41-0e2ed68a066a" />
                </Object>
                <Object Name="F_SetJogButtons" ObjectId="640ac73b-ff1c-4df1-a978-e5b05f9ea455" />
                <Object Name="E_Pose" ObjectId="b79aef52-6212-478e-b00a-eac3efda95a0" />
              </Folder>
              <Object Name="FB_CommandProcessor" ObjectId="97872514-f094-4f4a-8630-59a989ffd663">
                <Object Name="P_CurrentCommandIndex" ObjectId="d4fb3147-2a09-4011-bb95-1eb5cd53c440" />
                <Folder Name="public">
                  <Object Name="M_SetNextCommand" ObjectId="7318a297-a063-4ac2-856c-165720d821a4" />
                  <Object Name="M_SetCommands" ObjectId="b6f598fc-4eb1-4dc6-b9b6-f064109879cc" />
                </Folder>
                <Folder Name="protected">
                  <Object Name="M_Complete" ObjectId="642c5013-51df-4c85-a867-73cd18842e60" />
                  <Object Name="M_Resetting" ObjectId="b97773af-d3db-4ff8-bc09-d39e6c9c165a" />
                  <Object Name="M_Idle" ObjectId="a8790f5b-e067-4003-a446-4302e4343c80" />
                  <Object Name="M_SetPackML" ObjectId="95b94fb2-14e3-4b3b-8405-e444036b8980" />
                  <Object Name="M_Starting" ObjectId="9c738675-c279-409c-92e2-b6bbcd05e321" />
                  <Object Name="M_Execute" ObjectId="9d44a219-dd62-4e0a-8b38-07968243ee03" />
                  <Object Name="M_Suspending" ObjectId="59fc01db-f06d-4b70-9e04-ba20bd9ce6b9" />
                  <Object Name="M_UnSuspending" ObjectId="d8134748-b5a7-4257-9a4e-3b1612d98833" />
                  <Object Name="M_Holding" ObjectId="e05e442b-e0e4-4e0a-9099-5c3c862a429f" />
                  <Object Name="M_UnHolding" ObjectId="4a0b543c-927e-400a-b5da-ba002055cdd0" />
                  <Object Name="M_Aborting" ObjectId="f73e1a47-970e-47c3-b986-e1fe2eaafd0c" />
                  <Object Name="M_Stopping" ObjectId="b76b8c76-e672-465e-b5bc-a2cc80d6ee6f" />
                  <Object Name="M_Clearing" ObjectId="766fbc5b-b0ec-40a6-bc48-5f02adefd0a5" />
                </Folder>
                <Object Name="P_CurrentCommand" ObjectId="49585069-1976-4ffb-8b46-f97b3eeaff68" />
              </Object>
              <Folder Name="cnc">
                <Object Name="ST_CncCmd" ObjectId="bfbed99a-036f-4373-a7be-6feb43a2d296" />
                <Object Name="CncPathPlanner" ObjectId="845c01d1-16bd-4c5b-8921-4865a7e07fd2">
                  <Object Name="M_Execute" ObjectId="92875761-2fd7-4bb6-bbf7-a117fd98b83f" />
                  <Object Name="M_Reset" ObjectId="bcea459e-fa66-4937-b73d-59fec7864ad5" />
                  <Object Name="M_SetStartPosition" ObjectId="deae1c1c-a35f-4dab-a882-870c0dd1bbee" />
                  <Object Name="M_SetOriConvention" ObjectId="bc2fe0c5-bb28-4086-a8ef-9e95685b910f" />
                </Object>
                <Object Name="PositionTracker" ObjectId="7701f0fc-a0ed-4db5-acf4-25ec5ce43abb">
                  <Object Name="M_Clear" ObjectId="dfb86b0d-b5f1-49bd-9916-9936d6497f13" />
                </Object>
                <Object Name="BuildCncCmd" ObjectId="e33aafb8-c7d1-4dab-86cc-41df906bbf07" />
                <Object Name="CncCmdProcessor" ObjectId="09e229dd-dea4-4418-8521-de497c93f5dc">
                  <Folder Name="protected">
                    <Object Name="M_SetPackML" ObjectId="7c793665-23c8-4063-a654-5011975c105b" />
                    <Object Name="M_Complete" ObjectId="0b336f4b-391c-459f-a28e-2f4ba2e8bba2" />
                    <Object Name="M_Execute" ObjectId="882518ea-bbf9-4ac5-86b5-eca49a6b2287" />
                    <Object Name="M_Starting" ObjectId="3a2ecf7b-c9fd-4771-acb0-40bfe0e5c659" />
                    <Object Name="M_Resetting" ObjectId="dd49c510-b353-40d1-99d1-226a7e98ba4c" />
                    <Object Name="M_Holding" ObjectId="1442df85-b316-4422-acf3-2f8fc74d80e1" />
                    <Object Name="M_UnHolding" ObjectId="1070643e-06f2-476a-8286-a7b05c60fa83" />
                    <Object Name="M_Idle" ObjectId="c93ab278-2b3f-4bc7-a2ff-fccaf401c8a8" />
                  </Folder>
                </Object>
                <Object Name="ParseCncCmd" ObjectId="4ea6ce2c-d973-415a-9620-8fd34fa576a4" />
              </Folder>
              <Folder Name="output">
                <Object Name="BuildOutputCmd" ObjectId="e29ffd53-c60c-4780-9cae-795a42c1806f" />
                <Object Name="ParseOutputCmd" ObjectId="b67ef6d4-a509-4504-af22-150225e40cd0" />
                <Object Name="OutputCmdProcessor" ObjectId="6372490f-9396-4f98-b458-51631931ad07">
                  <Folder Name="protected">
                    <Object Name="M_SetPackML" ObjectId="fed562a2-eddf-4e93-afb0-ae3624ddf3de" />
                    <Object Name="M_Resetting" ObjectId="83e31000-e404-406b-a9f0-af2b8e43e2b9" />
                    <Object Name="M_Execute" ObjectId="1d97f92f-5146-4d3a-b260-50bb7a3971f7" />
                    <Object Name="M_Starting" ObjectId="88023030-83e7-4c3a-848e-230ca2d5e812" />
                    <Object Name="M_Holding" ObjectId="6bd03b4f-d8eb-4211-abab-f0512818ab61" />
                    <Object Name="M_Idle" ObjectId="f42bff08-3d3c-4f17-bbd4-541074d9df17" />
                    <Object Name="M_UnHolding" ObjectId="10531d76-a1e4-42ba-a26f-88c13c76bd1e" />
                    <Object Name="M_Aborting" ObjectId="fc1f966e-206a-402e-8b05-6358a2c60ff4" />
                    <Object Name="M_Clearing" ObjectId="368dc781-45d7-4e24-9a5e-8a9a04872ec6" />
                    <Object Name="M_Complete" ObjectId="843305da-b984-4520-8555-133899b9f165" />
                  </Folder>
                </Object>
                <Object Name="ST_OutputCmd" ObjectId="8d0742ed-4361-441a-8bce-40feb4d004c2" />
              </Folder>
              <Folder Name="pause">
                <Object Name="BuildPauseCmd" ObjectId="b7a08d1d-f5e6-4f3c-9f3f-733c40c45429" />
                <Object Name="ParsePauseCmd" ObjectId="155e4e57-98df-4f34-8414-c9af1793585b" />
                <Object Name="PauseCmdProcessor" ObjectId="761241d9-a41a-4641-86b9-9b083b6be68b">
                  <Folder Name="protected">
                    <Object Name="M_SetPackML" ObjectId="6e516751-a0ab-433e-9a68-8b911bf9a0fe" />
                    <Object Name="M_Complete" ObjectId="2e5db4a5-a489-4506-8ef9-c0b206420609" />
                    <Object Name="M_Resetting" ObjectId="25f52b0f-f9c8-4c07-856d-4168885b692d" />
                    <Object Name="M_Execute" ObjectId="3817a097-cfb2-4856-abd1-75f36cc5363a" />
                    <Object Name="M_Starting" ObjectId="c161e731-b469-46d9-a74c-2490c081ccd5" />
                  </Folder>
                </Object>
                <Object Name="ST_PauseCmd" ObjectId="be976acf-5a13-4a9d-8d9f-61e2df7de507" />
              </Folder>
              <Folder Name="tcp">
                <Object Name="PythonServerHandler" ObjectId="804277ad-245a-4a3c-a537-920a77a195da">
                  <Object Name="P_Error" ObjectId="7b9a3d13-95e9-4410-9f3b-3b6399fa6fb2" />
                  <Folder Name="protected">
                    <Object Name="_M_Execute" ObjectId="1d54f7e6-4fa6-4e0f-8c65-6228efc66fc8" />
                  </Folder>
                  <Object Name="P_Done" ObjectId="708b755f-cbb5-42c0-aace-6ce4a67def1f" />
                  <Object Name="P_Busy" ObjectId="6d24286d-e3e1-41d7-ba8e-32c4455b87f8" />
                  <Folder Name="public">
                    <Object Name="M_Cancel" ObjectId="75d216d3-a4d7-46fb-a956-69a865fd5623" />
                    <Object Name="M_Reset" ObjectId="8ff5eef9-28b5-4305-bebc-5e20570de374" />
                    <Object Name="M_Reconnect" ObjectId="731c66e4-a086-48d9-9121-30312d5080f2" />
                  </Folder>
                  <Object Name="P_ErrorDescription" ObjectId="f546bf4a-eaa1-4c6c-bb65-aa6dea22cd5e" />
                  <Object Name="P_Response" ObjectId="bb2ba885-657e-4ce3-9507-abb02ea1162c" />
                  <Object Name="P_RawReadString" ObjectId="1f6a1927-a95b-431e-8983-0d7d73e6caa0" />
                  <Object Name="P_RawReadByteArray" ObjectId="8e5ce9ac-6249-45b2-9d47-43e3c6ae2b18" />
                  <Object Name="P_RecordNumber" ObjectId="c9f5a0ac-c563-44aa-8bfd-7e4ab4c918a0" />
                  <Object Name="P_Connected" ObjectId="b5d488ec-005f-42a5-ae5d-b73e6b84cd93" />
                </Object>
                <Object Name="TcpClient" ObjectId="0c178c71-0d25-4361-b16e-e3833e33b5d0">
                  <Folder Name="internal">
                    <Object Name="_M_Write" ObjectId="5821b17b-b657-4412-802a-8f52a5970847" />
                    <Object Name="_M_Reconnect" ObjectId="97676848-0c7a-4e94-a0de-70ae837304a7" />
                  </Folder>
                </Object>
              </Folder>
              <Folder Name="vision">
                <Object Name="OpenCV" ObjectId="6d87a4c9-9357-4e03-b1a0-c731940d5946">
                  <Folder Name="Public">
                    <Object Name="M_CalibrateCamera" ObjectId="f8181cbb-d977-4dc5-9d9a-f6beb94ec24e" />
                    <Object Name="M_CaptureImage" ObjectId="d38f4a97-5265-4a49-a236-4f8dbe120152" />
                    <Object Name="M_LocatePart" ObjectId="6c14d589-4ff1-4332-97a1-15bfa9d317ed" />
                  </Folder>
                </Object>
                <Object Name="ParseVisionCmd" ObjectId="c1f3fe10-7066-4e4d-ae1a-05a0a2c8898a" />
                <Object Name="BuildVisionCmd" ObjectId="580bcf70-fae5-407f-8446-aaa0a1365ba4" />
                <Object Name="StringByteArray" ObjectId="74ac9c91-8dd0-4804-83eb-55aba09ae987" />
                <Object Name="ST_VisionLocate" ObjectId="979edabc-249c-4294-9a6b-583c609d1013" />
                <Object Name="ST_VisionCalibrate" ObjectId="182d3d19-8ffc-4b3a-943b-f60486efdc5a" />
                <Object Name="ST_VisionCmd" ObjectId="bbefe0b0-9a20-4826-9638-01ab457504e9" />
                <Object Name="VisionCmdProcessor" ObjectId="fe68b725-9761-4240-89f1-03981366ea66">
                  <Folder Name="protected">
                    <Object Name="M_SetPackML" ObjectId="93afa927-2608-4b3d-9460-07c2fd48c33a" />
                    <Object Name="M_Complete" ObjectId="fcfc6b30-29f1-4c96-9dec-23fe83a707f7" />
                    <Object Name="M_Resetting" ObjectId="62ae2670-1ac3-4949-b0cc-afaf62b4bcb3" />
                    <Object Name="M_Starting" ObjectId="02db5f8f-59c2-4bc3-a7b7-0c1db0560d27" />
                    <Object Name="M_Execute" ObjectId="4fb297bd-99b3-45b8-9db0-a39dde1b30d8" />
                    <Object Name="M_Aborting" ObjectId="d513ea01-4f59-4a93-8842-106eb97fa165" />
                  </Folder>
                  <Object Name="P_PartsCount" ObjectId="59a35101-d609-430e-a7f5-a7dd6d208165" />
                  <Folder Name="public">
                    <Object Name="M_ReconnectVisionSystem" ObjectId="bccf85b8-1449-40b5-9076-7f7a8ac52707" />
                  </Folder>
                  <Object Name="P_VisionSystemConnected" ObjectId="095e3029-762d-4123-a2cd-4e83671e3172" />
                </Object>
              </Folder>
              <Folder Name="controller">
                <Object Name="FB_Controller" ObjectId="6c3bd905-e561-44be-a365-7f9abc521e72">
                  <Folder Name="public">
                    <Object Name="M_SetColor" ObjectId="eeb0100c-2915-48d1-9f36-b75c4e907a60" />
                    <Object Name="M_SetPlayerID" ObjectId="fe5b8c1d-d289-45ab-8132-645bc019686a" />
                    <Object Name="M_SetMicrophoneState" ObjectId="59d971f4-160d-4206-8fd6-464272a65157" />
                    <Object Name="M_SetBrightness" ObjectId="ea400410-5d62-42d9-8299-464d48113d8b" />
                    <Object Name="M_SetMotorIntensity" ObjectId="1764fe0e-660f-4c27-8d1f-29b1674c5009" />
                    <Object Name="M_SetTriggerMode" ObjectId="9cdabd76-e674-4c87-a86d-b3798e605bb0" />
                    <Object Name="M_SetTriggerForce" ObjectId="2469dbae-9da4-4cf0-aaf5-0b5c14fa7e2d" />
                  </Folder>
                  <Folder Name="private">
                    <Object Name="_M_EvaluateControllerStates" ObjectId="ec5a2389-0422-417f-bd11-588f38f08844" />
                    <Object Name="_M_SetColor" ObjectId="54de39e9-a68c-4cdd-9c6b-c369236e0e6b" />
                    <Object Name="_M_SetMicrophoneState" ObjectId="04008bef-1240-44b8-b1a0-4148da719966" />
                    <Object Name="_M_SetPlayerID" ObjectId="c145fd68-52c7-4142-a0ba-b1d06db0c33d" />
                    <Object Name="_M_SetBrightness" ObjectId="90b7f945-cd7e-41a6-be53-3bd7b43fad70" />
                    <Object Name="_M_SetMotorIntensity" ObjectId="572923e8-2cd9-45a4-9f71-7169965a5b39" />
                    <Object Name="_M_SetTriggerMode" ObjectId="cc90c045-ff13-46bd-bee3-0677bb07476d" />
                    <Object Name="_M_SetTriggerForce" ObjectId="a4252e21-370c-45c8-a3d9-1c1fe732617d" />
                  </Folder>
                  <Object Name="P_State" ObjectId="8f9874b7-a4ba-4163-b1b5-6ca35856054f" />
                </Object>
                <Object Name="ST_Buttons" ObjectId="95f2037f-8fc8-4d22-85e5-1ff2dd41a9ab" />
                <Object Name="ST_Controller" ObjectId="cae9356f-d6ac-4e7d-8011-d5a6d5d74766" />
                <Object Name="ST_Joystick" ObjectId="599c74c1-daba-4b5d-bf77-f7cae8b16f11" />
                <Object Name="ST_Dpad" ObjectId="c497e547-1dfd-4da7-a86e-8ae4d44a7765" />
                <Object Name="ST_Trigger" ObjectId="90a8586d-e3b4-42f9-8d1f-b5349239d03c" />
                <Object Name="ST_Trackpad" ObjectId="d80eab9f-545b-4809-8bfc-c7c96718771a" />
                <Object Name="ST_Triggers" ObjectId="23fe38f5-1749-4c16-9421-9a5256c84443" />
                <Object Name="ST_Trackpads" ObjectId="e4026d17-babf-4f21-9b81-8b66dca5d5cd" />
                <Object Name="ST_Joysticks" ObjectId="185991db-bd55-406a-a1ea-3602fc50608b" />
                <Object Name="ST_Gyroscope" ObjectId="18138b89-cf57-409e-a883-6a58c1af160a" />
                <Object Name="ST_Accelerometer" ObjectId="609788be-6cef-4bab-b82d-0de671123a2d" />
                <Object Name="ST_Battery" ObjectId="d7224d0e-a20c-4ec1-9d9d-a32f25c607e6" />
                <Object Name="F_DpadState" ObjectId="c7c6193c-9fb2-4a99-8fe9-b8b80e6ab7d7" />
                <Object Name="E_ControllerPlayerID" ObjectId="d98d4d74-0af2-4200-b2d2-a2e62489282e" />
                <Object Name="E_ControllerBrightness" ObjectId="604af7c6-46fd-4031-b39f-42d0051195f9" />
                <Object Name="E_ControllerMotor" ObjectId="a6c1ccec-7589-44ea-8664-b26e13e4589c" />
                <Object Name="E_ControllerTriggerMode" ObjectId="7cfb17e9-0adb-430c-99c4-e3a0b9b689dc" />
                <Object Name="E_ControllerTrigger" ObjectId="cf02ac9e-9fa8-4292-8ddb-6ba2ae2076e9" />
                <Object Name="E_ControllerTriggerForceParameter" ObjectId="54b4a266-7c75-4f63-967a-c2dc24d3f5bb" />
              </Folder>
              <Folder Name="template">
                <Object Name="Module" ObjectId="06152fa3-0ee8-42bb-9309-1b5f17657eed">
                  <Folder Name="public">
                    <Object Name="M_Start" ObjectId="4fffeb3f-a502-448a-801f-62a2012af7b1" />
                    <Object Name="M_Home" ObjectId="80e95931-65c8-4c90-ad00-612ca250483e" />
                    <Object Name="M_Abort" ObjectId="e5c2715c-41fc-45b3-ba5d-b082d35ede74" />
                    <Object Name="M_Hold" ObjectId="f895a567-6f19-4aaf-a19a-430ec9375429" />
                    <Object Name="M_Stop" ObjectId="10e51045-5ea3-431f-a77c-f14d9d4a03bb" />
                  </Folder>
                  <Folder Name="private">
                    <Object Name="_M_Start" ObjectId="f110705f-80e9-4c18-9b3f-432547227ce9" />
                    <Object Name="_M_Home" ObjectId="b6b75ed6-b5aa-4b31-9a1b-102168846c09" />
                  </Folder>
                  <Folder Name="protected">
                    <Object Name="M_Error" ObjectId="dbcfca92-733c-4c2e-a049-52c206183687" />
                    <Object Name="M_Reset" ObjectId="9e2db144-5b4e-459a-90c5-117bc0e5923a" />
                  </Folder>
                  <Object Name="PropCurrentState" ObjectId="27b1323a-18e8-4d9c-9aef-c0fccf1fee6f" />
                  <Object Name="PropBusy" ObjectId="df90aa53-7938-4729-8aeb-e73fd9721d5b" />
                  <Object Name="PropError" ObjectId="3b5ad92c-8b5a-464b-aed7-6f6699ae2429" />
                  <Object Name="PropErrDescription" ObjectId="e9dc189d-3561-4f34-8238-07f940859ee8" />
                </Object>
                <Object Name="PackML" ObjectId="6c88eb42-407a-40dd-8e49-bce1d691f0b2">
                  <Folder Name="transition">
                    <Object Name="M_Aborting" ObjectId="4ccdaadd-4d64-4496-9a92-f9d54027b3e6" />
                    <Object Name="M_Unholding" ObjectId="dd9db8d0-121c-491d-90d0-c48a6d1a9c8c" />
                    <Object Name="M_Completing" ObjectId="cdb4b4d5-ad61-48d7-8221-bee63d28f73e" />
                    <Object Name="M_Stopping" ObjectId="2a358bb2-c1f6-4a20-a8a4-b1f9186be16b" />
                    <Object Name="M_Clearing" ObjectId="d14434d0-0c21-4aeb-9ac0-ef015f60a253" />
                    <Object Name="M_Resetting" ObjectId="265b97c8-7d33-479a-a049-5413df07bbc0" />
                    <Object Name="M_Suspending" ObjectId="257ce55a-16e1-49a8-a988-70ddadfd556f" />
                    <Object Name="M_Starting" ObjectId="a57fa019-c6bc-4a1b-8d70-a7fd715b2a98" />
                    <Object Name="M_UnSuspending" ObjectId="92d160d6-e55f-49b6-aa9a-db1194f2c385" />
                    <Object Name="M_Holding" ObjectId="d0d2c3a0-c22e-4c6e-a69f-299695504931" />
                  </Folder>
                  <Folder Name="wait">
                    <Object Name="M_Aborted" ObjectId="1e7d8b79-5c9e-4f82-bbe2-4b62642b61c9" />
                    <Object Name="M_Held" ObjectId="e494ada4-57c2-4376-ac70-cda2694b60af" />
                    <Object Name="M_Stopped" ObjectId="9d740f8a-4f3e-49bb-91d2-33529475924d" />
                    <Object Name="M_Complete" ObjectId="a8d6ce7e-80d8-47c9-bc1d-450f6d3deda6" />
                    <Object Name="M_Suspended" ObjectId="612d50dc-ee92-4ff0-ae48-fb8d6eb3faaa" />
                    <Object Name="M_Idle" ObjectId="f7cfba5a-2f6d-4bb5-a7c7-24bbbea33671" />
                  </Folder>
                  <Object Name="M_SetPackML" ObjectId="39ef47a6-266e-47c8-9b77-da56debc7f4c" />
                  <Object Name="M_StateComplete" ObjectId="92d33e74-f074-4855-bfb9-ab287dcecae4" />
                  <Object Name="M_Execute" ObjectId="6b6aa070-27a5-40ba-b87d-289ef11ff0ed" />
                </Object>
                <Object Name="ITFModule" ObjectId="83e2f220-b628-4cc1-8425-5ccb3ca1431d">
                  <Object Name="M_Start" ObjectId="ede511b9-4a8a-4fd7-9a81-92329944db01" />
                  <Object Name="M_Stop" ObjectId="b5172065-9e2b-4628-992b-67cbdd66121e" />
                  <Object Name="M_Home" ObjectId="fa5ae12d-e278-43b8-b9fb-522a2f8363df" />
                  <Object Name="M_Abort" ObjectId="d4b36388-2c40-4a2a-840c-a7558cccf32c" />
                  <Object Name="M_Hold" ObjectId="74dca715-0832-4e57-bd11-fa5482a40ca4" />
                  <Object Name="PropCurrentState" ObjectId="4900066d-af26-4295-98da-8b49be553787" />
                  <Object Name="PropBusy" ObjectId="826777bf-f2fe-40ca-a5f3-f2f24fef4c48" />
                  <Object Name="PropError" ObjectId="8b3b149d-5bc9-492d-bf03-7c656df23d5f" />
                  <Object Name="PropErrDescription" ObjectId="c91c07e4-f8e0-4585-a6d3-d7b49542a264" />
                </Object>
              </Folder>
              <Folder Name="varset">
                <Object Name="ParseVarSetCmd" ObjectId="21a45979-23a6-4d05-8c5e-026456e22047" />
                <Object Name="VarSetCmdProcessor" ObjectId="4e6d31f4-1f5e-495c-b2c6-1fabb531ce1d">
                  <Folder Name="protected">
                    <Object Name="M_SetPackML" ObjectId="68d991e6-dbe4-463a-80e0-5f3da08333d1" />
                    <Object Name="M_Complete" ObjectId="130f8bcb-8a65-424f-bc15-3fc7e753edde" />
                    <Object Name="M_Starting" ObjectId="2949ddea-6613-413b-8ae7-28086e6ca171" />
                    <Object Name="M_Execute" ObjectId="f570903b-8d82-43ce-845d-3b6445cd6365" />
                  </Folder>
                </Object>
                <Object Name="BuildVarSetCmd" ObjectId="464f3abe-fbad-44ed-ab93-0358a4edadad" />
                <Object Name="ST_VarSetCmd" ObjectId="0b1a37a4-4123-4a33-84fb-db1ab5afd1a7" />
              </Folder>
              <Object Name="F_SplitCmd" ObjectId="4ffeb092-e2fe-4508-9822-2d3197400b13" />
              <Folder Name="logic">
                <Object Name="LogicCmdProcessor" ObjectId="ef05d0a0-faef-4d26-ad80-b37bf095bfda">
                  <Folder Name="protected">
                    <Object Name="M_SetPackML" ObjectId="8ca4de4a-aa41-4055-81ee-9c69366d3914" />
                    <Object Name="M_Complete" ObjectId="b9caab7f-1bc9-4e01-ad9e-5992be1f9d70" />
                    <Object Name="M_Execute" ObjectId="5c7eb861-0692-458a-9941-920dd2879e58" />
                    <Object Name="M_Starting" ObjectId="aedebc1a-7039-4685-98ce-1d471deca595" />
                  </Folder>
                </Object>
                <Object Name="ST_LogicCmdIO" ObjectId="d9e4da03-9627-4669-97eb-9d4d80e11f49" />
                <Object Name="ParseLogicCmd" ObjectId="94719e33-3b96-48b6-b30b-137cf4b2830f" />
                <Object Name="BuildLogicCmd" ObjectId="c913c794-b56e-4d94-b465-42dec1dfd0be" />
                <Object Name="ST_LogicCmd" ObjectId="c4e12c65-0b92-43d3-a6f5-ab4569642ec6" />
              </Folder>
              <Object Name="F_AddElement" ObjectId="40f6ab40-9306-42a3-9cf6-d7249218b202" />
              <Object Name="FB_ProgramProcessor" ObjectId="efd5aca7-63df-4cd7-9f44-51095df5f331">
                <Object Name="P_CurrentProgram" ObjectId="3e083bec-9978-4c4c-be28-89a14e02ca1c" />
                <Object Name="P_CurrentCommand" ObjectId="a9b3f86e-c7f3-46d5-b8e5-0f2f5726a9f3" />
                <Folder Name="public">
                  <Object Name="M_CallProgram" ObjectId="7ee83db1-f29b-420a-9be4-4f2ca7f272b9" />
                  <Object Name="M_SetProgram" ObjectId="550a9481-a813-4058-b463-a7e57508483c" />
                </Folder>
                <Folder Name="protected">
                  <Object Name="M_Complete" ObjectId="e0582917-521f-4b32-958a-13d96ee8a2c1" />
                  <Object Name="M_Resetting" ObjectId="b6c5fa13-19db-4fcd-816d-e9a3304a2225" />
                  <Object Name="M_Idle" ObjectId="6d214b1c-280f-4ec0-8f28-01da6b72e176" />
                  <Object Name="M_SetPackML" ObjectId="d7e3a9d4-d0f0-4d0c-8efb-368ccde7847c" />
                  <Object Name="M_Starting" ObjectId="23554005-946f-49d9-b4ae-f96189bb2368" />
                  <Object Name="M_Execute" ObjectId="8d2d84b2-6e61-435c-93f3-9fa4b1f00fe9" />
                  <Object Name="M_Suspending" ObjectId="684fc4f2-246f-4945-8212-723c99febbb0" />
                  <Object Name="M_UnSuspending" ObjectId="406df145-b1cf-49d3-b830-5854ef901adb" />
                  <Object Name="M_Holding" ObjectId="3adf8882-b7f2-4d3c-ab00-51845770b657" />
                  <Object Name="M_UnHolding" ObjectId="db02f817-61ea-472c-a77d-74ef4b32dcbb" />
                  <Object Name="M_Aborting" ObjectId="e99199cb-ebbe-46f4-92b7-fa122f3254aa" />
                  <Object Name="M_Stopping" ObjectId="8dfa3f47-4636-4136-86b1-d7e826dcf51a" />
                  <Object Name="M_Clearing" ObjectId="22f71b16-1005-4eeb-9083-a836421fff95" />
                </Folder>
                <Object Name="P_CurrentCommandIndex" ObjectId="281f805b-eec8-45a7-8dbb-820c1b32fafe" />
              </Object>
              <Object Name="F_RoundLreal" ObjectId="6e4b5325-49a6-45c7-a436-b44a2066c3ea" />
              <Folder Name="group">
                <Object Name="FB_GroupHandler" ObjectId="f6416d9a-a888-4f6b-9b8f-cb306c7639e1">
                  <Folder Name="private">
                    <Object Name="_M_EnableGroup" ObjectId="e90d231e-c7b2-4663-a0b5-e03a8bc3210e" />
                    <Object Name="_M_SetKinematics" ObjectId="a1a7e940-4a9a-4003-92e9-8b3905bc4ae4" />
                    <Object Name="_M_DisableGroup" ObjectId="17aa3a99-9fea-4672-a49a-0a0b6efeb4bc" />
                    <Object Name="_M_ResetGroup" ObjectId="93550740-bce9-4d08-8c7b-68cd49bbfaa5" />
                  </Folder>
                  <Folder Name="public">
                    <Object Name="M_EnableGroup" ObjectId="42afec78-5201-449e-b1b2-e5ed96e5c8b5" />
                    <Object Name="M_DisableGroup" ObjectId="a0a3246f-e788-42ad-9174-44a6b0b5864f" />
                    <Object Name="M_SetKinematics" ObjectId="c272ee22-b56a-4a21-938f-13e5df726fce" />
                    <Object Name="M_ResetGroup" ObjectId="f7b0fb23-a5d3-4128-86d4-545ea8eb93f8" />
                  </Folder>
                  <Object Name="P_GroupEnabled" ObjectId="6c9aae5d-4785-4006-b6e7-a4e70fe8d11f" />
                  <Object Name="P_KinematicsSet" ObjectId="ef1554af-fa41-4177-8dda-b53f3d39fa97" />
                  <Object Name="P_GroupStatus" ObjectId="7660ae4b-8965-424f-b336-9965f704e650" />
                </Object>
                <Object Name="DUT_GroupStatus" ObjectId="8da24330-28fc-457b-af4f-78411d1da7e7" />
              </Folder>
              <Object Name="F_Checksum" ObjectId="8c4a2130-c24f-42dc-952f-31bdbb96ab6c" />
            </Folder>
            <Folder Name="GVL">
              <Object Name="GVL" ObjectId="1430d1bd-aa92-442c-bf72-190d0e907494" />
              <Object Name="PersistentVars" ObjectId="3ec4e751-fd63-4486-9e96-20e1d2f269ab" />
            </Folder>
            <Folder Name="DUT">
              <Object Name="DUT_Command" ObjectId="bc90f47c-5d1d-4a76-b85b-4fab785a8038" />
              <Object Name="DUT_Program" ObjectId="6dbc7d5e-b88c-421e-a648-117a087040e6" />
              <Object Name="DUT_StoredPosition" ObjectId="66e85fd8-6344-4340-a216-0e3ccb4605b3" />
              <Object Name="DUT_VisionRegister" ObjectId="183abbbc-75ca-4f97-a156-9832c2bf8b79" />
              <Object Name="DUT_Flags" ObjectId="22f963af-e04a-45ab-913c-8ad1ec5e38d9" />
              <Object Name="DUT_PositionController" ObjectId="862da66f-a0ac-4f98-8a1c-2d6c546e43d9" />
            </Folder>
          </Object>
          <Object Name="SoftMotion General Axis Pool" ObjectId="fc630667-0317-4bc3-b02d-1f3af074bcd7">
            <Object Name="SM_Drive_PosControl_J1" ObjectId="ea5425f8-6865-4929-8ce6-5dc4d6d3dc5e" />
            <Object Name="SM_Drive_PosControl_J2" ObjectId="f766e900-5390-4dbe-b5d5-456b0a97d174" />
            <Object Name="SM_Drive_PosControl_J3" ObjectId="fac32d5d-3aea-4666-a5e5-5873ea0cd436" />
            <Object Name="SM_Drive_PosControl_J4" ObjectId="da228668-0441-4fbf-bc36-c60a4adec10a" />
            <Object Name="SM_Drive_PosControl_J5" ObjectId="8e6e96ef-66e6-4d72-a717-6ed80b7f1646" />
            <Object Name="SM_Drive_PosControl_J6" ObjectId="90c3ab61-cd9a-4b37-bdc1-631c2a20f394" />
          </Object>
          <Object Name="&lt;Empty&gt;" ObjectId="1d76930d-dbe3-4129-812f-57306b665b04" />
          <Object Name="Onewire" ObjectId="aeb0c6fd-1757-44be-b1c8-b73c4e8df34b" />
          <Object Name="Camera device" ObjectId="4da383cb-6693-45c8-bc67-395a66a39986">
            <Object Name="&lt;Empty&gt;" ObjectId="b91cf46f-75cf-4d77-9b22-4d133d910165" />
          </Object>
          <Object Name="SPI" ObjectId="ab0b7e43-88f3-412a-8ad5-c024c7dfcf48" />
          <Object Name="I²C" ObjectId="c2edcee5-4e0d-445e-b13d-3228dc92e777">
            <Object Name="I2C_master_Bus2" ObjectId="6e09b7f1-4bf2-4519-b661-20c2fd8e38e7" />
            <Object Name="I2C_master_Bus1" ObjectId="2f7094b9-7865-4f98-a9e2-a6d1ff9d1660" />
          </Object>
          <Object Name="EtherCAT_Master_SoftMotion" ObjectId="09718da8-6762-4b3c-a790-897818c154e9">
            <Object Name="EasyCAT_32_32_rev_1" ObjectId="005b56d9-737f-4834-ad56-d9e484e05e19" />
          </Object>
        </Object>
        <Object Name="Library Manager" ObjectId="7947b9f0-2ec0-46cb-a7e5-f8f763be16e6" />
        <Object Name="Project Information" ObjectId="11c0fc3a-9bcf-4dd8-ac38-efb93363e521" />
      </ProjectStructure>
    </data>
  </addData>
</project>